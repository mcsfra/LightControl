

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Oct 12 09:09:18 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K22
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	param0,global,class=BANK0,space=1,delta=1
    58  0000                     _ANSELB	set	3897
    59  0000                     _BAUDCONbits	set	4024
    60  0000                     _CM1CON0	set	3961
    61  0000                     _CM2CON0	set	3960
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _INTCONbits	set	4082
    64  0000                     _IPR1bits	set	3999
    65  0000                     _IPR2bits	set	4002
    66  0000                     _LATA	set	3977
    67  0000                     _LATB	set	3978
    68  0000                     _LATC	set	3979
    69  0000                     _LATCbits	set	3979
    70  0000                     _OSCCON	set	4051
    71  0000                     _OSCCONbits	set	4051
    72  0000                     _PIE1bits	set	3997
    73  0000                     _PIE2bits	set	4000
    74  0000                     _PIR1bits	set	3998
    75  0000                     _PIR2bits	set	4001
    76  0000                     _PORTA	set	3968
    77  0000                     _PORTB	set	3969
    78  0000                     _PORTC	set	3970
    79  0000                     _RCONbits	set	4048
    80  0000                     _RCREG	set	4014
    81  0000                     _SPBRG1	set	4015
    82  0000                     _SPBRGH	set	4016
    83  0000                     _SSP1BUF	set	4041
    84  0000                     _SSP1CON1	set	4038
    85  0000                     _SSP1CON1bits	set	4038
    86  0000                     _SSP1CON2	set	4037
    87  0000                     _SSP1CON2bits	set	4037
    88  0000                     _SSP1STAT	set	4039
    89  0000                     _SSP1STATbits	set	4039
    90  0000                     _SSPADD	set	4040
    91  0000                     _SSPCON2bits	set	4037
    92  0000                     _T0CONbits	set	4053
    93  0000                     _T1CON	set	4045
    94  0000                     _T1CONbits	set	4045
    95  0000                     _T3CON	set	4017
    96  0000                     _T3CONbits	set	4017
    97  0000                     _TMR0H	set	4055
    98  0000                     _TMR0L	set	4054
    99  0000                     _TMR1L	set	4046
   100  0000                     _TMR3H	set	4019
   101  0000                     _TMR3L	set	4018
   102  0000                     _TRISA	set	3986
   103  0000                     _TRISB	set	3987
   104  0000                     _TRISBbits	set	3987
   105  0000                     _TRISC	set	3988
   106  0000                     _TRISCbits	set	3988
   107  0000                     _TXREG	set	4013
   108                           
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 51 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;		None               void
   121 ;; Registers used:
   122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   128 ;;      Params:         0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0
   130 ;;      Temps:          0       0       0       0       0       0       0
   131 ;;      Totals:         0       0       0       0       0       0       0
   132 ;;Total ram usage:        0 bytes
   133 ;; Hardware stack levels required when called:   13
   134 ;; This function calls:
   135 ;;		_buttonByteReceived
   136 ;;		_doDimStart
   137 ;;		_fifoEmpty
   138 ;;		_fifoGet
   139 ;;		_initAllButtons
   140 ;;		_initButtonHardware
   141 ;;		_initButtonProtocol
   142 ;;		_initDMXSend
   143 ;;		_initFlashButtonMatrix
   144 ;;		_initHardware
   145 ;;		_initI2C
   146 ;;		_initSceneChangeHardware
   147 ;;		_readTestPattern
   148 ;;		_storeSomeScenes
   149 ;; This function is called by:
   150 ;;		Startup code after reset
   151 ;; This function uses a non-reentrant model
   152 ;;
   153                           
   154                           	psect	text0
   155  000F0E                     __ptext0:
   156                           	opt stack 0
   157  000F0E                     _main:
   158                           	opt stack 18
   159                           
   160                           ;main.c: 53: initHardware();
   161                           
   162                           ;incstack = 0
   163  000F0E  ECD5  F007         	call	_initHardware	;wreg free
   164                           
   165                           ;main.c: 54: initI2C();
   166  000F12  EC73  F009         	call	_initI2C	;wreg free
   167                           
   168                           ;main.c: 61: initFlashButtonMatrix();
   169  000F16  EC77  F001         	call	_initFlashButtonMatrix	;wreg free
   170                           
   171                           ;main.c: 62: storeSomeScenes();
   172  000F1A  EC61  F000         	call	_storeSomeScenes	;wreg free
   173                           
   174                           ;main.c: 64: readTestPattern(0);
   175  000F1E  0E00               	movlw	0
   176  000F20  EC5E  F007         	call	_readTestPattern
   177                           
   178                           ;main.c: 65: readTestPattern(1);
   179  000F24  0E01               	movlw	1
   180  000F26  EC5E  F007         	call	_readTestPattern
   181                           
   182                           ;main.c: 67: initButtonProtocol();
   183  000F2A  EC8B  F009         	call	_initButtonProtocol	;wreg free
   184                           
   185                           ;main.c: 68: initButtonHardware();
   186  000F2E  EC35  F009         	call	_initButtonHardware	;wreg free
   187                           
   188                           ;main.c: 70: initAllButtons();
   189  000F32  ECF8  F007         	call	_initAllButtons	;wreg free
   190                           
   191                           ;main.c: 77: initSceneChangeHardware();
   192  000F36  EC7C  F009         	call	_initSceneChangeHardware	;wreg free
   193                           
   194                           ;main.c: 80: initDMXSend();
   195  000F3A  EC23  F009         	call	_initDMXSend	;wreg free
   196                           
   197                           ;main.c: 83: RCONbits.IPEN = 1;
   198  000F3E  8ED0               	bsf	4048,7,c	;volatile
   199                           
   200                           ;main.c: 86: INTCONbits.GIEH = 1;
   201  000F40  8EF2               	bsf	intcon,7,c	;volatile
   202                           
   203                           ;main.c: 87: INTCONbits.GIEL = 1;
   204  000F42  8CF2               	bsf	intcon,6,c	;volatile
   205                           
   206                           ;main.c: 91: doDimStart(1);
   207  000F44  0E01               	movlw	1
   208  000F46  EC84  F009         	call	_doDimStart
   209  000F4A                     l3028:
   210                           
   211                           ;main.c: 95: if (!fifoEmpty()) {
   212  000F4A  EC57  F009         	call	_fifoEmpty	;wreg free
   213  000F4E  0900               	iorlw	0
   214  000F50  A4D8               	btfss	status,2,c
   215  000F52  D7FB               	goto	l3028
   216                           
   217                           ;main.c: 96: buttonByteReceived(fifoGet());
   218  000F54  EC88  F008         	call	_fifoGet	;wreg free
   219  000F58  ECA0  F005         	call	_buttonByteReceived
   220  000F5C  D7F6               	goto	l3028
   221  000F5E                     __end_of_main:
   222                           	opt stack 0
   223                           intcon	equ	0xFF2
   224                           status	equ	0xFD8
   225                           
   226                           	psect	cinit
   227  0010A4                     __pcinit:
   228                           	opt stack 0
   229  0010A4                     start_initialization:
   230                           	opt stack 0
   231  0010A4                     __initialization:
   232                           	opt stack 0
   233                           
   234                           ; Clear objects allocated to BANK1 (256 bytes)
   235  0010A4  EE01  F000         	lfsr	0,__pbssBANK1
   236  0010A8  EE11 F000          	lfsr	1,256
   237  0010AC                     clear_0:
   238  0010AC  6AEE               	clrf	postinc0,c
   239  0010AE  50E5               	movf	postdec1,w,c
   240  0010B0  50E1               	movf	fsr1l,w,c
   241  0010B2  E1FC               	bnz	clear_0
   242  0010B4  50E2               	movf	fsr1h,w,c
   243  0010B6  E1FA               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to BANK0 (67 bytes)
   246  0010B8  EE00  F060         	lfsr	0,__pbssBANK0
   247  0010BC  0E43               	movlw	67
   248  0010BE                     clear_1:
   249  0010BE  6AEE               	clrf	postinc0,c
   250  0010C0  06E8               	decf	wreg,f,c
   251  0010C2  E1FD               	bnz	clear_1
   252                           
   253                           ; Clear objects allocated to COMRAM (23 bytes)
   254  0010C4  EE00  F02B         	lfsr	0,__pbssCOMRAM
   255  0010C8  0E17               	movlw	23
   256  0010CA                     clear_2:
   257  0010CA  6AEE               	clrf	postinc0,c
   258  0010CC  06E8               	decf	wreg,f,c
   259  0010CE  E1FD               	bnz	clear_2
   260  0010D0                     end_of_initialization:
   261                           	opt stack 0
   262  0010D0                     __end_of__initialization:
   263                           	opt stack 0
   264  0010D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   265  0010D2  6EF8               	movwf	tblptru,c
   266  0010D4  0100               	movlb	0
   267  0010D6  EF87  F007         	goto	_main	;jump to C main() function
   268                           tblptru	equ	0xFF8
   269                           intcon	equ	0xFF2
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1h	equ	0xFE2
   274                           fsr1l	equ	0xFE1
   275                           status	equ	0xFD8
   276                           
   277                           	psect	bssCOMRAM
   278  00002B                     __pbssCOMRAM:
   279                           	opt stack 0
   280  00002B                     _fifo:
   281                           	opt stack 0
   282  00002B                     	ds	16
   283  00003B                     _dataCounter:
   284                           	opt stack 0
   285  00003B                     	ds	2
   286  00003D                     _dimmingInProgress:
   287                           	opt stack 0
   288  00003D                     	ds	1
   289  00003E                     _dmxSendState:
   290                           	opt stack 0
   291  00003E                     	ds	1
   292  00003F                     _fifoIn:
   293                           	opt stack 0
   294  00003F                     	ds	1
   295  000040                     _fifoOut:
   296                           	opt stack 0
   297  000040                     	ds	1
   298  000041                     _targetScene:
   299                           	opt stack 0
   300  000041                     	ds	1
   301                           tblptru	equ	0xFF8
   302                           intcon	equ	0xFF2
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1h	equ	0xFE2
   307                           fsr1l	equ	0xFE1
   308                           status	equ	0xFD8
   309                           
   310                           	psect	bssBANK0
   311  000060                     __pbssBANK0:
   312                           	opt stack 0
   313  000060                     _channelLevel:
   314                           	opt stack 0
   315  000060                     	ds	64
   316  0000A0                     _button:
   317                           	opt stack 0
   318  0000A0                     	ds	1
   319  0000A1                     _device:
   320                           	opt stack 0
   321  0000A1                     	ds	1
   322  0000A2                     _protocolState:
   323                           	opt stack 0
   324  0000A2                     	ds	1
   325                           tblptru	equ	0xFF8
   326                           intcon	equ	0xFF2
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1h	equ	0xFE2
   331                           fsr1l	equ	0xFE1
   332                           status	equ	0xFD8
   333                           
   334                           	psect	bssBANK1
   335  000100                     __pbssBANK1:
   336                           	opt stack 0
   337  000100                     _buttons:
   338                           	opt stack 0
   339  000100                     	ds	256
   340                           tblptru	equ	0xFF8
   341                           intcon	equ	0xFF2
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1h	equ	0xFE2
   346                           fsr1l	equ	0xFE1
   347                           status	equ	0xFD8
   348                           
   349                           	psect	cstackBANK0
   350  0000A3                     __pcstackBANK0:
   351                           	opt stack 0
   352  0000A3                     ??_fifoPut:
   353  0000A3                     buttonsReset@i:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x0
   357  0000A3                     	ds	1
   358  0000A4                     buttonsReset@bp:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x1
   362  0000A4                     	ds	1
   363  0000A5                     fifoPut@in:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x2
   367  0000A5                     	ds	1
   368  0000A6                     ??_high_isr:
   369                           
   370                           ; 0 bytes @ 0x3
   371  0000A6                     	ds	14
   372  0000B4                     high_isr@data:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x11
   376  0000B4                     	ds	1
   377  0000B5                     ??_fifoEmpty:
   378  0000B5                     ??_fifoGet:
   379  0000B5                     ??_WriteI2C1:
   380  0000B5                     ??_ReadI2C1:
   381  0000B5                     ?_findButton:
   382                           	opt stack 0
   383  0000B5                     ?___wmul:
   384                           	opt stack 0
   385  0000B5                     initButton@bn:
   386                           	opt stack 0
   387  0000B5                     doDimStart@program:
   388                           	opt stack 0
   389  0000B5                     OpenI2C1@slew:
   390                           	opt stack 0
   391  0000B5                     buttonReceived@bp:
   392                           	opt stack 0
   393  0000B5                     ___wmul@multiplier:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x12
   397  0000B5                     	ds	1
   398  0000B6                     initButton@bf:
   399                           	opt stack 0
   400  0000B6                     OpenI2C1@sync_mode:
   401                           	opt stack 0
   402  0000B6                     WriteI2C1@data_out:
   403                           	opt stack 0
   404  0000B6                     getsI2C1@rdptr:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x13
   408  0000B6                     	ds	1
   409  0000B7                     ??_EEAckPolling1:
   410  0000B7                     findButton@code:
   411                           	opt stack 0
   412  0000B7                     initButton@i:
   413                           	opt stack 0
   414  0000B7                     fifoGet@v:
   415                           	opt stack 0
   416  0000B7                     ___wmul@multiplicand:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x14
   420  0000B7                     	ds	1
   421  0000B8                     findButton@i:
   422                           	opt stack 0
   423  0000B8                     EEAckPolling1@control:
   424                           	opt stack 0
   425  0000B8                     getsI2C1@length:
   426                           	opt stack 0
   427  0000B8                     initButton@bp:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x15
   431  0000B8                     	ds	1
   432  0000B9                     ??_getsI2C1:
   433  0000B9                     decodeButton@code:
   434                           	opt stack 0
   435  0000B9                     HDByteWriteI2C@HighAdd:
   436                           	opt stack 0
   437  0000B9                     ___wmul@product:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x16
   441  0000B9                     	ds	1
   442  0000BA                     HDByteWriteI2C@LowAdd:
   443                           	opt stack 0
   444  0000BA                     HDByteReadI2C@HighAdd:
   445                           	opt stack 0
   446  0000BA                     decodeButton@bp:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x17
   450  0000BA                     	ds	1
   451  0000BB                     ?_sceneAdress:
   452                           	opt stack 0
   453  0000BB                     sceneAdress@channel:
   454                           	opt stack 0
   455  0000BB                     HDByteWriteI2C@data:
   456                           	opt stack 0
   457  0000BB                     HDByteReadI2C@LowAdd:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x18
   461  0000BB                     	ds	1
   462  0000BC                     ??_buttonByteReceived:
   463  0000BC                     ??_HDByteWriteI2C:
   464  0000BC                     HDByteReadI2C@data:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x19
   468  0000BC                     	ds	1
   469  0000BD                     sceneAdress@scene:
   470                           	opt stack 0
   471  0000BD                     HDByteWriteI2C@ControlByte:
   472                           	opt stack 0
   473  0000BD                     buttonByteReceived@checksum:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x1A
   477  0000BD                     	ds	1
   478  0000BE                     storeAButton@program:
   479                           	opt stack 0
   480  0000BE                     HDByteReadI2C@length:
   481                           	opt stack 0
   482  0000BE                     buttonByteReceived@code:
   483                           	opt stack 0
   484  0000BE                     sceneAdress@baseAdress:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1B
   488  0000BE                     	ds	1
   489  0000BF                     ??_HDByteReadI2C:
   490  0000BF                     storeAButton@button:
   491                           	opt stack 0
   492  0000BF                     buttonByteReceived@b:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x1C
   496  0000BF                     	ds	1
   497  0000C0                     initFlashButtonMatrix@i:
   498                           	opt stack 0
   499  0000C0                     storeASceneChannel@channel:
   500                           	opt stack 0
   501  0000C0                     HDByteReadI2C@ControlByte:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x1D
   505  0000C0                     	ds	1
   506  0000C1                     readAButton@button:
   507                           	opt stack 0
   508  0000C1                     storeASceneChannel@scp:
   509                           	opt stack 0
   510  0000C1                     readTestPattern@r:
   511                           	opt stack 0
   512                           
   513                           ; 32 bytes @ 0x1E
   514  0000C1                     	ds	1
   515  0000C2                     readAButton@program:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x1F
   519  0000C2                     	ds	1
   520  0000C3                     ??_storeASceneChannel:
   521  0000C3                     initAllButtons@buttonIndex:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x20
   525  0000C3                     	ds	1
   526  0000C4                     initAllButtons@buttonProgram:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x21
   530  0000C4                     	ds	1
   531  0000C5                     initAllButtons@i:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x22
   535  0000C5                     	ds	1
   536  0000C6                     storeASceneChannel@scene:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x23
   540  0000C6                     	ds	1
   541  0000C7                     storeASceneChannel@baseAdress:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x24
   545  0000C7                     	ds	2
   546  0000C9                     storeSomeScenes@sc:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x26
   550  0000C9                     	ds	24
   551  0000E1                     readTestPattern@bank:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x3E
   555  0000E1                     	ds	1
   556  0000E2                     tblptru	equ	0xFF8
   557                           intcon	equ	0xFF2
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1h	equ	0xFE2
   562                           fsr1l	equ	0xFE1
   563                           status	equ	0xFD8
   564                           
   565                           ; 0 bytes @ 0x3F
   566                           
   567                           	psect	cstackCOMRAM
   568  000001                     __pcstackCOMRAM:
   569                           	opt stack 0
   570  000001                     ??_sendDMX:
   571  000001                     ??i1_ReadI2C1:
   572  000001                     ??i1_WriteI2C1:
   573  000001                     ?i1___wmul:
   574                           	opt stack 0
   575  000001                     i1___wmul@multiplier:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x0
   579  000001                     	ds	1
   580  000002                     i1WriteI2C1@data_out:
   581                           	opt stack 0
   582  000002                     _sendDMX$953:
   583                           	opt stack 0
   584  000002                     i1getsI2C1@rdptr:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x1
   588  000002                     	ds	1
   589  000003                     i1___wmul@multiplicand:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x2
   593  000003                     	ds	1
   594  000004                     i1getsI2C1@length:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x3
   598  000004                     	ds	1
   599  000005                     ??i1_getsI2C1:
   600  000005                     i1___wmul@product:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x4
   604  000005                     	ds	1
   605  000006                     i1HDByteReadI2C@HighAdd:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x5
   609  000006                     	ds	1
   610  000007                     ?i1_sceneAdress:
   611                           	opt stack 0
   612  000007                     i1sceneAdress@channel:
   613                           	opt stack 0
   614  000007                     i1HDByteReadI2C@LowAdd:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x6
   618  000007                     	ds	1
   619  000008                     i1HDByteReadI2C@data:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x7
   623  000008                     	ds	1
   624  000009                     i1sceneAdress@scene:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x8
   628  000009                     	ds	1
   629  00000A                     i1HDByteReadI2C@length:
   630                           	opt stack 0
   631  00000A                     i1sceneAdress@baseAdress:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x9
   635  00000A                     	ds	1
   636  00000B                     ??i1_HDByteReadI2C:
   637                           
   638                           ; 0 bytes @ 0xA
   639  00000B                     	ds	1
   640  00000C                     i1HDByteReadI2C@ControlByte:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0xB
   644  00000C                     	ds	1
   645  00000D                     readSceneChannel@channel:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0xC
   649  00000D                     	ds	1
   650  00000E                     readSceneChannel@scp:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0xD
   654  00000E                     	ds	2
   655  000010                     ??_readSceneChannel:
   656                           
   657                           ; 0 bytes @ 0xF
   658  000010                     	ds	3
   659  000013                     readSceneChannel@scene:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x12
   663  000013                     	ds	1
   664  000014                     readSceneChannel@baseAdress:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x13
   668  000014                     	ds	2
   669  000016                     doDimStep@sc:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x15
   673  000016                     	ds	3
   674  000019                     doDimStep@i:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x18
   678  000019                     	ds	1
   679  00001A                     ??_low_isr:
   680                           
   681                           ; 0 bytes @ 0x19
   682  00001A                     	ds	17
   683                           tblptru	equ	0xFF8
   684                           intcon	equ	0xFF2
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           postdec1	equ	0xFE5
   688                           fsr1h	equ	0xFE2
   689                           fsr1l	equ	0xFE1
   690                           status	equ	0xFD8
   691                           
   692 ;; *************** function _storeSomeScenes *****************
   693 ;; Defined at:
   694 ;;		line 132 in file "scenes.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  sc              3   38[BANK0 ] struct _scenechannel
   699 ;;  i               1    0        unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;		None               void
   702 ;; Registers used:
   703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   709 ;;      Params:         0       0       0       0       0       0       0
   710 ;;      Locals:         0       3       0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0
   712 ;;      Totals:         0       3       0       0       0       0       0
   713 ;;Total ram usage:        3 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:   12
   716 ;; This function calls:
   717 ;;		_storeASceneChannel
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text1
   724  0000C2                     __ptext1:
   725                           	opt stack 0
   726  0000C2                     _storeSomeScenes:
   727                           	opt stack 18
   728                           
   729                           ;scenes.c: 134: SCENECHANNEL sc;
   730                           ;scenes.c: 135: unsigned char i;
   731                           ;scenes.c: 137: sc.isTransparent = 0;
   732                           
   733                           ;incstack = 0
   734  0000C2  0E00               	movlw	0
   735  0000C4  0100               	movlb	0	; () banked
   736  0000C6  6FCA               	movwf	(storeSomeScenes@sc+1)& (0+255),b
   737                           
   738                           ;scenes.c: 138: sc.dimSpeed = 0x5A;
   739  0000C8  0E5A               	movlw	90
   740  0000CA  0100               	movlb	0	; () banked
   741  0000CC  6FCB               	movwf	(storeSomeScenes@sc+2)& (0+255),b
   742                           
   743                           ;scenes.c: 142: sc.level = 0x33; storeASceneChannel(1,0,&sc);
   744  0000CE  0E33               	movlw	51
   745  0000D0  0100               	movlb	0	; () banked
   746  0000D2  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   747                           
   748                           ; BSR set to: 0
   749  0000D4  0E00               	movlw	0
   750  0000D6  0100               	movlb	0	; () banked
   751  0000D8  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   752  0000DA  0100               	movlb	0	; () banked
   753  0000DC  0E00               	movlw	high storeSomeScenes@sc
   754  0000DE  0100               	movlb	0	; () banked
   755  0000E0  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   756  0000E2  0100               	movlb	0	; () banked
   757  0000E4  0EC9               	movlw	low storeSomeScenes@sc
   758  0000E6  0100               	movlb	0	; () banked
   759  0000E8  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   760  0000EA  0E01               	movlw	1
   761  0000EC  ECAE  F003         	call	_storeASceneChannel
   762                           
   763                           ;scenes.c: 143: sc.level = 0x66; storeASceneChannel(1,1,&sc);
   764  0000F0  0E66               	movlw	102
   765  0000F2  0100               	movlb	0	; () banked
   766  0000F4  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   767  0000F6  0E01               	movlw	1
   768  0000F8  0100               	movlb	0	; () banked
   769  0000FA  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   770  0000FC  0100               	movlb	0	; () banked
   771  0000FE  0E00               	movlw	high storeSomeScenes@sc
   772  000100  0100               	movlb	0	; () banked
   773  000102  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   774  000104  0100               	movlb	0	; () banked
   775  000106  0EC9               	movlw	low storeSomeScenes@sc
   776  000108  0100               	movlb	0	; () banked
   777  00010A  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   778  00010C  0E01               	movlw	1
   779  00010E  ECAE  F003         	call	_storeASceneChannel
   780                           
   781                           ;scenes.c: 144: sc.level = 0x99; storeASceneChannel(1,2,&sc);
   782  000112  0E99               	movlw	153
   783  000114  0100               	movlb	0	; () banked
   784  000116  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   785                           
   786                           ; BSR set to: 0
   787  000118  0E02               	movlw	2
   788  00011A  0100               	movlb	0	; () banked
   789  00011C  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   790  00011E  0100               	movlb	0	; () banked
   791  000120  0E00               	movlw	high storeSomeScenes@sc
   792  000122  0100               	movlb	0	; () banked
   793  000124  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   794  000126  0100               	movlb	0	; () banked
   795  000128  0EC9               	movlw	low storeSomeScenes@sc
   796  00012A  0100               	movlb	0	; () banked
   797  00012C  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   798  00012E  0E01               	movlw	1
   799  000130  ECAE  F003         	call	_storeASceneChannel
   800                           
   801                           ;scenes.c: 145: sc.level = 0xBB; storeASceneChannel(1,3,&sc);
   802  000134  0EBB               	movlw	187
   803  000136  0100               	movlb	0	; () banked
   804  000138  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   805                           
   806                           ; BSR set to: 0
   807  00013A  0E03               	movlw	3
   808  00013C  0100               	movlb	0	; () banked
   809  00013E  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   810  000140  0100               	movlb	0	; () banked
   811  000142  0E00               	movlw	high storeSomeScenes@sc
   812  000144  0100               	movlb	0	; () banked
   813  000146  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   814  000148  0100               	movlb	0	; () banked
   815  00014A  0EC9               	movlw	low storeSomeScenes@sc
   816  00014C  0100               	movlb	0	; () banked
   817  00014E  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   818  000150  0E01               	movlw	1
   819  000152  ECAE  F003         	call	_storeASceneChannel
   820                           
   821                           ;scenes.c: 146: sc.level = 0xDD; storeASceneChannel(1,4,&sc);
   822  000156  0EDD               	movlw	221
   823  000158  0100               	movlb	0	; () banked
   824  00015A  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   825  00015C  0E04               	movlw	4
   826  00015E  0100               	movlb	0	; () banked
   827  000160  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   828  000162  0100               	movlb	0	; () banked
   829  000164  0E00               	movlw	high storeSomeScenes@sc
   830  000166  0100               	movlb	0	; () banked
   831  000168  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   832  00016A  0100               	movlb	0	; () banked
   833  00016C  0EC9               	movlw	low storeSomeScenes@sc
   834  00016E  0100               	movlb	0	; () banked
   835  000170  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   836  000172  0E01               	movlw	1
   837  000174  ECAE  F003         	call	_storeASceneChannel
   838                           
   839                           ;scenes.c: 148: sc.level = 0x10; storeASceneChannel(1,5,&sc);
   840  000178  0E10               	movlw	16
   841  00017A  0100               	movlb	0	; () banked
   842  00017C  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   843                           
   844                           ; BSR set to: 0
   845  00017E  0E05               	movlw	5
   846  000180  0100               	movlb	0	; () banked
   847  000182  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   848  000184  0100               	movlb	0	; () banked
   849  000186  0E00               	movlw	high storeSomeScenes@sc
   850  000188  0100               	movlb	0	; () banked
   851  00018A  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   852  00018C  0100               	movlb	0	; () banked
   853  00018E  0EC9               	movlw	low storeSomeScenes@sc
   854  000190  0100               	movlb	0	; () banked
   855  000192  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   856  000194  0E01               	movlw	1
   857  000196  ECAE  F003         	call	_storeASceneChannel
   858                           
   859                           ;scenes.c: 149: sc.level = 0x10; storeASceneChannel(1,6,&sc);
   860  00019A  0E10               	movlw	16
   861  00019C  0100               	movlb	0	; () banked
   862  00019E  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   863                           
   864                           ; BSR set to: 0
   865  0001A0  0E06               	movlw	6
   866  0001A2  0100               	movlb	0	; () banked
   867  0001A4  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   868  0001A6  0100               	movlb	0	; () banked
   869  0001A8  0E00               	movlw	high storeSomeScenes@sc
   870  0001AA  0100               	movlb	0	; () banked
   871  0001AC  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   872  0001AE  0100               	movlb	0	; () banked
   873  0001B0  0EC9               	movlw	low storeSomeScenes@sc
   874  0001B2  0100               	movlb	0	; () banked
   875  0001B4  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   876  0001B6  0E01               	movlw	1
   877  0001B8  ECAE  F003         	call	_storeASceneChannel
   878                           
   879                           ;scenes.c: 150: sc.level = 0x10; storeASceneChannel(1,7,&sc);
   880  0001BC  0E10               	movlw	16
   881  0001BE  0100               	movlb	0	; () banked
   882  0001C0  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   883  0001C2  0E07               	movlw	7
   884  0001C4  0100               	movlb	0	; () banked
   885  0001C6  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   886  0001C8  0100               	movlb	0	; () banked
   887  0001CA  0E00               	movlw	high storeSomeScenes@sc
   888  0001CC  0100               	movlb	0	; () banked
   889  0001CE  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   890  0001D0  0100               	movlb	0	; () banked
   891  0001D2  0EC9               	movlw	low storeSomeScenes@sc
   892  0001D4  0100               	movlb	0	; () banked
   893  0001D6  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   894  0001D8  0E01               	movlw	1
   895  0001DA  ECAE  F003         	call	_storeASceneChannel
   896                           
   897                           ;scenes.c: 154: sc.level = 0x0A; storeASceneChannel(2,0,&sc);
   898  0001DE  0E0A               	movlw	10
   899  0001E0  0100               	movlb	0	; () banked
   900  0001E2  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   901                           
   902                           ; BSR set to: 0
   903  0001E4  0E00               	movlw	0
   904  0001E6  0100               	movlb	0	; () banked
   905  0001E8  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   906  0001EA  0100               	movlb	0	; () banked
   907  0001EC  0E00               	movlw	high storeSomeScenes@sc
   908  0001EE  0100               	movlb	0	; () banked
   909  0001F0  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   910  0001F2  0100               	movlb	0	; () banked
   911  0001F4  0EC9               	movlw	low storeSomeScenes@sc
   912  0001F6  0100               	movlb	0	; () banked
   913  0001F8  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   914  0001FA  0E02               	movlw	2
   915  0001FC  ECAE  F003         	call	_storeASceneChannel
   916                           
   917                           ;scenes.c: 155: sc.level = 0x0A; storeASceneChannel(2,1,&sc);
   918  000200  0E0A               	movlw	10
   919  000202  0100               	movlb	0	; () banked
   920  000204  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   921                           
   922                           ; BSR set to: 0
   923  000206  0E01               	movlw	1
   924  000208  0100               	movlb	0	; () banked
   925  00020A  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   926  00020C  0100               	movlb	0	; () banked
   927  00020E  0E00               	movlw	high storeSomeScenes@sc
   928  000210  0100               	movlb	0	; () banked
   929  000212  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   930  000214  0100               	movlb	0	; () banked
   931  000216  0EC9               	movlw	low storeSomeScenes@sc
   932  000218  0100               	movlb	0	; () banked
   933  00021A  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   934  00021C  0E02               	movlw	2
   935  00021E  ECAE  F003         	call	_storeASceneChannel
   936                           
   937                           ;scenes.c: 156: sc.level = 0x0A; storeASceneChannel(2,2,&sc);
   938  000222  0E0A               	movlw	10
   939  000224  0100               	movlb	0	; () banked
   940  000226  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   941  000228  0E02               	movlw	2
   942  00022A  0100               	movlb	0	; () banked
   943  00022C  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   944  00022E  0100               	movlb	0	; () banked
   945  000230  0E00               	movlw	high storeSomeScenes@sc
   946  000232  0100               	movlb	0	; () banked
   947  000234  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   948  000236  0100               	movlb	0	; () banked
   949  000238  0EC9               	movlw	low storeSomeScenes@sc
   950  00023A  0100               	movlb	0	; () banked
   951  00023C  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   952  00023E  0E02               	movlw	2
   953  000240  ECAE  F003         	call	_storeASceneChannel
   954                           
   955                           ;scenes.c: 157: sc.level = 0x0A; storeASceneChannel(2,3,&sc);
   956  000244  0E0A               	movlw	10
   957  000246  0100               	movlb	0	; () banked
   958  000248  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   959                           
   960                           ; BSR set to: 0
   961  00024A  0E03               	movlw	3
   962  00024C  0100               	movlb	0	; () banked
   963  00024E  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   964  000250  0100               	movlb	0	; () banked
   965  000252  0E00               	movlw	high storeSomeScenes@sc
   966  000254  0100               	movlb	0	; () banked
   967  000256  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   968  000258  0100               	movlb	0	; () banked
   969  00025A  0EC9               	movlw	low storeSomeScenes@sc
   970  00025C  0100               	movlb	0	; () banked
   971  00025E  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   972  000260  0E02               	movlw	2
   973  000262  ECAE  F003         	call	_storeASceneChannel
   974                           
   975                           ;scenes.c: 158: sc.level = 0x0A; storeASceneChannel(2,4,&sc);
   976  000266  0E0A               	movlw	10
   977  000268  0100               	movlb	0	; () banked
   978  00026A  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
   979                           
   980                           ; BSR set to: 0
   981  00026C  0E04               	movlw	4
   982  00026E  0100               	movlb	0	; () banked
   983  000270  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
   984  000272  0100               	movlb	0	; () banked
   985  000274  0E00               	movlw	high storeSomeScenes@sc
   986  000276  0100               	movlb	0	; () banked
   987  000278  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
   988  00027A  0100               	movlb	0	; () banked
   989  00027C  0EC9               	movlw	low storeSomeScenes@sc
   990  00027E  0100               	movlb	0	; () banked
   991  000280  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
   992  000282  0E02               	movlw	2
   993  000284  ECAE  F003         	call	_storeASceneChannel
   994                           
   995                           ;scenes.c: 160: sc.level = 0xFF; storeASceneChannel(2,5,&sc);
   996  000288  0100               	movlb	0	; () banked
   997  00028A  69C9               	setf	storeSomeScenes@sc& (0+255),b
   998                           
   999                           ; BSR set to: 0
  1000  00028C  0E05               	movlw	5
  1001  00028E  0100               	movlb	0	; () banked
  1002  000290  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
  1003  000292  0100               	movlb	0	; () banked
  1004  000294  0E00               	movlw	high storeSomeScenes@sc
  1005  000296  0100               	movlb	0	; () banked
  1006  000298  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
  1007  00029A  0100               	movlb	0	; () banked
  1008  00029C  0EC9               	movlw	low storeSomeScenes@sc
  1009  00029E  0100               	movlb	0	; () banked
  1010  0002A0  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
  1011  0002A2  0E02               	movlw	2
  1012  0002A4  ECAE  F003         	call	_storeASceneChannel
  1013                           
  1014                           ;scenes.c: 161: sc.level = 0xDD; storeASceneChannel(2,6,&sc);
  1015  0002A8  0EDD               	movlw	221
  1016  0002AA  0100               	movlb	0	; () banked
  1017  0002AC  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
  1018                           
  1019                           ; BSR set to: 0
  1020  0002AE  0E06               	movlw	6
  1021  0002B0  0100               	movlb	0	; () banked
  1022  0002B2  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
  1023  0002B4  0100               	movlb	0	; () banked
  1024  0002B6  0E00               	movlw	high storeSomeScenes@sc
  1025  0002B8  0100               	movlb	0	; () banked
  1026  0002BA  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
  1027  0002BC  0100               	movlb	0	; () banked
  1028  0002BE  0EC9               	movlw	low storeSomeScenes@sc
  1029  0002C0  0100               	movlb	0	; () banked
  1030  0002C2  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
  1031  0002C4  0E02               	movlw	2
  1032  0002C6  ECAE  F003         	call	_storeASceneChannel
  1033                           
  1034                           ;scenes.c: 162: sc.level = 0x88; storeASceneChannel(2,7,&sc);
  1035  0002CA  0E88               	movlw	136
  1036  0002CC  0100               	movlb	0	; () banked
  1037  0002CE  6FC9               	movwf	storeSomeScenes@sc& (0+255),b
  1038  0002D0  0E07               	movlw	7
  1039  0002D2  0100               	movlb	0	; () banked
  1040  0002D4  6FC0               	movwf	storeASceneChannel@channel& (0+255),b
  1041  0002D6  0100               	movlb	0	; () banked
  1042  0002D8  0E00               	movlw	high storeSomeScenes@sc
  1043  0002DA  0100               	movlb	0	; () banked
  1044  0002DC  6FC2               	movwf	(storeASceneChannel@scp+1)& (0+255),b
  1045  0002DE  0100               	movlb	0	; () banked
  1046  0002E0  0EC9               	movlw	low storeSomeScenes@sc
  1047  0002E2  0100               	movlb	0	; () banked
  1048  0002E4  6FC1               	movwf	storeASceneChannel@scp& (0+255),b
  1049  0002E6  0E02               	movlw	2
  1050  0002E8  ECAE  F003         	call	_storeASceneChannel
  1051  0002EC  0012               	return	
  1052  0002EE                     __end_of_storeSomeScenes:
  1053                           	opt stack 0
  1054                           tblptru	equ	0xFF8
  1055                           intcon	equ	0xFF2
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postdec1	equ	0xFE5
  1059                           fsr1h	equ	0xFE2
  1060                           fsr1l	equ	0xFE1
  1061                           status	equ	0xFD8
  1062                           
  1063 ;; *************** function _storeASceneChannel *****************
  1064 ;; Defined at:
  1065 ;;		line 121 in file "scenes.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  scene           1    wreg     unsigned char 
  1068 ;;  channel         1   29[BANK0 ] unsigned char 
  1069 ;;  scp             2   30[BANK0 ] PTR struct _scenechannel
  1070 ;;		 -> storeSomeScenes@sc(3), 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  scene           1   35[BANK0 ] unsigned char 
  1073 ;;  baseAdress      2   36[BANK0 ] unsigned int 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;		None               void
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1083 ;;      Params:         0       3       0       0       0       0       0
  1084 ;;      Locals:         0       3       0       0       0       0       0
  1085 ;;      Temps:          0       3       0       0       0       0       0
  1086 ;;      Totals:         0       9       0       0       0       0       0
  1087 ;;Total ram usage:        9 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:   11
  1090 ;; This function calls:
  1091 ;;		_HDByteWriteI2C
  1092 ;;		_sceneAdress
  1093 ;; This function is called by:
  1094 ;;		_storeSomeScenes
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text2
  1099  00075C                     __ptext2:
  1100                           	opt stack 0
  1101  00075C                     _storeASceneChannel:
  1102                           	opt stack 18
  1103                           
  1104                           ;incstack = 0
  1105                           ;storeASceneChannel@scene stored from wreg
  1106  00075C  0100               	movlb	0	; () banked
  1107  00075E  6FC6               	movwf	storeASceneChannel@scene& (0+255),b
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;scenes.c: 123: unsigned int baseAdress = sceneAdress(scene, channel);
  1111  000760  C0C0  F0BB         	movff	storeASceneChannel@channel,sceneAdress@channel
  1112  000764  0100               	movlb	0	; () banked
  1113  000766  51C6               	movf	storeASceneChannel@scene& (0+255),w,b
  1114  000768  EC9B  F006         	call	_sceneAdress
  1115  00076C  0100               	movlb	0	; () banked
  1116  00076E  C0BB  F0C7         	movff	?_sceneAdress,storeASceneChannel@baseAdress
  1117  000772  0100               	movlb	0	; () banked
  1118  000774  C0BC  F0C8         	movff	?_sceneAdress+1,storeASceneChannel@baseAdress+1
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;scenes.c: 125: HDByteWriteI2C( 0xA0, (unsigned char )(baseAdress >> 8) , (unsigned char
      +                           )(baseAdress & 0xFF) , scp -> level );
  1122  000778  0100               	movlb	0	; () banked
  1123  00077A  C0C8  F0C3         	movff	storeASceneChannel@baseAdress+1,??_storeASceneChannel
  1124  00077E  C0C3  F0C4         	movff	??_storeASceneChannel,??_storeASceneChannel+1
  1125  000782  0100               	movlb	0	; () banked
  1126  000784  6BC5               	clrf	(??_storeASceneChannel+2)& (0+255),b
  1127  000786  0100               	movlb	0	; () banked
  1128  000788  51C4               	movf	(??_storeASceneChannel+1)& (0+255),w,b
  1129  00078A  0100               	movlb	0	; () banked
  1130  00078C  6FB9               	movwf	HDByteWriteI2C@HighAdd& (0+255),b
  1131  00078E  C0C7  F0BA         	movff	storeASceneChannel@baseAdress,HDByteWriteI2C@LowAdd
  1132  000792  C0C1  FFD9         	movff	storeASceneChannel@scp,fsr2l
  1133  000796  C0C2  FFDA         	movff	storeASceneChannel@scp+1,fsr2h
  1134  00079A  50DF               	movf	indf2,w,c
  1135  00079C  0100               	movlb	0	; () banked
  1136  00079E  6FBB               	movwf	HDByteWriteI2C@data& (0+255),b
  1137  0007A0  0EA0               	movlw	160
  1138  0007A2  ECD5  F002         	call	_HDByteWriteI2C
  1139                           
  1140                           ;scenes.c: 126: HDByteWriteI2C( 0xA0, (unsigned char )(baseAdress >> 8) , (unsigned char
      +                           )(baseAdress & 0xFF)+1 , scp -> isTransparent);
  1141  0007A6  0100               	movlb	0	; () banked
  1142  0007A8  C0C8  F0C3         	movff	storeASceneChannel@baseAdress+1,??_storeASceneChannel
  1143  0007AC  C0C3  F0C4         	movff	??_storeASceneChannel,??_storeASceneChannel+1
  1144  0007B0  0100               	movlb	0	; () banked
  1145  0007B2  6BC5               	clrf	(??_storeASceneChannel+2)& (0+255),b
  1146  0007B4  0100               	movlb	0	; () banked
  1147  0007B6  51C4               	movf	(??_storeASceneChannel+1)& (0+255),w,b
  1148  0007B8  0100               	movlb	0	; () banked
  1149  0007BA  6FB9               	movwf	HDByteWriteI2C@HighAdd& (0+255),b
  1150  0007BC  0100               	movlb	0	; () banked
  1151  0007BE  29C7               	incf	storeASceneChannel@baseAdress& (0+255),w,b
  1152  0007C0  0100               	movlb	0	; () banked
  1153  0007C2  6FBA               	movwf	HDByteWriteI2C@LowAdd& (0+255),b
  1154  0007C4  0100               	movlb	0	; () banked
  1155  0007C6  EE20 F001          	lfsr	2,1
  1156  0007CA  0100               	movlb	0	; () banked
  1157  0007CC  51C1               	movf	storeASceneChannel@scp& (0+255),w,b
  1158  0007CE  26D9               	addwf	fsr2l,f,c
  1159  0007D0  0100               	movlb	0	; () banked
  1160  0007D2  51C2               	movf	(storeASceneChannel@scp+1)& (0+255),w,b
  1161  0007D4  22DA               	addwfc	fsr2h,f,c
  1162  0007D6  50DF               	movf	indf2,w,c
  1163  0007D8  0100               	movlb	0	; () banked
  1164  0007DA  6FBB               	movwf	HDByteWriteI2C@data& (0+255),b
  1165  0007DC  0EA0               	movlw	160
  1166  0007DE  ECD5  F002         	call	_HDByteWriteI2C
  1167                           
  1168                           ;scenes.c: 127: HDByteWriteI2C( 0xA0, (unsigned char )(baseAdress >> 8) , (unsigned char
      +                           )(baseAdress & 0xFF)+2 , scp -> dimSpeed);
  1169  0007E2  0100               	movlb	0	; () banked
  1170  0007E4  C0C8  F0C3         	movff	storeASceneChannel@baseAdress+1,??_storeASceneChannel
  1171  0007E8  C0C3  F0C4         	movff	??_storeASceneChannel,??_storeASceneChannel+1
  1172  0007EC  0100               	movlb	0	; () banked
  1173  0007EE  6BC5               	clrf	(??_storeASceneChannel+2)& (0+255),b
  1174  0007F0  0100               	movlb	0	; () banked
  1175  0007F2  51C4               	movf	(??_storeASceneChannel+1)& (0+255),w,b
  1176  0007F4  0100               	movlb	0	; () banked
  1177  0007F6  6FB9               	movwf	HDByteWriteI2C@HighAdd& (0+255),b
  1178  0007F8  0100               	movlb	0	; () banked
  1179  0007FA  51C7               	movf	storeASceneChannel@baseAdress& (0+255),w,b
  1180  0007FC  0F02               	addlw	2
  1181  0007FE  0100               	movlb	0	; () banked
  1182  000800  6FBA               	movwf	HDByteWriteI2C@LowAdd& (0+255),b
  1183  000802  0100               	movlb	0	; () banked
  1184  000804  EE20 F002          	lfsr	2,2
  1185  000808  0100               	movlb	0	; () banked
  1186  00080A  51C1               	movf	storeASceneChannel@scp& (0+255),w,b
  1187  00080C  26D9               	addwf	fsr2l,f,c
  1188  00080E  0100               	movlb	0	; () banked
  1189  000810  51C2               	movf	(storeASceneChannel@scp+1)& (0+255),w,b
  1190  000812  22DA               	addwfc	fsr2h,f,c
  1191  000814  50DF               	movf	indf2,w,c
  1192  000816  0100               	movlb	0	; () banked
  1193  000818  6FBB               	movwf	HDByteWriteI2C@data& (0+255),b
  1194  00081A  0EA0               	movlw	160
  1195  00081C  ECD5  F002         	call	_HDByteWriteI2C
  1196  000820  0012               	return	
  1197  000822                     __end_of_storeASceneChannel:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           intcon	equ	0xFF2
  1201                           postinc0	equ	0xFEE
  1202                           wreg	equ	0xFE8
  1203                           postdec1	equ	0xFE5
  1204                           fsr1h	equ	0xFE2
  1205                           fsr1l	equ	0xFE1
  1206                           indf2	equ	0xFDF
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _sceneAdress *****************
  1212 ;; Defined at:
  1213 ;;		line 84 in file "scenes.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  scene           1    wreg     unsigned char 
  1216 ;;  channel         1   24[BANK0 ] unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  scene           1   26[BANK0 ] unsigned char 
  1219 ;;  baseAdress      2   27[BANK0 ] unsigned int 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2   24[BANK0 ] unsigned int 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1229 ;;      Params:         0       2       0       0       0       0       0
  1230 ;;      Locals:         0       3       0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0
  1232 ;;      Totals:         0       5       0       0       0       0       0
  1233 ;;Total ram usage:        5 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    9
  1236 ;; This function calls:
  1237 ;;		___wmul
  1238 ;; This function is called by:
  1239 ;;		_storeASceneChannel
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text3
  1244  000D36                     __ptext3:
  1245                           	opt stack 0
  1246  000D36                     _sceneAdress:
  1247                           	opt stack 19
  1248                           
  1249                           ;incstack = 0
  1250                           ;sceneAdress@scene stored from wreg
  1251  000D36  0100               	movlb	0	; () banked
  1252  000D38  6FBD               	movwf	sceneAdress@scene& (0+255),b
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;scenes.c: 86: unsigned int baseAdress = 0x0100;
  1256  000D3A  0E01               	movlw	1
  1257  000D3C  0100               	movlb	0	; () banked
  1258  000D3E  6FBF               	movwf	(sceneAdress@baseAdress+1)& (0+255),b
  1259  000D40  0E00               	movlw	0
  1260  000D42  0100               	movlb	0	; () banked
  1261  000D44  6FBE               	movwf	sceneAdress@baseAdress& (0+255),b
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;scenes.c: 88: baseAdress += ((scene-1) * sizeof(SCENECHANNEL) * 64) + (channel * sizeof
      +                          (SCENECHANNEL));
  1265  000D46  0EFF               	movlw	255
  1266  000D48  0100               	movlb	0	; () banked
  1267  000D4A  25BD               	addwf	sceneAdress@scene& (0+255),w,b
  1268  000D4C  0100               	movlb	0	; () banked
  1269  000D4E  6FB5               	movwf	___wmul@multiplier& (0+255),b
  1270  000D50  0100               	movlb	0	; () banked
  1271  000D52  6BB6               	clrf	(___wmul@multiplier+1)& (0+255),b
  1272  000D54  0EFF               	movlw	255
  1273  000D56  23B6               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
  1274  000D58  0E00               	movlw	0
  1275  000D5A  0100               	movlb	0	; () banked
  1276  000D5C  6FB8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1277  000D5E  0E03               	movlw	3
  1278  000D60  0100               	movlb	0	; () banked
  1279  000D62  6FB7               	movwf	___wmul@multiplicand& (0+255),b
  1280  000D64  EC6D  F008         	call	___wmul	;wreg free
  1281  000D68  0E06               	movlw	6
  1282  000D6A                     u4265:
  1283  000D6A  90D8               	bcf	status,0,c
  1284  000D6C  0100               	movlb	0	; () banked
  1285  000D6E  37B5               	rlcf	?___wmul& (0+255),f,b
  1286  000D70  0100               	movlb	0	; () banked
  1287  000D72  37B6               	rlcf	(?___wmul+1)& (0+255),f,b
  1288  000D74  2EE8               	decfsz	wreg,f,c
  1289  000D76  D7F9               	goto	u4265
  1290  000D78  0100               	movlb	0	; () banked
  1291  000D7A  51BB               	movf	sceneAdress@channel& (0+255),w,b
  1292  000D7C  0D03               	mullw	3
  1293  000D7E  50F3               	movf	prodl,w,c
  1294  000D80  0100               	movlb	0	; () banked
  1295  000D82  27B5               	addwf	?___wmul& (0+255),f,b
  1296  000D84  50F4               	movf	prodh,w,c
  1297  000D86  0100               	movlb	0	; () banked
  1298  000D88  23B6               	addwfc	(?___wmul+1)& (0+255),f,b
  1299  000D8A  0100               	movlb	0	; () banked
  1300  000D8C  51B5               	movf	?___wmul& (0+255),w,b
  1301  000D8E  0100               	movlb	0	; () banked
  1302  000D90  27BE               	addwf	sceneAdress@baseAdress& (0+255),f,b
  1303  000D92  0100               	movlb	0	; () banked
  1304  000D94  51B6               	movf	(?___wmul+1)& (0+255),w,b
  1305  000D96  0100               	movlb	0	; () banked
  1306  000D98  23BF               	addwfc	(sceneAdress@baseAdress+1)& (0+255),f,b
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;scenes.c: 90: return baseAdress;
  1310  000D9A  C0BE  F0BB         	movff	sceneAdress@baseAdress,?_sceneAdress
  1311  000D9E  C0BF  F0BC         	movff	sceneAdress@baseAdress+1,?_sceneAdress+1
  1312  000DA2  0012               	return	
  1313  000DA4                     __end_of_sceneAdress:
  1314                           	opt stack 0
  1315                           tblptru	equ	0xFF8
  1316                           prodh	equ	0xFF4
  1317                           prodl	equ	0xFF3
  1318                           intcon	equ	0xFF2
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1h	equ	0xFE2
  1323                           fsr1l	equ	0xFE1
  1324                           indf2	equ	0xFDF
  1325                           fsr2h	equ	0xFDA
  1326                           fsr2l	equ	0xFD9
  1327                           status	equ	0xFD8
  1328                           
  1329 ;; *************** function ___wmul *****************
  1330 ;; Defined at:
  1331 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  multiplier      2   18[BANK0 ] unsigned int 
  1334 ;;  multiplicand    2   20[BANK0 ] unsigned int 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  product         2   22[BANK0 ] unsigned int 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2   18[BANK0 ] unsigned int 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0, prodl, prodh
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1346 ;;      Params:         0       4       0       0       0       0       0
  1347 ;;      Locals:         0       2       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0
  1349 ;;      Totals:         0       6       0       0       0       0       0
  1350 ;;Total ram usage:        6 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    8
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_sceneAdress
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text4
  1361  0010DA                     __ptext4:
  1362                           	opt stack 0
  1363  0010DA                     ___wmul:
  1364                           	opt stack 19
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;incstack = 0
  1368  0010DA  0100               	movlb	0	; () banked
  1369  0010DC  51B5               	movf	___wmul@multiplier& (0+255),w,b
  1370  0010DE  0100               	movlb	0	; () banked
  1371  0010E0  03B7               	mulwf	___wmul@multiplicand& (0+255),b
  1372  0010E2  CFF3 F0B9          	movff	prodl,___wmul@product
  1373  0010E6  CFF4 F0BA          	movff	prodh,___wmul@product+1
  1374  0010EA  0100               	movlb	0	; () banked
  1375  0010EC  51B5               	movf	___wmul@multiplier& (0+255),w,b
  1376  0010EE  0100               	movlb	0	; () banked
  1377  0010F0  03B8               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1378  0010F2  50F3               	movf	prodl,w,c
  1379  0010F4  0100               	movlb	0	; () banked
  1380  0010F6  27BA               	addwf	(___wmul@product+1)& (0+255),f,b
  1381  0010F8  0100               	movlb	0	; () banked
  1382  0010FA  51B6               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1383  0010FC  0100               	movlb	0	; () banked
  1384  0010FE  03B7               	mulwf	___wmul@multiplicand& (0+255),b
  1385  001100  50F3               	movf	prodl,w,c
  1386  001102  0100               	movlb	0	; () banked
  1387  001104  27BA               	addwf	(___wmul@product+1)& (0+255),f,b
  1388                           
  1389                           ; BSR set to: 0
  1390  001106  C0B9  F0B5         	movff	___wmul@product,?___wmul
  1391  00110A  C0BA  F0B6         	movff	___wmul@product+1,?___wmul+1
  1392  00110E  0012               	return	
  1393  001110                     __end_of___wmul:
  1394                           	opt stack 0
  1395                           tblptru	equ	0xFF8
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           intcon	equ	0xFF2
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           postdec1	equ	0xFE5
  1402                           fsr1h	equ	0xFE2
  1403                           fsr1l	equ	0xFE1
  1404                           indf2	equ	0xFDF
  1405                           fsr2h	equ	0xFDA
  1406                           fsr2l	equ	0xFD9
  1407                           status	equ	0xFD8
  1408                           
  1409 ;; *************** function _readTestPattern *****************
  1410 ;; Defined at:
  1411 ;;		line 18 in file "massStorage.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  bank            1    wreg     unsigned char 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  bank            1   62[BANK0 ] unsigned char 
  1416 ;;  r              32   30[BANK0 ] unsigned char [32]
  1417 ;; Return value:  Size  Location     Type
  1418 ;;		None               void
  1419 ;; Registers used:
  1420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0      33       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0      33       0       0       0       0       0
  1430 ;;Total ram usage:       33 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:   11
  1433 ;; This function calls:
  1434 ;;		_HDByteReadI2C
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text5
  1441  000EBC                     __ptext5:
  1442                           	opt stack 0
  1443  000EBC                     _readTestPattern:
  1444                           	opt stack 19
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;incstack = 0
  1448                           ;readTestPattern@bank stored from wreg
  1449  000EBC  0100               	movlb	0	; () banked
  1450  000EBE  6FE1               	movwf	readTestPattern@bank& (0+255),b
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;massStorage.c: 20: unsigned char r[32];
  1454                           ;massStorage.c: 22: HDByteReadI2C( 0xA0,bank, 0, r, 32 );
  1455  000EC0  C0E1  F0BA         	movff	readTestPattern@bank,HDByteReadI2C@HighAdd
  1456  000EC4  0E00               	movlw	0
  1457  000EC6  0100               	movlb	0	; () banked
  1458  000EC8  6FBB               	movwf	HDByteReadI2C@LowAdd& (0+255),b
  1459  000ECA  0100               	movlb	0	; () banked
  1460  000ECC  0E00               	movlw	high readTestPattern@r
  1461  000ECE  0100               	movlb	0	; () banked
  1462  000ED0  6FBD               	movwf	(HDByteReadI2C@data+1)& (0+255),b
  1463  000ED2  0100               	movlb	0	; () banked
  1464  000ED4  0EC1               	movlw	low readTestPattern@r
  1465  000ED6  0100               	movlb	0	; () banked
  1466  000ED8  6FBC               	movwf	HDByteReadI2C@data& (0+255),b
  1467  000EDA  0E20               	movlw	32
  1468  000EDC  0100               	movlb	0	; () banked
  1469  000EDE  6FBE               	movwf	HDByteReadI2C@length& (0+255),b
  1470  000EE0  0EA0               	movlw	160
  1471  000EE2  EC55  F002         	call	_HDByteReadI2C
  1472                           
  1473                           ;massStorage.c: 23: HDByteReadI2C( 0xA0,bank, 0, r, 32 );
  1474  000EE6  C0E1  F0BA         	movff	readTestPattern@bank,HDByteReadI2C@HighAdd
  1475  000EEA  0E00               	movlw	0
  1476  000EEC  0100               	movlb	0	; () banked
  1477  000EEE  6FBB               	movwf	HDByteReadI2C@LowAdd& (0+255),b
  1478  000EF0  0100               	movlb	0	; () banked
  1479  000EF2  0E00               	movlw	high readTestPattern@r
  1480  000EF4  0100               	movlb	0	; () banked
  1481  000EF6  6FBD               	movwf	(HDByteReadI2C@data+1)& (0+255),b
  1482  000EF8  0100               	movlb	0	; () banked
  1483  000EFA  0EC1               	movlw	low readTestPattern@r
  1484  000EFC  0100               	movlb	0	; () banked
  1485  000EFE  6FBC               	movwf	HDByteReadI2C@data& (0+255),b
  1486  000F00  0E20               	movlw	32
  1487  000F02  0100               	movlb	0	; () banked
  1488  000F04  6FBE               	movwf	HDByteReadI2C@length& (0+255),b
  1489  000F06  0EA0               	movlw	160
  1490  000F08  EC55  F002         	call	_HDByteReadI2C
  1491  000F0C  0012               	return	
  1492  000F0E                     __end_of_readTestPattern:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           prodh	equ	0xFF4
  1496                           prodl	equ	0xFF3
  1497                           intcon	equ	0xFF2
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           postdec1	equ	0xFE5
  1501                           fsr1h	equ	0xFE2
  1502                           fsr1l	equ	0xFE1
  1503                           indf2	equ	0xFDF
  1504                           fsr2h	equ	0xFDA
  1505                           fsr2l	equ	0xFD9
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _initSceneChangeHardware *****************
  1509 ;; Defined at:
  1510 ;;		line 110 in file "scenes.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;		None               void
  1517 ;; Registers used:
  1518 ;;		wreg, status,2
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1524 ;;      Params:         0       0       0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    8
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text6
  1539  0012F8                     __ptext6:
  1540                           	opt stack 0
  1541  0012F8                     _initSceneChangeHardware:
  1542                           	opt stack 22
  1543                           
  1544                           ;scenes.c: 112: T3CON = 0;
  1545                           
  1546                           ;incstack = 0
  1547  0012F8  0E00               	movlw	0
  1548  0012FA  6EB1               	movwf	4017,c	;volatile
  1549                           
  1550                           ;scenes.c: 113: T3CONbits.T3CKPS = 3;
  1551  0012FC  0E30               	movlw	48
  1552  0012FE  12B1               	iorwf	4017,f,c	;volatile
  1553                           
  1554                           ;scenes.c: 114: T3CONbits.TMR3ON = 1;
  1555  001300  80B1               	bsf	4017,0,c	;volatile
  1556                           
  1557                           ;scenes.c: 116: IPR2bits.TMR3IP = 0;
  1558  001302  92A2               	bcf	4002,1,c	;volatile
  1559                           
  1560                           ;scenes.c: 117: PIE2bits.TMR3IE = 1;
  1561  001304  82A0               	bsf	4000,1,c	;volatile
  1562  001306  0012               	return	
  1563  001308                     __end_of_initSceneChangeHardware:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           prodh	equ	0xFF4
  1567                           prodl	equ	0xFF3
  1568                           intcon	equ	0xFF2
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           postdec1	equ	0xFE5
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           indf2	equ	0xFDF
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _initI2C *****************
  1580 ;; Defined at:
  1581 ;;		line 28 in file "massStorage.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;		None               void
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1595 ;;      Params:         0       0       0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    9
  1602 ;; This function calls:
  1603 ;;		_OpenI2C1
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text7
  1610  0012E6                     __ptext7:
  1611                           	opt stack 0
  1612  0012E6                     _initI2C:
  1613                           	opt stack 21
  1614                           
  1615                           ;massStorage.c: 30: OpenI2C1(0b00001000, 0b10000000);
  1616                           
  1617                           ;incstack = 0
  1618  0012E6  0E80               	movlw	128
  1619  0012E8  0100               	movlb	0	; () banked
  1620  0012EA  6FB5               	movwf	OpenI2C1@slew& (0+255),b
  1621  0012EC  0E08               	movlw	8
  1622  0012EE  EC47  F009         	call	_OpenI2C1
  1623                           
  1624                           ;massStorage.c: 31: SSPADD = 119;
  1625  0012F2  0E77               	movlw	119
  1626  0012F4  6EC8               	movwf	4040,c	;volatile
  1627  0012F6  0012               	return	
  1628  0012F8                     __end_of_initI2C:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           prodh	equ	0xFF4
  1632                           prodl	equ	0xFF3
  1633                           intcon	equ	0xFF2
  1634                           postinc0	equ	0xFEE
  1635                           wreg	equ	0xFE8
  1636                           postdec1	equ	0xFE5
  1637                           fsr1h	equ	0xFE2
  1638                           fsr1l	equ	0xFE1
  1639                           indf2	equ	0xFDF
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           status	equ	0xFD8
  1643                           
  1644 ;; *************** function _OpenI2C1 *****************
  1645 ;; Defined at:
  1646 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1open.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  sync_mode       1    wreg     unsigned char 
  1649 ;;  slew            1   18[BANK0 ] unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  sync_mode       1   19[BANK0 ] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1661 ;;      Params:         0       1       0       0       0       0       0
  1662 ;;      Locals:         0       1       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0
  1664 ;;      Totals:         0       2       0       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    8
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_initI2C
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text8
  1676  00128E                     __ptext8:
  1677                           	opt stack 0
  1678  00128E                     _OpenI2C1:
  1679                           	opt stack 21
  1680                           
  1681                           ;incstack = 0
  1682                           ;OpenI2C1@sync_mode stored from wreg
  1683  00128E  0100               	movlb	0	; () banked
  1684  001290  6FB6               	movwf	OpenI2C1@sync_mode& (0+255),b
  1685                           
  1686                           ; BSR set to: 0
  1687  001292  0E3F               	movlw	63
  1688  001294  16C7               	andwf	4039,f,c	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691  001296  0E00               	movlw	0
  1692  001298  6EC6               	movwf	4038,c	;volatile
  1693                           
  1694                           ; BSR set to: 0
  1695  00129A  0E00               	movlw	0
  1696  00129C  6EC5               	movwf	4037,c	;volatile
  1697  00129E  0100               	movlb	0	; () banked
  1698  0012A0  51B6               	movf	OpenI2C1@sync_mode& (0+255),w,b
  1699  0012A2  12C6               	iorwf	4038,f,c	;volatile
  1700  0012A4  0100               	movlb	0	; () banked
  1701  0012A6  51B5               	movf	OpenI2C1@slew& (0+255),w,b
  1702  0012A8  12C7               	iorwf	4039,f,c	;volatile
  1703                           
  1704                           ; BSR set to: 0
  1705  0012AA  8AC6               	bsf	4038,5,c	;volatile
  1706                           
  1707                           ; BSR set to: 0
  1708  0012AC  0012               	return	
  1709  0012AE                     __end_of_OpenI2C1:
  1710                           	opt stack 0
  1711                           tblptru	equ	0xFF8
  1712                           prodh	equ	0xFF4
  1713                           prodl	equ	0xFF3
  1714                           intcon	equ	0xFF2
  1715                           postinc0	equ	0xFEE
  1716                           wreg	equ	0xFE8
  1717                           postdec1	equ	0xFE5
  1718                           fsr1h	equ	0xFE2
  1719                           fsr1l	equ	0xFE1
  1720                           indf2	equ	0xFDF
  1721                           fsr2h	equ	0xFDA
  1722                           fsr2l	equ	0xFD9
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _initHardware *****************
  1726 ;; Defined at:
  1727 ;;		line 6 in file "hardware.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;		None               void
  1734 ;; Registers used:
  1735 ;;		wreg, status,2
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1741 ;;      Params:         0       0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    8
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text9
  1756  000FAA                     __ptext9:
  1757                           	opt stack 0
  1758  000FAA                     _initHardware:
  1759                           	opt stack 22
  1760                           
  1761                           ;hardware.c: 10: OSCCONbits.IDLEN = 0;
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;incstack = 0
  1765  000FAA  9ED3               	bcf	4051,7,c	;volatile
  1766                           
  1767                           ;hardware.c: 12: OSCCONbits.IRCF2 = 1;
  1768  000FAC  8CD3               	bsf	4051,6,c	;volatile
  1769                           
  1770                           ;hardware.c: 13: OSCCONbits.IRCF1 = 1;
  1771  000FAE  8AD3               	bsf	4051,5,c	;volatile
  1772                           
  1773                           ;hardware.c: 14: OSCCONbits.IRCF0 = 0;
  1774  000FB0  98D3               	bcf	4051,4,c	;volatile
  1775                           
  1776                           ;hardware.c: 16: OSCCONbits.SCS1 = 1;
  1777  000FB2  82D3               	bsf	4051,1,c	;volatile
  1778                           
  1779                           ;hardware.c: 17: OSCCONbits.SCS0 = 0;
  1780  000FB4  90D3               	bcf	4051,0,c	;volatile
  1781                           
  1782                           ;hardware.c: 23: CM1CON0 = 0;
  1783  000FB6  0E00               	movlw	0
  1784  000FB8  6E79               	movwf	3961,c	;volatile
  1785                           
  1786                           ;hardware.c: 24: CM2CON0 = 0;
  1787  000FBA  0E00               	movlw	0
  1788  000FBC  6E78               	movwf	3960,c	;volatile
  1789                           
  1790                           ;hardware.c: 30: LATA = 0x00;
  1791  000FBE  0E00               	movlw	0
  1792  000FC0  6E89               	movwf	3977,c	;volatile
  1793                           
  1794                           ;hardware.c: 31: PORTA = 0x00;
  1795  000FC2  0E00               	movlw	0
  1796  000FC4  6E80               	movwf	3968,c	;volatile
  1797                           
  1798                           ;hardware.c: 32: TRISA = 0b00000111;
  1799  000FC6  0E07               	movlw	7
  1800  000FC8  6E92               	movwf	3986,c	;volatile
  1801                           
  1802                           ;hardware.c: 41: PORTB = 0x00;
  1803  000FCA  0E00               	movlw	0
  1804  000FCC  6E81               	movwf	3969,c	;volatile
  1805                           
  1806                           ;hardware.c: 42: LATB = 0x00;
  1807  000FCE  0E00               	movlw	0
  1808  000FD0  6E8A               	movwf	3978,c	;volatile
  1809                           
  1810                           ;hardware.c: 43: ANSELB = 0x00;
  1811  000FD2  0E00               	movlw	0
  1812  000FD4  010F               	movlb	15	; () banked
  1813  000FD6  6F39               	movwf	57,b	;volatile
  1814                           
  1815                           ;hardware.c: 44: TRISB = 0b00100111;
  1816  000FD8  0E27               	movlw	39
  1817  000FDA  6E93               	movwf	3987,c	;volatile
  1818                           
  1819                           ; BSR set to: 15
  1820                           ;hardware.c: 45: TRISBbits.RB0 |= 1;
  1821  000FDC  8093               	bsf	3987,0,c	;volatile
  1822                           
  1823                           ; BSR set to: 15
  1824                           ;hardware.c: 46: TRISBbits.RB1 |= 1;
  1825  000FDE  8293               	bsf	3987,1,c	;volatile
  1826                           
  1827                           ;hardware.c: 51: LATC = 0x00;
  1828  000FE0  0E00               	movlw	0
  1829  000FE2  6E8B               	movwf	3979,c	;volatile
  1830                           
  1831                           ;hardware.c: 52: PORTC = 0x00;
  1832  000FE4  0E00               	movlw	0
  1833  000FE6  6E82               	movwf	3970,c	;volatile
  1834                           
  1835                           ;hardware.c: 54: TRISC = 0b00110000;
  1836  000FE8  0E30               	movlw	48
  1837  000FEA  6E94               	movwf	3988,c	;volatile
  1838                           
  1839                           ; BSR set to: 15
  1840                           ;hardware.c: 55: TRISCbits.TRISC6 = 1;
  1841  000FEC  8C94               	bsf	3988,6,c	;volatile
  1842                           
  1843                           ; BSR set to: 15
  1844  000FEE  0012               	return	
  1845  000FF0                     __end_of_initHardware:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           intcon	equ	0xFF2
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postdec1	equ	0xFE5
  1854                           fsr1h	equ	0xFE2
  1855                           fsr1l	equ	0xFE1
  1856                           indf2	equ	0xFDF
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _initFlashButtonMatrix *****************
  1862 ;; Defined at:
  1863 ;;		line 170 in file "buttons.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  i               1   29[BANK0 ] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;		None               void
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1877 ;;      Params:         0       0       0       0       0       0       0
  1878 ;;      Locals:         0       1       0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0
  1880 ;;      Totals:         0       1       0       0       0       0       0
  1881 ;;Total ram usage:        1 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:   12
  1884 ;; This function calls:
  1885 ;;		_storeAButton
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text10
  1892  0002EE                     __ptext10:
  1893                           	opt stack 0
  1894  0002EE                     _initFlashButtonMatrix:
  1895                           	opt stack 18
  1896                           
  1897                           ;buttons.c: 172: unsigned char i;
  1898                           ;buttons.c: 174: for ( i = 0; i < 0xFF; i++) {
  1899                           
  1900                           ; BSR set to: 15
  1901                           ;incstack = 0
  1902  0002EE  0E00               	movlw	0
  1903  0002F0  0100               	movlb	0	; () banked
  1904  0002F2  6FC0               	movwf	initFlashButtonMatrix@i& (0+255),b
  1905  0002F4                     
  1906                           ; BSR set to: 0
  1907  0002F4  0100               	movlb	0	; () banked
  1908  0002F6  29C0               	incf	initFlashButtonMatrix@i& (0+255),w,b
  1909  0002F8  B4D8               	btfsc	status,2,c
  1910  0002FA  D00A               	goto	l2836
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;buttons.c: 175: storeAButton( i, 0x00 );
  1914                           
  1915                           ; BSR set to: 0
  1916                           
  1917                           ; BSR set to: 0
  1918  0002FC  0E00               	movlw	0
  1919  0002FE  0100               	movlb	0	; () banked
  1920  000300  6FBE               	movwf	storeAButton@program& (0+255),b
  1921  000302  0100               	movlb	0	; () banked
  1922  000304  51C0               	movf	initFlashButtonMatrix@i& (0+255),w,b
  1923  000306  EC66  F009         	call	_storeAButton
  1924  00030A  0100               	movlb	0	; () banked
  1925  00030C  2BC0               	incf	initFlashButtonMatrix@i& (0+255),f,b
  1926  00030E  D7F2               	goto	L1
  1927  000310                     l2836:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;buttons.c: 176: }
  1931                           ;buttons.c: 178: storeAButton(0x12, 1 );
  1932  000310  0E01               	movlw	1
  1933  000312  0100               	movlb	0	; () banked
  1934  000314  6FBE               	movwf	storeAButton@program& (0+255),b
  1935  000316  0E12               	movlw	18
  1936  000318  EC66  F009         	call	_storeAButton
  1937                           
  1938                           ;buttons.c: 179: storeAButton(0x13, 2 );
  1939  00031C  0E02               	movlw	2
  1940  00031E  0100               	movlb	0	; () banked
  1941  000320  6FBE               	movwf	storeAButton@program& (0+255),b
  1942  000322  0E13               	movlw	19
  1943  000324  EC66  F009         	call	_storeAButton
  1944                           
  1945                           ;buttons.c: 180: storeAButton(0x14, 3 );
  1946  000328  0E03               	movlw	3
  1947  00032A  0100               	movlb	0	; () banked
  1948  00032C  6FBE               	movwf	storeAButton@program& (0+255),b
  1949  00032E  0E14               	movlw	20
  1950  000330  EC66  F009         	call	_storeAButton
  1951                           
  1952                           ;buttons.c: 181: storeAButton(0x15, 4 );
  1953  000334  0E04               	movlw	4
  1954  000336  0100               	movlb	0	; () banked
  1955  000338  6FBE               	movwf	storeAButton@program& (0+255),b
  1956  00033A  0E15               	movlw	21
  1957  00033C  EC66  F009         	call	_storeAButton
  1958                           
  1959                           ;buttons.c: 182: storeAButton(0x16, 5 );
  1960  000340  0E05               	movlw	5
  1961  000342  0100               	movlb	0	; () banked
  1962  000344  6FBE               	movwf	storeAButton@program& (0+255),b
  1963  000346  0E16               	movlw	22
  1964  000348  EC66  F009         	call	_storeAButton
  1965                           
  1966                           ;buttons.c: 183: storeAButton(0x17, 6 );
  1967  00034C  0E06               	movlw	6
  1968  00034E  0100               	movlb	0	; () banked
  1969  000350  6FBE               	movwf	storeAButton@program& (0+255),b
  1970  000352  0E17               	movlw	23
  1971  000354  EC66  F009         	call	_storeAButton
  1972                           
  1973                           ;buttons.c: 184: storeAButton(0x18, 7 );
  1974  000358  0E07               	movlw	7
  1975  00035A  0100               	movlb	0	; () banked
  1976  00035C  6FBE               	movwf	storeAButton@program& (0+255),b
  1977  00035E  0E18               	movlw	24
  1978  000360  EC66  F009         	call	_storeAButton
  1979                           
  1980                           ;buttons.c: 185: storeAButton(0x19, 8 );
  1981  000364  0E08               	movlw	8
  1982  000366  0100               	movlb	0	; () banked
  1983  000368  6FBE               	movwf	storeAButton@program& (0+255),b
  1984  00036A  0E19               	movlw	25
  1985  00036C  EC66  F009         	call	_storeAButton
  1986                           
  1987                           ;buttons.c: 186: storeAButton(0x1A, 9 );
  1988  000370  0E09               	movlw	9
  1989  000372  0100               	movlb	0	; () banked
  1990  000374  6FBE               	movwf	storeAButton@program& (0+255),b
  1991  000376  0E1A               	movlw	26
  1992  000378  EC66  F009         	call	_storeAButton
  1993                           
  1994                           ;buttons.c: 187: storeAButton(0x1B, 1 );
  1995  00037C  0E01               	movlw	1
  1996  00037E  0100               	movlb	0	; () banked
  1997  000380  6FBE               	movwf	storeAButton@program& (0+255),b
  1998  000382  0E1B               	movlw	27
  1999  000384  EC66  F009         	call	_storeAButton
  2000                           
  2001                           ;buttons.c: 189: storeAButton( 0x20, 0x0A );
  2002  000388  0E0A               	movlw	10
  2003  00038A  0100               	movlb	0	; () banked
  2004  00038C  6FBE               	movwf	storeAButton@program& (0+255),b
  2005  00038E  0E20               	movlw	32
  2006  000390  EC66  F009         	call	_storeAButton
  2007                           
  2008                           ;buttons.c: 190: storeAButton( 0x21, 0x0B );
  2009  000394  0E0B               	movlw	11
  2010  000396  0100               	movlb	0	; () banked
  2011  000398  6FBE               	movwf	storeAButton@program& (0+255),b
  2012  00039A  0E21               	movlw	33
  2013  00039C  EC66  F009         	call	_storeAButton
  2014                           
  2015                           ;buttons.c: 191: storeAButton( 0x22, 0x0C );
  2016  0003A0  0E0C               	movlw	12
  2017  0003A2  0100               	movlb	0	; () banked
  2018  0003A4  6FBE               	movwf	storeAButton@program& (0+255),b
  2019  0003A6  0E22               	movlw	34
  2020  0003A8  EC66  F009         	call	_storeAButton
  2021                           
  2022                           ;buttons.c: 192: storeAButton( 0x23, 0x0D );
  2023  0003AC  0E0D               	movlw	13
  2024  0003AE  0100               	movlb	0	; () banked
  2025  0003B0  6FBE               	movwf	storeAButton@program& (0+255),b
  2026  0003B2  0E23               	movlw	35
  2027  0003B4  EC66  F009         	call	_storeAButton
  2028                           
  2029                           ;buttons.c: 193: storeAButton( 0x24, 0x0E );
  2030  0003B8  0E0E               	movlw	14
  2031  0003BA  0100               	movlb	0	; () banked
  2032  0003BC  6FBE               	movwf	storeAButton@program& (0+255),b
  2033  0003BE  0E24               	movlw	36
  2034  0003C0  EC66  F009         	call	_storeAButton
  2035                           
  2036                           ;buttons.c: 194: storeAButton( 0x25, 0x0F );
  2037  0003C4  0E0F               	movlw	15
  2038  0003C6  0100               	movlb	0	; () banked
  2039  0003C8  6FBE               	movwf	storeAButton@program& (0+255),b
  2040  0003CA  0E25               	movlw	37
  2041  0003CC  EC66  F009         	call	_storeAButton
  2042                           
  2043                           ;buttons.c: 195: storeAButton( 0x26, 0x10 );
  2044  0003D0  0E10               	movlw	16
  2045  0003D2  0100               	movlb	0	; () banked
  2046  0003D4  6FBE               	movwf	storeAButton@program& (0+255),b
  2047  0003D6  0E26               	movlw	38
  2048  0003D8  EC66  F009         	call	_storeAButton
  2049                           
  2050                           ;buttons.c: 196: storeAButton( 0x27, 0x30 );
  2051  0003DC  0E30               	movlw	48
  2052  0003DE  0100               	movlb	0	; () banked
  2053  0003E0  6FBE               	movwf	storeAButton@program& (0+255),b
  2054  0003E2  0E27               	movlw	39
  2055  0003E4  EC66  F009         	call	_storeAButton
  2056                           
  2057                           ;buttons.c: 198: storeAButton( 0x30, 0x10 );
  2058  0003E8  0E10               	movlw	16
  2059  0003EA  0100               	movlb	0	; () banked
  2060  0003EC  6FBE               	movwf	storeAButton@program& (0+255),b
  2061  0003EE  0E30               	movlw	48
  2062  0003F0  EC66  F009         	call	_storeAButton
  2063                           
  2064                           ;buttons.c: 199: storeAButton( 0x31, 0x11 );
  2065  0003F4  0E11               	movlw	17
  2066  0003F6  0100               	movlb	0	; () banked
  2067  0003F8  6FBE               	movwf	storeAButton@program& (0+255),b
  2068  0003FA  0E31               	movlw	49
  2069  0003FC  EC66  F009         	call	_storeAButton
  2070                           
  2071                           ;buttons.c: 200: storeAButton( 0x32, 0x12 );
  2072  000400  0E12               	movlw	18
  2073  000402  0100               	movlb	0	; () banked
  2074  000404  6FBE               	movwf	storeAButton@program& (0+255),b
  2075  000406  0E32               	movlw	50
  2076  000408  EC66  F009         	call	_storeAButton
  2077                           
  2078                           ;buttons.c: 201: storeAButton( 0x33, 0x13 );
  2079  00040C  0E13               	movlw	19
  2080  00040E  0100               	movlb	0	; () banked
  2081  000410  6FBE               	movwf	storeAButton@program& (0+255),b
  2082  000412  0E33               	movlw	51
  2083  000414  EC66  F009         	call	_storeAButton
  2084                           
  2085                           ;buttons.c: 202: storeAButton( 0x34, 0x14 );
  2086  000418  0E14               	movlw	20
  2087  00041A  0100               	movlb	0	; () banked
  2088  00041C  6FBE               	movwf	storeAButton@program& (0+255),b
  2089  00041E  0E34               	movlw	52
  2090  000420  EC66  F009         	call	_storeAButton
  2091                           
  2092                           ;buttons.c: 203: storeAButton( 0x35, 0x1A );
  2093  000424  0E1A               	movlw	26
  2094  000426  0100               	movlb	0	; () banked
  2095  000428  6FBE               	movwf	storeAButton@program& (0+255),b
  2096  00042A  0E35               	movlw	53
  2097  00042C  EC66  F009         	call	_storeAButton
  2098                           
  2099                           ;buttons.c: 204: storeAButton( 0x36, 0x1B );
  2100  000430  0E1B               	movlw	27
  2101  000432  0100               	movlb	0	; () banked
  2102  000434  6FBE               	movwf	storeAButton@program& (0+255),b
  2103  000436  0E36               	movlw	54
  2104  000438  EC66  F009         	call	_storeAButton
  2105                           
  2106                           ;buttons.c: 205: storeAButton( 0x37, 0x1C );
  2107  00043C  0E1C               	movlw	28
  2108  00043E  0100               	movlb	0	; () banked
  2109  000440  6FBE               	movwf	storeAButton@program& (0+255),b
  2110  000442  0E37               	movlw	55
  2111  000444  EC66  F009         	call	_storeAButton
  2112                           
  2113                           ;buttons.c: 206: storeAButton( 0x38, 0x1D );
  2114  000448  0E1D               	movlw	29
  2115  00044A  0100               	movlb	0	; () banked
  2116  00044C  6FBE               	movwf	storeAButton@program& (0+255),b
  2117  00044E  0E38               	movlw	56
  2118  000450  EC66  F009         	call	_storeAButton
  2119                           
  2120                           ;buttons.c: 207: storeAButton( 0x39, 0x1E );
  2121  000454  0E1E               	movlw	30
  2122  000456  0100               	movlb	0	; () banked
  2123  000458  6FBE               	movwf	storeAButton@program& (0+255),b
  2124  00045A  0E39               	movlw	57
  2125  00045C  EC66  F009         	call	_storeAButton
  2126                           
  2127                           ;buttons.c: 208: storeAButton( 0x3A, 0x1F );
  2128  000460  0E1F               	movlw	31
  2129  000462  0100               	movlb	0	; () banked
  2130  000464  6FBE               	movwf	storeAButton@program& (0+255),b
  2131  000466  0E3A               	movlw	58
  2132  000468  EC66  F009         	call	_storeAButton
  2133                           
  2134                           ;buttons.c: 209: storeAButton( 0x3B, 0x30 );
  2135  00046C  0E30               	movlw	48
  2136  00046E  0100               	movlb	0	; () banked
  2137  000470  6FBE               	movwf	storeAButton@program& (0+255),b
  2138  000472  0E3B               	movlw	59
  2139  000474  EC66  F009         	call	_storeAButton
  2140                           
  2141                           ;buttons.c: 211: storeAButton( 0x40, 0x20 );
  2142  000478  0E20               	movlw	32
  2143  00047A  0100               	movlb	0	; () banked
  2144  00047C  6FBE               	movwf	storeAButton@program& (0+255),b
  2145  00047E  0E40               	movlw	64
  2146  000480  EC66  F009         	call	_storeAButton
  2147                           
  2148                           ;buttons.c: 212: storeAButton( 0x41, 0x21 );
  2149  000484  0E21               	movlw	33
  2150  000486  0100               	movlb	0	; () banked
  2151  000488  6FBE               	movwf	storeAButton@program& (0+255),b
  2152  00048A  0E41               	movlw	65
  2153  00048C  EC66  F009         	call	_storeAButton
  2154                           
  2155                           ;buttons.c: 213: storeAButton( 0x42, 0x22 );
  2156  000490  0E22               	movlw	34
  2157  000492  0100               	movlb	0	; () banked
  2158  000494  6FBE               	movwf	storeAButton@program& (0+255),b
  2159  000496  0E42               	movlw	66
  2160  000498  EC66  F009         	call	_storeAButton
  2161                           
  2162                           ;buttons.c: 214: storeAButton( 0x43, 0x23 );
  2163  00049C  0E23               	movlw	35
  2164  00049E  0100               	movlb	0	; () banked
  2165  0004A0  6FBE               	movwf	storeAButton@program& (0+255),b
  2166  0004A2  0E43               	movlw	67
  2167  0004A4  EC66  F009         	call	_storeAButton
  2168  0004A8  0012               	return	
  2169  0004AA                     __end_of_initFlashButtonMatrix:
  2170                           	opt stack 0
  2171                           tblptru	equ	0xFF8
  2172                           prodh	equ	0xFF4
  2173                           prodl	equ	0xFF3
  2174                           intcon	equ	0xFF2
  2175                           postinc0	equ	0xFEE
  2176                           wreg	equ	0xFE8
  2177                           postdec1	equ	0xFE5
  2178                           fsr1h	equ	0xFE2
  2179                           fsr1l	equ	0xFE1
  2180                           indf2	equ	0xFDF
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _storeAButton *****************
  2186 ;; Defined at:
  2187 ;;		line 218 in file "buttons.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  button          1    wreg     unsigned char 
  2190 ;;  program         1   27[BANK0 ] unsigned char 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  button          1   28[BANK0 ] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;		None               void
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2202 ;;      Params:         0       1       0       0       0       0       0
  2203 ;;      Locals:         0       1       0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0
  2205 ;;      Totals:         0       2       0       0       0       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:   11
  2209 ;; This function calls:
  2210 ;;		_HDByteWriteI2C
  2211 ;; This function is called by:
  2212 ;;		_initFlashButtonMatrix
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text11
  2217  0012CC                     __ptext11:
  2218                           	opt stack 0
  2219  0012CC                     _storeAButton:
  2220                           	opt stack 18
  2221                           
  2222                           ;incstack = 0
  2223                           ;storeAButton@button stored from wreg
  2224  0012CC  0100               	movlb	0	; () banked
  2225  0012CE  6FBF               	movwf	storeAButton@button& (0+255),b
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;buttons.c: 219: HDByteWriteI2C(0xA0, 0, button, program );
  2229  0012D0  0E00               	movlw	0
  2230  0012D2  0100               	movlb	0	; () banked
  2231  0012D4  6FB9               	movwf	HDByteWriteI2C@HighAdd& (0+255),b
  2232  0012D6  C0BF  F0BA         	movff	storeAButton@button,HDByteWriteI2C@LowAdd
  2233  0012DA  C0BE  F0BB         	movff	storeAButton@program,HDByteWriteI2C@data
  2234  0012DE  0EA0               	movlw	160
  2235  0012E0  ECD5  F002         	call	_HDByteWriteI2C
  2236  0012E4  0012               	return	
  2237  0012E6                     __end_of_storeAButton:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           intcon	equ	0xFF2
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           postdec1	equ	0xFE5
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           indf2	equ	0xFDF
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _HDByteWriteI2C *****************
  2254 ;; Defined at:
  2255 ;;		line 43 in file "massStorage.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  ControlByte     1    wreg     unsigned char 
  2258 ;;  HighAdd         1   22[BANK0 ] unsigned char 
  2259 ;;  LowAdd          1   23[BANK0 ] unsigned char 
  2260 ;;  data            1   24[BANK0 ] unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  ControlByte     1   26[BANK0 ] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         0       3       0       0       0       0       0
  2273 ;;      Locals:         0       1       0       0       0       0       0
  2274 ;;      Temps:          0       1       0       0       0       0       0
  2275 ;;      Totals:         0       5       0       0       0       0       0
  2276 ;;Total ram usage:        5 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:   10
  2279 ;; This function calls:
  2280 ;;		_EEAckPolling1
  2281 ;;		_WriteI2C1
  2282 ;; This function is called by:
  2283 ;;		_storeAButton
  2284 ;;		_storeASceneChannel
  2285 ;;		_writeTestPattern
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text12
  2290  0005AA                     __ptext12:
  2291                           	opt stack 0
  2292  0005AA                     _HDByteWriteI2C:
  2293                           	opt stack 18
  2294                           
  2295                           ;incstack = 0
  2296                           ;HDByteWriteI2C@ControlByte stored from wreg
  2297  0005AA  0100               	movlb	0	; () banked
  2298  0005AC  6FBD               	movwf	HDByteWriteI2C@ControlByte& (0+255),b
  2299  0005AE                     l2692:
  2300                           
  2301                           ; BSR set to: 0
  2302  0005AE  A4C7               	btfss	4039,2,c	;volatile
  2303  0005B0  D004               	goto	u3920
  2304  0005B2  0100               	movlb	0	; () banked
  2305  0005B4  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2306  0005B6  2BBC               	incf	??_HDByteWriteI2C& (0+255),f,b
  2307  0005B8  D002               	goto	u3928
  2308  0005BA                     u3920:
  2309  0005BA  0100               	movlb	0	; () banked
  2310  0005BC  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2311  0005BE                     u3928:
  2312  0005BE  50C5               	movf	4037,w,c	;volatile
  2313  0005C0  0B1F               	andlw	31
  2314  0005C2  0100               	movlb	0	; () banked
  2315  0005C4  11BC               	iorwf	??_HDByteWriteI2C& (0+255),w,b
  2316  0005C6  0900               	iorlw	0
  2317  0005C8  A4D8               	btfss	status,2,c
  2318  0005CA  D7F1               	goto	l2692
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;massStorage.c: 46: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  2322  0005CC  80C5               	bsf	4037,0,c	;volatile
  2323  0005CE                     l330:
  2324                           
  2325                           ; BSR set to: 0
  2326  0005CE  B0C5               	btfsc	4037,0,c	;volatile
  2327  0005D0  D7FE               	goto	l330
  2328  0005D2                     l333:
  2329                           
  2330                           ; BSR set to: 0
  2331  0005D2  B0C5               	btfsc	4037,0,c	;volatile
  2332  0005D4  D7FE               	goto	l333
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;massStorage.c: 49: WriteI2C1( ControlByte );
  2336                           
  2337                           ; BSR set to: 0
  2338  0005D6  0100               	movlb	0	; () banked
  2339  0005D8  51BD               	movf	HDByteWriteI2C@ControlByte& (0+255),w,b
  2340  0005DA  EC66  F004         	call	_WriteI2C1
  2341  0005DE                     l2696:
  2342  0005DE  A4C7               	btfss	4039,2,c	;volatile
  2343  0005E0  D004               	goto	u3960
  2344  0005E2  0100               	movlb	0	; () banked
  2345  0005E4  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2346  0005E6  2BBC               	incf	??_HDByteWriteI2C& (0+255),f,b
  2347  0005E8  D002               	goto	u3968
  2348  0005EA                     u3960:
  2349  0005EA  0100               	movlb	0	; () banked
  2350  0005EC  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2351  0005EE                     u3968:
  2352  0005EE  50C5               	movf	4037,w,c	;volatile
  2353  0005F0  0B1F               	andlw	31
  2354  0005F2  0100               	movlb	0	; () banked
  2355  0005F4  11BC               	iorwf	??_HDByteWriteI2C& (0+255),w,b
  2356  0005F6  0900               	iorlw	0
  2357  0005F8  A4D8               	btfss	status,2,c
  2358  0005FA  D7F1               	goto	l2696
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;massStorage.c: 51: WriteI2C1( HighAdd );
  2362                           
  2363                           ; BSR set to: 0
  2364  0005FC  0100               	movlb	0	; () banked
  2365  0005FE  51B9               	movf	HDByteWriteI2C@HighAdd& (0+255),w,b
  2366  000600  EC66  F004         	call	_WriteI2C1
  2367  000604                     l2700:
  2368  000604  A4C7               	btfss	4039,2,c	;volatile
  2369  000606  D004               	goto	u3980
  2370  000608  0100               	movlb	0	; () banked
  2371  00060A  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2372  00060C  2BBC               	incf	??_HDByteWriteI2C& (0+255),f,b
  2373  00060E  D002               	goto	u3988
  2374  000610                     u3980:
  2375  000610  0100               	movlb	0	; () banked
  2376  000612  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2377  000614                     u3988:
  2378  000614  50C5               	movf	4037,w,c	;volatile
  2379  000616  0B1F               	andlw	31
  2380  000618  0100               	movlb	0	; () banked
  2381  00061A  11BC               	iorwf	??_HDByteWriteI2C& (0+255),w,b
  2382  00061C  0900               	iorlw	0
  2383  00061E  A4D8               	btfss	status,2,c
  2384  000620  D7F1               	goto	l2700
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;massStorage.c: 53: WriteI2C1( LowAdd );
  2388                           
  2389                           ; BSR set to: 0
  2390  000622  0100               	movlb	0	; () banked
  2391  000624  51BA               	movf	HDByteWriteI2C@LowAdd& (0+255),w,b
  2392  000626  EC66  F004         	call	_WriteI2C1
  2393  00062A                     l2704:
  2394  00062A  A4C7               	btfss	4039,2,c	;volatile
  2395  00062C  D004               	goto	u4000
  2396  00062E  0100               	movlb	0	; () banked
  2397  000630  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2398  000632  2BBC               	incf	??_HDByteWriteI2C& (0+255),f,b
  2399  000634  D002               	goto	u4008
  2400  000636                     u4000:
  2401  000636  0100               	movlb	0	; () banked
  2402  000638  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2403  00063A                     u4008:
  2404  00063A  50C5               	movf	4037,w,c	;volatile
  2405  00063C  0B1F               	andlw	31
  2406  00063E  0100               	movlb	0	; () banked
  2407  000640  11BC               	iorwf	??_HDByteWriteI2C& (0+255),w,b
  2408  000642  0900               	iorlw	0
  2409  000644  A4D8               	btfss	status,2,c
  2410  000646  D7F1               	goto	l2704
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;massStorage.c: 55: WriteI2C1 ( data );
  2414                           
  2415                           ; BSR set to: 0
  2416  000648  0100               	movlb	0	; () banked
  2417  00064A  51BB               	movf	HDByteWriteI2C@data& (0+255),w,b
  2418  00064C  EC66  F004         	call	_WriteI2C1
  2419  000650                     l2708:
  2420  000650  A4C7               	btfss	4039,2,c	;volatile
  2421  000652  D004               	goto	u4020
  2422  000654  0100               	movlb	0	; () banked
  2423  000656  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2424  000658  2BBC               	incf	??_HDByteWriteI2C& (0+255),f,b
  2425  00065A  D002               	goto	u4028
  2426  00065C                     u4020:
  2427  00065C  0100               	movlb	0	; () banked
  2428  00065E  6BBC               	clrf	??_HDByteWriteI2C& (0+255),b
  2429  000660                     u4028:
  2430  000660  50C5               	movf	4037,w,c	;volatile
  2431  000662  0B1F               	andlw	31
  2432  000664  0100               	movlb	0	; () banked
  2433  000666  11BC               	iorwf	??_HDByteWriteI2C& (0+255),w,b
  2434  000668  0900               	iorlw	0
  2435  00066A  A4D8               	btfss	status,2,c
  2436  00066C  D7F1               	goto	l2708
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;massStorage.c: 57: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  2440  00066E  84C5               	bsf	4037,2,c	;volatile
  2441  000670                     l348:
  2442                           
  2443                           ; BSR set to: 0
  2444  000670  B4C5               	btfsc	4037,2,c	;volatile
  2445  000672  D7FE               	goto	l348
  2446  000674                     l351:
  2447                           
  2448                           ; BSR set to: 0
  2449  000674  B4C5               	btfsc	4037,2,c	;volatile
  2450  000676  D7FE               	goto	l351
  2451  000678                     l2710:
  2452  000678  0100               	movlb	0	; () banked
  2453  00067A  51BD               	movf	HDByteWriteI2C@ControlByte& (0+255),w,b
  2454  00067C  EC07  F005         	call	_EEAckPolling1
  2455  000680  0900               	iorlw	0
  2456  000682  B4D8               	btfsc	status,2,c
  2457                           
  2458                           ;massStorage.c: 62: return 0;
  2459                           ;	Return value of _HDByteWriteI2C is never used
  2460  000684  0012               	return	
  2461  000686  D7F8               	goto	l2710
  2462  000688                     __end_of_HDByteWriteI2C:
  2463                           	opt stack 0
  2464                           tblptru	equ	0xFF8
  2465                           prodh	equ	0xFF4
  2466                           prodl	equ	0xFF3
  2467                           intcon	equ	0xFF2
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           postdec1	equ	0xFE5
  2471                           fsr1h	equ	0xFE2
  2472                           fsr1l	equ	0xFE1
  2473                           indf2	equ	0xFDF
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _EEAckPolling1 *****************
  2479 ;; Defined at:
  2480 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1eeap.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  control         1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  control         1   21[BANK0 ] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      char 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         0       0       0       0       0       0       0
  2495 ;;      Locals:         0       1       0       0       0       0       0
  2496 ;;      Temps:          0       1       0       0       0       0       0
  2497 ;;      Totals:         0       2       0       0       0       0       0
  2498 ;;Total ram usage:        2 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    9
  2501 ;; This function calls:
  2502 ;;		_WriteI2C1
  2503 ;; This function is called by:
  2504 ;;		_HDByteWriteI2C
  2505 ;;		_LDByteWriteI2C
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text13
  2510  000A0E                     __ptext13:
  2511                           	opt stack 0
  2512  000A0E                     _EEAckPolling1:
  2513                           	opt stack 18
  2514                           
  2515                           ;incstack = 0
  2516                           ;EEAckPolling1@control stored from wreg
  2517  000A0E  0100               	movlb	0	; () banked
  2518  000A10  6FB8               	movwf	EEAckPolling1@control& (0+255),b
  2519  000A12                     l2604:
  2520                           
  2521                           ; BSR set to: 0
  2522  000A12  A4C7               	btfss	4039,2,c	;volatile
  2523  000A14  D004               	goto	u3650
  2524  000A16  0100               	movlb	0	; () banked
  2525  000A18  6BB7               	clrf	??_EEAckPolling1& (0+255),b
  2526  000A1A  2BB7               	incf	??_EEAckPolling1& (0+255),f,b
  2527  000A1C  D002               	goto	u3658
  2528  000A1E                     u3650:
  2529  000A1E  0100               	movlb	0	; () banked
  2530  000A20  6BB7               	clrf	??_EEAckPolling1& (0+255),b
  2531  000A22                     u3658:
  2532  000A22  50C5               	movf	4037,w,c	;volatile
  2533  000A24  0B1F               	andlw	31
  2534  000A26  0100               	movlb	0	; () banked
  2535  000A28  11B7               	iorwf	??_EEAckPolling1& (0+255),w,b
  2536  000A2A  0900               	iorlw	0
  2537  000A2C  A4D8               	btfss	status,2,c
  2538  000A2E  D7F1               	goto	l2604
  2539                           
  2540                           ; BSR set to: 0
  2541  000A30  80C5               	bsf	4037,0,c	;volatile
  2542  000A32                     l505:
  2543                           
  2544                           ; BSR set to: 0
  2545  000A32  B0C5               	btfsc	4037,0,c	;volatile
  2546  000A34  D7FE               	goto	l505
  2547  000A36                     l508:
  2548                           
  2549                           ; BSR set to: 0
  2550  000A36  B0C5               	btfsc	4037,0,c	;volatile
  2551  000A38  D7FE               	goto	l508
  2552                           
  2553                           ; BSR set to: 0
  2554  000A3A  A6A1               	btfss	4001,3,c	;volatile
  2555  000A3C  D002               	goto	l2612
  2556                           
  2557                           ; BSR set to: 0
  2558  000A3E  0EFF               	movlw	255
  2559  000A40  0012               	return	
  2560  000A42                     l2612:
  2561                           
  2562                           ; BSR set to: 0
  2563  000A42  0100               	movlb	0	; () banked
  2564  000A44  51B8               	movf	EEAckPolling1@control& (0+255),w,b
  2565  000A46  EC66  F004         	call	_WriteI2C1
  2566  000A4A  0100               	movlb	0	; () banked
  2567  000A4C  6FB7               	movwf	??_EEAckPolling1& (0+255),b
  2568  000A4E  0100               	movlb	0	; () banked
  2569  000A50  29B7               	incf	??_EEAckPolling1& (0+255),w,b
  2570  000A52  A4D8               	btfss	status,2,c
  2571  000A54  D01D               	goto	l518
  2572                           
  2573                           ; BSR set to: 0
  2574  000A56  84C5               	bsf	4037,2,c	;volatile
  2575  000A58                     l515:
  2576                           
  2577                           ; BSR set to: 0
  2578  000A58  B4C5               	btfsc	4037,2,c	;volatile
  2579  000A5A  D7FE               	goto	l515
  2580                           
  2581                           ; BSR set to: 0
  2582                           
  2583                           ; BSR set to: 0
  2584  000A5C  0EFD               	movlw	253
  2585  000A5E  0012               	return	
  2586  000A60                     l519:
  2587                           
  2588                           ; BSR set to: 0
  2589  000A60  82C5               	bsf	4037,1,c	;volatile
  2590  000A62                     l520:
  2591                           
  2592                           ; BSR set to: 0
  2593  000A62  B2C5               	btfsc	4037,1,c	;volatile
  2594  000A64  D7FE               	goto	l520
  2595  000A66                     l523:
  2596                           
  2597                           ; BSR set to: 0
  2598  000A66  B2C5               	btfsc	4037,1,c	;volatile
  2599  000A68  D7FE               	goto	l523
  2600                           
  2601                           ; BSR set to: 0
  2602  000A6A  A6A1               	btfss	4001,3,c	;volatile
  2603  000A6C  D002               	goto	l2624
  2604                           
  2605                           ; BSR set to: 0
  2606  000A6E  0EFF               	movlw	255
  2607  000A70  0012               	return	
  2608  000A72                     l2624:
  2609                           
  2610                           ; BSR set to: 0
  2611  000A72  0100               	movlb	0	; () banked
  2612  000A74  51B8               	movf	EEAckPolling1@control& (0+255),w,b
  2613  000A76  EC66  F004         	call	_WriteI2C1
  2614  000A7A  0100               	movlb	0	; () banked
  2615  000A7C  6FB7               	movwf	??_EEAckPolling1& (0+255),b
  2616  000A7E  0100               	movlb	0	; () banked
  2617  000A80  29B7               	incf	??_EEAckPolling1& (0+255),w,b
  2618  000A82  A4D8               	btfss	status,2,c
  2619  000A84  D005               	goto	l518
  2620                           
  2621                           ; BSR set to: 0
  2622  000A86  84C5               	bsf	4037,2,c	;volatile
  2623  000A88                     l528:
  2624                           
  2625                           ; BSR set to: 0
  2626  000A88  B4C5               	btfsc	4037,2,c	;volatile
  2627  000A8A  D7FE               	goto	l528
  2628                           
  2629                           ; BSR set to: 0
  2630                           
  2631                           ; BSR set to: 0
  2632  000A8C  0EFD               	movlw	253
  2633  000A8E  0012               	return	
  2634  000A90                     l518:
  2635                           
  2636                           ; BSR set to: 0
  2637  000A90  BCC5               	btfsc	4037,6,c	;volatile
  2638  000A92  D7E6               	goto	l519
  2639                           
  2640                           ; BSR set to: 0
  2641                           
  2642                           ; BSR set to: 0
  2643  000A94  84C5               	bsf	4037,2,c	;volatile
  2644  000A96                     l532:
  2645                           
  2646                           ; BSR set to: 0
  2647  000A96  B4C5               	btfsc	4037,2,c	;volatile
  2648  000A98  D7FE               	goto	l532
  2649  000A9A                     l535:
  2650                           
  2651                           ; BSR set to: 0
  2652  000A9A  B4C5               	btfsc	4037,2,c	;volatile
  2653  000A9C  D7FE               	goto	l535
  2654                           
  2655                           ; BSR set to: 0
  2656  000A9E  A6A1               	btfss	4001,3,c	;volatile
  2657  000AA0  D002               	goto	l2636
  2658                           
  2659                           ; BSR set to: 0
  2660  000AA2  0EFF               	movlw	255
  2661  000AA4  0012               	return	
  2662  000AA6                     l2636:
  2663                           
  2664                           ; BSR set to: 0
  2665  000AA6  0E00               	movlw	0
  2666  000AA8  0012               	return	
  2667  000AAA                     __end_of_EEAckPolling1:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           intcon	equ	0xFF2
  2673                           postinc0	equ	0xFEE
  2674                           wreg	equ	0xFE8
  2675                           postdec1	equ	0xFE5
  2676                           fsr1h	equ	0xFE2
  2677                           fsr1l	equ	0xFE1
  2678                           indf2	equ	0xFDF
  2679                           fsr2h	equ	0xFDA
  2680                           fsr2l	equ	0xFD9
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _initDMXSend *****************
  2684 ;; Defined at:
  2685 ;;		line 28 in file "dmx.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;		None               void
  2692 ;; Registers used:
  2693 ;;		wreg, status,2
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         0       0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    8
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text14
  2714  001246                     __ptext14:
  2715                           	opt stack 0
  2716  001246                     _initDMXSend:
  2717                           	opt stack 22
  2718                           
  2719                           ;dmx.c: 32: T1CON = 0;
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;incstack = 0
  2723  001246  0E00               	movlw	0
  2724  001248  6ECD               	movwf	4045,c	;volatile
  2725                           
  2726                           ;dmx.c: 33: T1CONbits.TMR1CS = 0;
  2727  00124A  0E3F               	movlw	-193
  2728  00124C  16CD               	andwf	4045,f,c	;volatile
  2729                           
  2730                           ;dmx.c: 34: T1CONbits.T1CKPS = 2;
  2731  00124E  50CD               	movf	4045,w,c	;volatile
  2732  001250  0BCF               	andlw	-49
  2733  001252  0920               	iorlw	32
  2734  001254  6ECD               	movwf	4045,c	;volatile
  2735                           
  2736                           ;dmx.c: 35: T1CONbits.TMR1ON = 1;
  2737  001256  80CD               	bsf	4045,0,c	;volatile
  2738                           
  2739                           ;dmx.c: 37: IPR1bits.TMR1IP = 0;
  2740  001258  909F               	bcf	3999,0,c	;volatile
  2741                           
  2742                           ;dmx.c: 38: PIE1bits.TMR1IE = 1;
  2743  00125A  809D               	bsf	3997,0,c	;volatile
  2744                           
  2745                           ;dmx.c: 43: BAUDCONbits.BRG16 = 1;
  2746  00125C  86B8               	bsf	4024,3,c	;volatile
  2747                           
  2748                           ;dmx.c: 44: BAUDCONbits.CKTXP = 1;
  2749  00125E  88B8               	bsf	4024,4,c	;volatile
  2750                           
  2751                           ;dmx.c: 46: SPBRG1 = 1;
  2752  001260  0E01               	movlw	1
  2753  001262  6EAF               	movwf	4015,c	;volatile
  2754                           
  2755                           ;dmx.c: 47: SPBRGH = 0;
  2756  001264  0E00               	movlw	0
  2757  001266  6EB0               	movwf	4016,c	;volatile
  2758  001268  0012               	return	
  2759  00126A                     __end_of_initDMXSend:
  2760                           	opt stack 0
  2761                           tblptru	equ	0xFF8
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           postdec1	equ	0xFE5
  2768                           fsr1h	equ	0xFE2
  2769                           fsr1l	equ	0xFE1
  2770                           indf2	equ	0xFDF
  2771                           fsr2h	equ	0xFDA
  2772                           fsr2l	equ	0xFD9
  2773                           status	equ	0xFD8
  2774                           
  2775 ;; *************** function _initButtonProtocol *****************
  2776 ;; Defined at:
  2777 ;;		line 17 in file "protocol.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;		None               void
  2784 ;; Registers used:
  2785 ;;		wreg, status,2
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2791 ;;      Params:         0       0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    8
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text15
  2806  001316                     __ptext15:
  2807                           	opt stack 0
  2808  001316                     _initButtonProtocol:
  2809                           	opt stack 22
  2810                           
  2811                           ;protocol.c: 19: protocolState = 0;
  2812                           
  2813                           ;incstack = 0
  2814  001316  0E00               	movlw	0
  2815  001318  0100               	movlb	0	; () banked
  2816  00131A  6FA2               	movwf	_protocolState& (0+255),b
  2817                           
  2818                           ; BSR set to: 0
  2819  00131C  0012               	return	
  2820  00131E                     __end_of_initButtonProtocol:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           prodh	equ	0xFF4
  2824                           prodl	equ	0xFF3
  2825                           intcon	equ	0xFF2
  2826                           postinc0	equ	0xFEE
  2827                           wreg	equ	0xFE8
  2828                           postdec1	equ	0xFE5
  2829                           fsr1h	equ	0xFE2
  2830                           fsr1l	equ	0xFE1
  2831                           indf2	equ	0xFDF
  2832                           fsr2h	equ	0xFDA
  2833                           fsr2l	equ	0xFD9
  2834                           status	equ	0xFD8
  2835                           
  2836 ;; *************** function _initButtonHardware *****************
  2837 ;; Defined at:
  2838 ;;		line 27 in file "buttons.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;		None               void
  2845 ;; Registers used:
  2846 ;;		wreg, status,2
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         0       0       0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0
  2855 ;;      Totals:         0       0       0       0       0       0       0
  2856 ;;Total ram usage:        0 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    8
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_main
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text16
  2867  00126A                     __ptext16:
  2868                           	opt stack 0
  2869  00126A                     _initButtonHardware:
  2870                           	opt stack 22
  2871                           
  2872                           ;buttons.c: 29: T0CONbits.TMR0ON = 0;
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;incstack = 0
  2876  00126A  9ED5               	bcf	4053,7,c	;volatile
  2877                           
  2878                           ;buttons.c: 31: TMR0H = 0;
  2879  00126C  0E00               	movlw	0
  2880  00126E  6ED7               	movwf	4055,c	;volatile
  2881                           
  2882                           ;buttons.c: 32: TMR0L = 0;
  2883  001270  0E00               	movlw	0
  2884  001272  6ED6               	movwf	4054,c	;volatile
  2885                           
  2886                           ;buttons.c: 33: INTCONbits.TMR0IF = 0;
  2887  001274  94F2               	bcf	intcon,2,c	;volatile
  2888                           
  2889                           ;buttons.c: 35: T0CONbits.T08BIT = 0;
  2890  001276  9CD5               	bcf	4053,6,c	;volatile
  2891                           
  2892                           ;buttons.c: 36: T0CONbits.T0CS = 0;
  2893  001278  9AD5               	bcf	4053,5,c	;volatile
  2894                           
  2895                           ;buttons.c: 37: T0CONbits.PSA = 0;
  2896  00127A  96D5               	bcf	4053,3,c	;volatile
  2897                           
  2898                           ;buttons.c: 39: T0CONbits.T0PS = 0;
  2899  00127C  90D5               	bcf	4053,0,c	;volatile
  2900  00127E  92D5               	bcf	4053,1,c	;volatile
  2901  001280  94D5               	bcf	4053,2,c	;volatile
  2902                           
  2903                           ;buttons.c: 44: RCONbits.IPEN = 1;
  2904  001282  8ED0               	bsf	4048,7,c	;volatile
  2905                           
  2906                           ;buttons.c: 45: INTCONbits.PEIE = 1;
  2907  001284  8CF2               	bsf	intcon,6,c	;volatile
  2908                           
  2909                           ;buttons.c: 46: INTCON2bits.TMR0IP = 0;
  2910  001286  94F1               	bcf	intcon2,2,c	;volatile
  2911                           
  2912                           ;buttons.c: 47: INTCONbits.TMR0IE = 1;
  2913  001288  8AF2               	bsf	intcon,5,c	;volatile
  2914                           
  2915                           ;buttons.c: 52: T0CONbits.TMR0ON = 1;
  2916  00128A  8ED5               	bsf	4053,7,c	;volatile
  2917  00128C  0012               	return	
  2918  00128E                     __end_of_initButtonHardware:
  2919                           	opt stack 0
  2920                           tblptru	equ	0xFF8
  2921                           prodh	equ	0xFF4
  2922                           prodl	equ	0xFF3
  2923                           intcon	equ	0xFF2
  2924                           intcon2	equ	0xFF1
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           postdec1	equ	0xFE5
  2928                           fsr1h	equ	0xFE2
  2929                           fsr1l	equ	0xFE1
  2930                           indf2	equ	0xFDF
  2931                           fsr2h	equ	0xFDA
  2932                           fsr2l	equ	0xFD9
  2933                           status	equ	0xFD8
  2934                           
  2935 ;; *************** function _initAllButtons *****************
  2936 ;; Defined at:
  2937 ;;		line 84 in file "buttons.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  i               1   34[BANK0 ] unsigned char 
  2942 ;;  buttonProgra    1   33[BANK0 ] unsigned char 
  2943 ;;  buttonIndex     1   32[BANK0 ] unsigned char 
  2944 ;;  buttonNumber    1    0        unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2954 ;;      Params:         0       0       0       0       0       0       0
  2955 ;;      Locals:         0       3       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0
  2957 ;;      Totals:         0       3       0       0       0       0       0
  2958 ;;Total ram usage:        3 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:   12
  2961 ;; This function calls:
  2962 ;;		_initButton
  2963 ;;		_readAButton
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text17
  2970  000FF0                     __ptext17:
  2971                           	opt stack 0
  2972  000FF0                     _initAllButtons:
  2973                           	opt stack 18
  2974                           
  2975                           ;buttons.c: 86: unsigned char buttonIndex = 0;
  2976                           
  2977                           ;incstack = 0
  2978  000FF0  0E00               	movlw	0
  2979  000FF2  0100               	movlb	0	; () banked
  2980  000FF4  6FC3               	movwf	initAllButtons@buttonIndex& (0+255),b
  2981                           
  2982                           ;buttons.c: 87: unsigned char buttonNumber;
  2983                           ;buttons.c: 88: unsigned char buttonProgram;
  2984                           ;buttons.c: 90: unsigned char i;
  2985                           ;buttons.c: 92: for ( i = 0; i < 0xFF; i++) {
  2986  000FF6  0E00               	movlw	0
  2987  000FF8  0100               	movlb	0	; () banked
  2988  000FFA  6FC5               	movwf	initAllButtons@i& (0+255),b
  2989  000FFC                     
  2990                           ; BSR set to: 0
  2991  000FFC  0100               	movlb	0	; () banked
  2992  000FFE  29C5               	incf	initAllButtons@i& (0+255),w,b
  2993  001000  B4D8               	btfsc	status,2,c
  2994  001002  0012               	return	
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;buttons.c: 93: buttonProgram = readAButton(i );
  2998                           
  2999                           ; BSR set to: 0
  3000                           
  3001                           ; BSR set to: 0
  3002  001004  0100               	movlb	0	; () banked
  3003  001006  51C5               	movf	initAllButtons@i& (0+255),w,b
  3004  001008  ECA3  F008         	call	_readAButton
  3005  00100C  0100               	movlb	0	; () banked
  3006  00100E  6FC4               	movwf	initAllButtons@buttonProgram& (0+255),b
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;buttons.c: 95: if ( buttonProgram != 0) {
  3010  001010  0100               	movlb	0	; () banked
  3011  001012  51C4               	movf	initAllButtons@buttonProgram& (0+255),w,b
  3012  001014  B4D8               	btfsc	status,2,c
  3013  001016  D00A               	goto	l2924
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;buttons.c: 96: initButton(buttonIndex, i, buttonProgram);
  3017  001018  C0C5  F0B5         	movff	initAllButtons@i,initButton@bn
  3018  00101C  C0C4  F0B6         	movff	initAllButtons@buttonProgram,initButton@bf
  3019  001020  0100               	movlb	0	; () banked
  3020  001022  51C3               	movf	initAllButtons@buttonIndex& (0+255),w,b
  3021  001024  EC62  F006         	call	_initButton
  3022                           
  3023                           ;buttons.c: 97: buttonIndex++;
  3024  001028  0100               	movlb	0	; () banked
  3025  00102A  2BC3               	incf	initAllButtons@buttonIndex& (0+255),f,b
  3026  00102C                     l2924:
  3027                           
  3028                           ; BSR set to: 0
  3029  00102C  0100               	movlb	0	; () banked
  3030  00102E  2BC5               	incf	initAllButtons@i& (0+255),f,b
  3031  001030  D7E5               	goto	L2
  3032  001032                     __end_of_initAllButtons:
  3033                           	opt stack 0
  3034                           tblptru	equ	0xFF8
  3035                           prodh	equ	0xFF4
  3036                           prodl	equ	0xFF3
  3037                           intcon	equ	0xFF2
  3038                           intcon2	equ	0xFF1
  3039                           postinc0	equ	0xFEE
  3040                           wreg	equ	0xFE8
  3041                           postdec1	equ	0xFE5
  3042                           fsr1h	equ	0xFE2
  3043                           fsr1l	equ	0xFE1
  3044                           indf2	equ	0xFDF
  3045                           fsr2h	equ	0xFDA
  3046                           fsr2l	equ	0xFD9
  3047                           status	equ	0xFD8
  3048                           
  3049 ;; *************** function _readAButton *****************
  3050 ;; Defined at:
  3051 ;;		line 222 in file "buttons.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  button          1    wreg     unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  button          1   30[BANK0 ] unsigned char 
  3056 ;;  program         1   31[BANK0 ] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      unsigned char 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3066 ;;      Params:         0       0       0       0       0       0       0
  3067 ;;      Locals:         0       2       0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0
  3069 ;;      Totals:         0       2       0       0       0       0       0
  3070 ;;Total ram usage:        2 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:   11
  3073 ;; This function calls:
  3074 ;;		_HDByteReadI2C
  3075 ;; This function is called by:
  3076 ;;		_initAllButtons
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text18
  3081  001146                     __ptext18:
  3082                           	opt stack 0
  3083  001146                     _readAButton:
  3084                           	opt stack 18
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;incstack = 0
  3088                           ;readAButton@button stored from wreg
  3089  001146  0100               	movlb	0	; () banked
  3090  001148  6FC1               	movwf	readAButton@button& (0+255),b
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;buttons.c: 224: unsigned char program;
  3094                           ;buttons.c: 225: HDByteReadI2C( 0xA0,0, button, &program, 1 );
  3095  00114A  0E00               	movlw	0
  3096  00114C  0100               	movlb	0	; () banked
  3097  00114E  6FBA               	movwf	HDByteReadI2C@HighAdd& (0+255),b
  3098  001150  C0C1  F0BB         	movff	readAButton@button,HDByteReadI2C@LowAdd
  3099  001154  0100               	movlb	0	; () banked
  3100  001156  0E00               	movlw	high readAButton@program
  3101  001158  0100               	movlb	0	; () banked
  3102  00115A  6FBD               	movwf	(HDByteReadI2C@data+1)& (0+255),b
  3103  00115C  0100               	movlb	0	; () banked
  3104  00115E  0EC2               	movlw	low readAButton@program
  3105  001160  0100               	movlb	0	; () banked
  3106  001162  6FBC               	movwf	HDByteReadI2C@data& (0+255),b
  3107  001164  0E01               	movlw	1
  3108  001166  0100               	movlb	0	; () banked
  3109  001168  6FBE               	movwf	HDByteReadI2C@length& (0+255),b
  3110  00116A  0EA0               	movlw	160
  3111  00116C  EC55  F002         	call	_HDByteReadI2C
  3112                           
  3113                           ;buttons.c: 226: return program;
  3114  001170  0100               	movlb	0	; () banked
  3115  001172  51C2               	movf	readAButton@program& (0+255),w,b
  3116  001174  0012               	return	
  3117  001176                     __end_of_readAButton:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           intcon	equ	0xFF2
  3123                           intcon2	equ	0xFF1
  3124                           postinc0	equ	0xFEE
  3125                           wreg	equ	0xFE8
  3126                           postdec1	equ	0xFE5
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           indf2	equ	0xFDF
  3130                           fsr2h	equ	0xFDA
  3131                           fsr2l	equ	0xFD9
  3132                           status	equ	0xFD8
  3133                           
  3134 ;; *************** function _HDByteReadI2C *****************
  3135 ;; Defined at:
  3136 ;;		line 80 in file "massStorage.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  ControlByte     1    wreg     unsigned char 
  3139 ;;  HighAdd         1   23[BANK0 ] unsigned char 
  3140 ;;  LowAdd          1   24[BANK0 ] unsigned char 
  3141 ;;  data            2   25[BANK0 ] PTR unsigned char 
  3142 ;;		 -> readTestPattern@r(32), doDimStep@sc(3), readAButton@program(1), 
  3143 ;;  length          1   27[BANK0 ] unsigned char 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  ControlByte     1   29[BANK0 ] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      unsigned char 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3155 ;;      Params:         0       5       0       0       0       0       0
  3156 ;;      Locals:         0       1       0       0       0       0       0
  3157 ;;      Temps:          0       1       0       0       0       0       0
  3158 ;;      Totals:         0       7       0       0       0       0       0
  3159 ;;Total ram usage:        7 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:   10
  3162 ;; This function calls:
  3163 ;;		_WriteI2C1
  3164 ;;		_getsI2C1
  3165 ;; This function is called by:
  3166 ;;		_readAButton
  3167 ;;		_readTestPattern
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text19
  3172  0004AA                     __ptext19:
  3173                           	opt stack 0
  3174  0004AA                     _HDByteReadI2C:
  3175                           	opt stack 19
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;incstack = 0
  3179                           ;HDByteReadI2C@ControlByte stored from wreg
  3180  0004AA  0100               	movlb	0	; () banked
  3181  0004AC  6FC0               	movwf	HDByteReadI2C@ControlByte& (0+255),b
  3182  0004AE                     l2714:
  3183                           
  3184                           ; BSR set to: 0
  3185  0004AE  A4C7               	btfss	4039,2,c	;volatile
  3186  0004B0  D004               	goto	u4070
  3187  0004B2  0100               	movlb	0	; () banked
  3188  0004B4  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3189  0004B6  2BBF               	incf	??_HDByteReadI2C& (0+255),f,b
  3190  0004B8  D002               	goto	u4078
  3191  0004BA                     u4070:
  3192  0004BA  0100               	movlb	0	; () banked
  3193  0004BC  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3194  0004BE                     u4078:
  3195  0004BE  50C5               	movf	4037,w,c	;volatile
  3196  0004C0  0B1F               	andlw	31
  3197  0004C2  0100               	movlb	0	; () banked
  3198  0004C4  11BF               	iorwf	??_HDByteReadI2C& (0+255),w,b
  3199  0004C6  0900               	iorlw	0
  3200  0004C8  A4D8               	btfss	status,2,c
  3201  0004CA  D7F1               	goto	l2714
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;massStorage.c: 83: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3205  0004CC  80C5               	bsf	4037,0,c	;volatile
  3206  0004CE                     l363:
  3207                           
  3208                           ; BSR set to: 0
  3209  0004CE  B0C5               	btfsc	4037,0,c	;volatile
  3210  0004D0  D7FE               	goto	l363
  3211  0004D2                     l366:
  3212                           
  3213                           ; BSR set to: 0
  3214  0004D2  B0C5               	btfsc	4037,0,c	;volatile
  3215  0004D4  D7FE               	goto	l366
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;massStorage.c: 85: WriteI2C1( ControlByte );
  3219                           
  3220                           ; BSR set to: 0
  3221  0004D6  0100               	movlb	0	; () banked
  3222  0004D8  51C0               	movf	HDByteReadI2C@ControlByte& (0+255),w,b
  3223  0004DA  EC66  F004         	call	_WriteI2C1
  3224  0004DE                     l2718:
  3225  0004DE  A4C7               	btfss	4039,2,c	;volatile
  3226  0004E0  D004               	goto	u4110
  3227  0004E2  0100               	movlb	0	; () banked
  3228  0004E4  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3229  0004E6  2BBF               	incf	??_HDByteReadI2C& (0+255),f,b
  3230  0004E8  D002               	goto	u4118
  3231  0004EA                     u4110:
  3232  0004EA  0100               	movlb	0	; () banked
  3233  0004EC  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3234  0004EE                     u4118:
  3235  0004EE  50C5               	movf	4037,w,c	;volatile
  3236  0004F0  0B1F               	andlw	31
  3237  0004F2  0100               	movlb	0	; () banked
  3238  0004F4  11BF               	iorwf	??_HDByteReadI2C& (0+255),w,b
  3239  0004F6  0900               	iorlw	0
  3240  0004F8  A4D8               	btfss	status,2,c
  3241  0004FA  D7F1               	goto	l2718
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;massStorage.c: 87: WriteI2C1( HighAdd );
  3245                           
  3246                           ; BSR set to: 0
  3247  0004FC  0100               	movlb	0	; () banked
  3248  0004FE  51BA               	movf	HDByteReadI2C@HighAdd& (0+255),w,b
  3249  000500  EC66  F004         	call	_WriteI2C1
  3250  000504                     l2722:
  3251  000504  A4C7               	btfss	4039,2,c	;volatile
  3252  000506  D004               	goto	u4130
  3253  000508  0100               	movlb	0	; () banked
  3254  00050A  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3255  00050C  2BBF               	incf	??_HDByteReadI2C& (0+255),f,b
  3256  00050E  D002               	goto	u4138
  3257  000510                     u4130:
  3258  000510  0100               	movlb	0	; () banked
  3259  000512  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3260  000514                     u4138:
  3261  000514  50C5               	movf	4037,w,c	;volatile
  3262  000516  0B1F               	andlw	31
  3263  000518  0100               	movlb	0	; () banked
  3264  00051A  11BF               	iorwf	??_HDByteReadI2C& (0+255),w,b
  3265  00051C  0900               	iorlw	0
  3266  00051E  A4D8               	btfss	status,2,c
  3267  000520  D7F1               	goto	l2722
  3268  000522                     l375:
  3269                           
  3270                           ; BSR set to: 0
  3271  000522  B2C5               	btfsc	4037,1,c	;volatile
  3272  000524  D7FE               	goto	l375
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;massStorage.c: 90: WriteI2C1( LowAdd );
  3276                           
  3277                           ; BSR set to: 0
  3278  000526  0100               	movlb	0	; () banked
  3279  000528  51BB               	movf	HDByteReadI2C@LowAdd& (0+255),w,b
  3280  00052A  EC66  F004         	call	_WriteI2C1
  3281  00052E                     l2726:
  3282  00052E  A4C7               	btfss	4039,2,c	;volatile
  3283  000530  D004               	goto	u4160
  3284  000532  0100               	movlb	0	; () banked
  3285  000534  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3286  000536  2BBF               	incf	??_HDByteReadI2C& (0+255),f,b
  3287  000538  D002               	goto	u4168
  3288  00053A                     u4160:
  3289  00053A  0100               	movlb	0	; () banked
  3290  00053C  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3291  00053E                     u4168:
  3292  00053E  50C5               	movf	4037,w,c	;volatile
  3293  000540  0B1F               	andlw	31
  3294  000542  0100               	movlb	0	; () banked
  3295  000544  11BF               	iorwf	??_HDByteReadI2C& (0+255),w,b
  3296  000546  0900               	iorlw	0
  3297  000548  A4D8               	btfss	status,2,c
  3298  00054A  D7F1               	goto	l2726
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;massStorage.c: 92: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN);
  3302  00054C  82C5               	bsf	4037,1,c	;volatile
  3303  00054E                     l381:
  3304                           
  3305                           ; BSR set to: 0
  3306  00054E  B2C5               	btfsc	4037,1,c	;volatile
  3307  000550  D7FE               	goto	l381
  3308  000552                     l384:
  3309                           
  3310                           ; BSR set to: 0
  3311  000552  B2C5               	btfsc	4037,1,c	;volatile
  3312  000554  D7FE               	goto	l384
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;massStorage.c: 94: WriteI2C1( ControlByte | 0x01 );
  3316                           
  3317                           ; BSR set to: 0
  3318  000556  0100               	movlb	0	; () banked
  3319  000558  51C0               	movf	HDByteReadI2C@ControlByte& (0+255),w,b
  3320  00055A  0901               	iorlw	1
  3321  00055C  EC66  F004         	call	_WriteI2C1
  3322  000560                     l2730:
  3323  000560  A4C7               	btfss	4039,2,c	;volatile
  3324  000562  D004               	goto	u4200
  3325  000564  0100               	movlb	0	; () banked
  3326  000566  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3327  000568  2BBF               	incf	??_HDByteReadI2C& (0+255),f,b
  3328  00056A  D002               	goto	u4208
  3329  00056C                     u4200:
  3330  00056C  0100               	movlb	0	; () banked
  3331  00056E  6BBF               	clrf	??_HDByteReadI2C& (0+255),b
  3332  000570                     u4208:
  3333  000570  50C5               	movf	4037,w,c	;volatile
  3334  000572  0B1F               	andlw	31
  3335  000574  0100               	movlb	0	; () banked
  3336  000576  11BF               	iorwf	??_HDByteReadI2C& (0+255),w,b
  3337  000578  0900               	iorlw	0
  3338  00057A  A4D8               	btfss	status,2,c
  3339  00057C  D7F1               	goto	l2730
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;massStorage.c: 96: getsI2C1( data, length );
  3343                           
  3344                           ; BSR set to: 0
  3345  00057E  0100               	movlb	0	; () banked
  3346  000580  C0BD  F0B7         	movff	HDByteReadI2C@data+1,getsI2C1@rdptr+1
  3347  000584  0100               	movlb	0	; () banked
  3348  000586  C0BC  F0B6         	movff	HDByteReadI2C@data,getsI2C1@rdptr
  3349  00058A  C0BE  F0B8         	movff	HDByteReadI2C@length,getsI2C1@length
  3350  00058E  ECD2  F006         	call	_getsI2C1	;wreg free
  3351                           
  3352                           ;massStorage.c: 97: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  3353  000592  8AC5               	bsf	4037,5,c	;volatile
  3354  000594  88C5               	bsf	4037,4,c	;volatile
  3355  000596                     l390:
  3356  000596  B8C5               	btfsc	4037,4,c	;volatile
  3357  000598  D7FE               	goto	l390
  3358  00059A                     l393:
  3359  00059A  B8C5               	btfsc	4037,4,c	;volatile
  3360  00059C  D7FE               	goto	l393
  3361                           
  3362                           ;massStorage.c: 99: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  3363  00059E  84C5               	bsf	4037,2,c	;volatile
  3364  0005A0                     l396:
  3365  0005A0  B4C5               	btfsc	4037,2,c	;volatile
  3366  0005A2  D7FE               	goto	l396
  3367  0005A4                     l399:
  3368  0005A4  A4C5               	btfss	4037,2,c	;volatile
  3369                           
  3370                           ;massStorage.c: 101: return ( 0 );
  3371                           ;	Return value of _HDByteReadI2C is never used
  3372  0005A6  0012               	return	
  3373  0005A8  D7FD               	goto	l399
  3374  0005AA                     __end_of_HDByteReadI2C:
  3375                           	opt stack 0
  3376                           tblptru	equ	0xFF8
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           intcon	equ	0xFF2
  3380                           intcon2	equ	0xFF1
  3381                           postinc0	equ	0xFEE
  3382                           wreg	equ	0xFE8
  3383                           postdec1	equ	0xFE5
  3384                           fsr1h	equ	0xFE2
  3385                           fsr1l	equ	0xFE1
  3386                           indf2	equ	0xFDF
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _getsI2C1 *****************
  3392 ;; Defined at:
  3393 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1gets.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  rdptr           2   19[BANK0 ] PTR unsigned char 
  3396 ;;		 -> readTestPattern@r(32), doDimStep@sc(3), readAButton@program(1), 
  3397 ;;  length          1   21[BANK0 ] unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      char 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3409 ;;      Params:         0       3       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0
  3411 ;;      Temps:          0       1       0       0       0       0       0
  3412 ;;      Totals:         0       4       0       0       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    9
  3416 ;; This function calls:
  3417 ;;		_ReadI2C1
  3418 ;; This function is called by:
  3419 ;;		_HDByteReadI2C
  3420 ;;		_LDByteReadI2C
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text20
  3425  000DA4                     __ptext20:
  3426                           	opt stack 0
  3427  000DA4                     _getsI2C1:
  3428                           	opt stack 19
  3429                           
  3430                           ;incstack = 0
  3431  000DA4  D02A               	goto	l2656
  3432  000DA6                     l2642:
  3433  000DA6  ECBB  F008         	call	_ReadI2C1	;wreg free
  3434  000DAA  C0B6  FFD9         	movff	getsI2C1@rdptr,fsr2l
  3435  000DAE  C0B7  FFDA         	movff	getsI2C1@rdptr+1,fsr2h
  3436  000DB2  6EDF               	movwf	indf2,c
  3437  000DB4  0100               	movlb	0	; () banked
  3438  000DB6  4BB6               	infsnz	getsI2C1@rdptr& (0+255),f,b
  3439  000DB8  2BB7               	incf	(getsI2C1@rdptr+1)& (0+255),f,b
  3440  000DBA                     l551:
  3441  000DBA  B6C5               	btfsc	4037,3,c	;volatile
  3442  000DBC  D7FE               	goto	l551
  3443  000DBE  B6A1               	btfsc	4001,3,c	;volatile
  3444  000DC0  0012               	return	
  3445                           
  3446                           ;	Return value of _getsI2C1 is never used
  3447  000DC2  CFC6 F0B9          	movff	4038,??_getsI2C1	;volatile
  3448  000DC6  0E0F               	movlw	15
  3449  000DC8  0100               	movlb	0	; () banked
  3450  000DCA  17B9               	andwf	??_getsI2C1& (0+255),f,b
  3451  000DCC  0100               	movlb	0	; () banked
  3452  000DCE  51B9               	movf	??_getsI2C1& (0+255),w,b
  3453  000DD0  0A08               	xorlw	8
  3454  000DD2  B4D8               	btfsc	status,2,c
  3455  000DD4  D00A               	goto	l2652
  3456                           
  3457                           ; BSR set to: 0
  3458  000DD6  CFC6 F0B9          	movff	4038,??_getsI2C1	;volatile
  3459  000DDA  0E0F               	movlw	15
  3460  000DDC  0100               	movlb	0	; () banked
  3461  000DDE  17B9               	andwf	??_getsI2C1& (0+255),f,b
  3462  000DE0  0100               	movlb	0	; () banked
  3463  000DE2  51B9               	movf	??_getsI2C1& (0+255),w,b
  3464  000DE4  0A0B               	xorlw	11
  3465  000DE6  A4D8               	btfss	status,2,c
  3466  000DE8  D008               	goto	l2656
  3467  000DEA                     l2652:
  3468                           
  3469                           ; BSR set to: 0
  3470  000DEA  0100               	movlb	0	; () banked
  3471  000DEC  51B8               	movf	getsI2C1@length& (0+255),w,b
  3472  000DEE  B4D8               	btfsc	status,2,c
  3473  000DF0  D004               	goto	l2656
  3474                           
  3475                           ; BSR set to: 0
  3476  000DF2  9AC5               	bcf	4037,5,c	;volatile
  3477  000DF4  88C5               	bsf	4037,4,c	;volatile
  3478  000DF6                     l560:
  3479  000DF6  B8C5               	btfsc	4037,4,c	;volatile
  3480  000DF8  D7FE               	goto	l560
  3481  000DFA                     l2656:
  3482  000DFA  0100               	movlb	0	; () banked
  3483  000DFC  07B8               	decf	getsI2C1@length& (0+255),f,b
  3484  000DFE  0100               	movlb	0	; () banked
  3485  000E00  29B8               	incf	getsI2C1@length& (0+255),w,b
  3486  000E02  B4D8               	btfsc	status,2,c
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;	Return value of _getsI2C1 is never used
  3490  000E04  0012               	return	
  3491  000E06  D7CF               	goto	l2642
  3492  000E08                     __end_of_getsI2C1:
  3493                           	opt stack 0
  3494                           tblptru	equ	0xFF8
  3495                           prodh	equ	0xFF4
  3496                           prodl	equ	0xFF3
  3497                           intcon	equ	0xFF2
  3498                           intcon2	equ	0xFF1
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           postdec1	equ	0xFE5
  3502                           fsr1h	equ	0xFE2
  3503                           fsr1l	equ	0xFE1
  3504                           indf2	equ	0xFDF
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8
  3508                           
  3509 ;; *************** function _ReadI2C1 *****************
  3510 ;; Defined at:
  3511 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1read.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      unsigned char 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3525 ;;      Params:         0       0       0       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0
  3527 ;;      Temps:          0       1       0       0       0       0       0
  3528 ;;      Totals:         0       1       0       0       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    8
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_getsI2C1
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text21
  3540  001176                     __ptext21:
  3541                           	opt stack 0
  3542  001176                     _ReadI2C1:
  3543                           	opt stack 19
  3544                           
  3545                           ;incstack = 0
  3546  001176  CFC6 F0B5          	movff	4038,??_ReadI2C1	;volatile
  3547  00117A  0E0F               	movlw	15
  3548  00117C  0100               	movlb	0	; () banked
  3549  00117E  17B5               	andwf	??_ReadI2C1& (0+255),f,b
  3550  001180  0100               	movlb	0	; () banked
  3551  001182  51B5               	movf	??_ReadI2C1& (0+255),w,b
  3552  001184  0A08               	xorlw	8
  3553  001186  B4D8               	btfsc	status,2,c
  3554  001188  D009               	goto	l585
  3555                           
  3556                           ; BSR set to: 0
  3557  00118A  CFC6 F0B5          	movff	4038,??_ReadI2C1	;volatile
  3558  00118E  0E0F               	movlw	15
  3559  001190  0100               	movlb	0	; () banked
  3560  001192  17B5               	andwf	??_ReadI2C1& (0+255),f,b
  3561  001194  0100               	movlb	0	; () banked
  3562  001196  51B5               	movf	??_ReadI2C1& (0+255),w,b
  3563  001198  0A0B               	xorlw	11
  3564  00119A  B4D8               	btfsc	status,2,c
  3565  00119C                     l585:
  3566                           
  3567                           ; BSR set to: 0
  3568  00119C  86C5               	bsf	4037,3,c	;volatile
  3569  00119E                     l586:
  3570  00119E  A0C7               	btfss	4039,0,c	;volatile
  3571  0011A0  D7FE               	goto	l586
  3572  0011A2  50C9               	movf	4041,w,c	;volatile
  3573  0011A4  0012               	return	
  3574  0011A6                     __end_of_ReadI2C1:
  3575                           	opt stack 0
  3576                           tblptru	equ	0xFF8
  3577                           prodh	equ	0xFF4
  3578                           prodl	equ	0xFF3
  3579                           intcon	equ	0xFF2
  3580                           intcon2	equ	0xFF1
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           fsr1h	equ	0xFE2
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _WriteI2C1 *****************
  3592 ;; Defined at:
  3593 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1writ.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  data_out        1    wreg     unsigned char 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  data_out        1   19[BANK0 ] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      char 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3607 ;;      Params:         0       0       0       0       0       0       0
  3608 ;;      Locals:         0       1       0       0       0       0       0
  3609 ;;      Temps:          0       1       0       0       0       0       0
  3610 ;;      Totals:         0       2       0       0       0       0       0
  3611 ;;Total ram usage:        2 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    8
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_HDByteWriteI2C
  3618 ;;		_HDByteReadI2C
  3619 ;;		_EEAckPolling1
  3620 ;;		_LDByteReadI2C
  3621 ;;		_LDByteWriteI2C
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text22
  3626  0008CC                     __ptext22:
  3627                           	opt stack 0
  3628  0008CC                     _WriteI2C1:
  3629                           	opt stack 19
  3630                           
  3631                           ;incstack = 0
  3632                           ;WriteI2C1@data_out stored from wreg
  3633  0008CC  0100               	movlb	0	; () banked
  3634  0008CE  6FB6               	movwf	WriteI2C1@data_out& (0+255),b
  3635                           
  3636                           ; BSR set to: 0
  3637  0008D0  C0B6  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  3638                           
  3639                           ; BSR set to: 0
  3640  0008D4  AEC6               	btfss	4038,7,c	;volatile
  3641  0008D6  D002               	goto	l2560
  3642                           
  3643                           ; BSR set to: 0
  3644  0008D8  0EFF               	movlw	255
  3645  0008DA  0012               	return	
  3646  0008DC                     l2560:
  3647                           
  3648                           ; BSR set to: 0
  3649  0008DC  CFC6 F0B5          	movff	4038,??_WriteI2C1	;volatile
  3650  0008E0  0E0F               	movlw	15
  3651  0008E2  0100               	movlb	0	; () banked
  3652  0008E4  17B5               	andwf	??_WriteI2C1& (0+255),f,b
  3653  0008E6  0100               	movlb	0	; () banked
  3654  0008E8  51B5               	movf	??_WriteI2C1& (0+255),w,b
  3655  0008EA  0A08               	xorlw	8
  3656  0008EC  B4D8               	btfsc	status,2,c
  3657  0008EE  D014               	goto	l2578
  3658                           
  3659                           ; BSR set to: 0
  3660  0008F0  CFC6 F0B5          	movff	4038,??_WriteI2C1	;volatile
  3661  0008F4  0E0F               	movlw	15
  3662  0008F6  0100               	movlb	0	; () banked
  3663  0008F8  17B5               	andwf	??_WriteI2C1& (0+255),f,b
  3664  0008FA  0100               	movlb	0	; () banked
  3665  0008FC  51B5               	movf	??_WriteI2C1& (0+255),w,b
  3666  0008FE  0A0B               	xorlw	11
  3667  000900  B4D8               	btfsc	status,2,c
  3668  000902  D00A               	goto	l2578
  3669                           
  3670                           ; BSR set to: 0
  3671  000904  88C6               	bsf	4038,4,c	;volatile
  3672  000906                     l610:
  3673                           
  3674                           ; BSR set to: 0
  3675  000906  A69E               	btfss	3998,3,c	;volatile
  3676  000908  D7FE               	goto	l610
  3677                           
  3678                           ; BSR set to: 0
  3679  00090A  A4C7               	btfss	4039,2,c	;volatile
  3680                           
  3681                           ; BSR set to: 0
  3682  00090C  B0C7               	btfsc	4039,0,c	;volatile
  3683  00090E  D002               	goto	l2574
  3684                           
  3685                           ; BSR set to: 0
  3686  000910  0EFE               	movlw	254
  3687  000912  0012               	return	
  3688  000914                     l2574:
  3689                           
  3690                           ; BSR set to: 0
  3691  000914  0E00               	movlw	0
  3692  000916  0012               	return	
  3693  000918                     l2578:
  3694                           
  3695                           ; BSR set to: 0
  3696  000918  CFC6 F0B5          	movff	4038,??_WriteI2C1	;volatile
  3697  00091C  0E0F               	movlw	15
  3698  00091E  0100               	movlb	0	; () banked
  3699  000920  17B5               	andwf	??_WriteI2C1& (0+255),f,b
  3700  000922  0100               	movlb	0	; () banked
  3701  000924  51B5               	movf	??_WriteI2C1& (0+255),w,b
  3702  000926  0A08               	xorlw	8
  3703  000928  B4D8               	btfsc	status,2,c
  3704  00092A  D00A               	goto	l619
  3705                           
  3706                           ; BSR set to: 0
  3707  00092C  CFC6 F0B5          	movff	4038,??_WriteI2C1	;volatile
  3708  000930  0E0F               	movlw	15
  3709  000932  0100               	movlb	0	; () banked
  3710  000934  17B5               	andwf	??_WriteI2C1& (0+255),f,b
  3711  000936  0100               	movlb	0	; () banked
  3712  000938  51B5               	movf	??_WriteI2C1& (0+255),w,b
  3713  00093A  0A0B               	xorlw	11
  3714  00093C  A4D8               	btfss	status,2,c
  3715  00093E  0012               	return	
  3716  000940                     l619:
  3717                           
  3718                           ; BSR set to: 0
  3719  000940  B0C7               	btfsc	4039,0,c	;volatile
  3720  000942  D7FE               	goto	l619
  3721  000944                     l2582:
  3722                           
  3723                           ; BSR set to: 0
  3724  000944  A4C7               	btfss	4039,2,c	;volatile
  3725  000946  D004               	goto	u3590
  3726  000948  0100               	movlb	0	; () banked
  3727  00094A  6BB5               	clrf	??_WriteI2C1& (0+255),b
  3728  00094C  2BB5               	incf	??_WriteI2C1& (0+255),f,b
  3729  00094E  D002               	goto	u3598
  3730  000950                     u3590:
  3731  000950  0100               	movlb	0	; () banked
  3732  000952  6BB5               	clrf	??_WriteI2C1& (0+255),b
  3733  000954                     u3598:
  3734  000954  50C5               	movf	4037,w,c	;volatile
  3735  000956  0B1F               	andlw	31
  3736  000958  0100               	movlb	0	; () banked
  3737  00095A  11B5               	iorwf	??_WriteI2C1& (0+255),w,b
  3738  00095C  0900               	iorlw	0
  3739  00095E  A4D8               	btfss	status,2,c
  3740  000960  D7F1               	goto	l2582
  3741                           
  3742                           ; BSR set to: 0
  3743  000962  ACC5               	btfss	4037,6,c	;volatile
  3744  000964  D002               	goto	l2590
  3745                           
  3746                           ; BSR set to: 0
  3747  000966  0EFE               	movlw	254
  3748  000968  0012               	return	
  3749  00096A                     l2590:
  3750                           
  3751                           ; BSR set to: 0
  3752  00096A  0E00               	movlw	0
  3753  00096C  0012               	return	
  3754  00096E                     __end_of_WriteI2C1:
  3755                           	opt stack 0
  3756                           tblptru	equ	0xFF8
  3757                           prodh	equ	0xFF4
  3758                           prodl	equ	0xFF3
  3759                           intcon	equ	0xFF2
  3760                           intcon2	equ	0xFF1
  3761                           postinc0	equ	0xFEE
  3762                           wreg	equ	0xFE8
  3763                           postdec1	equ	0xFE5
  3764                           fsr1h	equ	0xFE2
  3765                           fsr1l	equ	0xFE1
  3766                           indf2	equ	0xFDF
  3767                           fsr2h	equ	0xFDA
  3768                           fsr2l	equ	0xFD9
  3769                           status	equ	0xFD8
  3770                           
  3771 ;; *************** function _initButton *****************
  3772 ;; Defined at:
  3773 ;;		line 105 in file "buttons.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  i               1    wreg     unsigned char 
  3776 ;;  bn              1   18[BANK0 ] unsigned char 
  3777 ;;  bf              1   19[BANK0 ] unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  i               1   20[BANK0 ] unsigned char 
  3780 ;;  bp              2   21[BANK0 ] PTR struct button
  3781 ;;		 -> buttons(256), 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3791 ;;      Params:         0       2       0       0       0       0       0
  3792 ;;      Locals:         0       3       0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0
  3794 ;;      Totals:         0       5       0       0       0       0       0
  3795 ;;Total ram usage:        5 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    8
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_initAllButtons
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text23
  3806  000CC4                     __ptext23:
  3807                           	opt stack 0
  3808  000CC4                     _initButton:
  3809                           	opt stack 21
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;incstack = 0
  3813                           ;initButton@i stored from wreg
  3814  000CC4  0100               	movlb	0	; () banked
  3815  000CC6  6FB7               	movwf	initButton@i& (0+255),b
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;buttons.c: 107: BUTTON *bp = &buttons[i];
  3819  000CC8  0100               	movlb	0	; () banked
  3820  000CCA  51B7               	movf	initButton@i& (0+255),w,b
  3821  000CCC  0D04               	mullw	4
  3822  000CCE  0101               	movlb	1	; () banked
  3823  000CD0  0E00               	movlw	low _buttons
  3824  000CD2  24F3               	addwf	prodl,w,c
  3825  000CD4  0100               	movlb	0	; () banked
  3826  000CD6  6FB8               	movwf	initButton@bp& (0+255),b
  3827  000CD8  0101               	movlb	1	; () banked
  3828  000CDA  0E01               	movlw	high _buttons
  3829  000CDC  20F4               	addwfc	prodh,w,c
  3830  000CDE  0100               	movlb	0	; () banked
  3831  000CE0  6FB9               	movwf	(initButton@bp+1)& (0+255),b
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;buttons.c: 109: bp -> buttonNumber = bn;
  3835  000CE2  C0B8  FFD9         	movff	initButton@bp,fsr2l
  3836  000CE6  C0B9  FFDA         	movff	initButton@bp+1,fsr2h
  3837  000CEA  0100               	movlb	0	; () banked
  3838  000CEC  C0B5  FFDF         	movff	initButton@bn,indf2
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;buttons.c: 110: bp -> buttonFunction = bf;
  3842  000CF0  0100               	movlb	0	; () banked
  3843  000CF2  EE20 F001          	lfsr	2,1
  3844  000CF6  0100               	movlb	0	; () banked
  3845  000CF8  51B8               	movf	initButton@bp& (0+255),w,b
  3846  000CFA  26D9               	addwf	fsr2l,f,c
  3847  000CFC  0100               	movlb	0	; () banked
  3848  000CFE  51B9               	movf	(initButton@bp+1)& (0+255),w,b
  3849  000D00  22DA               	addwfc	fsr2h,f,c
  3850  000D02  0100               	movlb	0	; () banked
  3851  000D04  C0B6  FFDF         	movff	initButton@bf,indf2
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;buttons.c: 112: bp -> isActive = 0;
  3855  000D08  0100               	movlb	0	; () banked
  3856  000D0A  EE20 F002          	lfsr	2,2
  3857  000D0E  0100               	movlb	0	; () banked
  3858  000D10  51B8               	movf	initButton@bp& (0+255),w,b
  3859  000D12  26D9               	addwf	fsr2l,f,c
  3860  000D14  0100               	movlb	0	; () banked
  3861  000D16  51B9               	movf	(initButton@bp+1)& (0+255),w,b
  3862  000D18  22DA               	addwfc	fsr2h,f,c
  3863  000D1A  0E00               	movlw	0
  3864  000D1C  6EDF               	movwf	indf2,c
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;buttons.c: 113: bp -> watchdog = 0;
  3868  000D1E  0100               	movlb	0	; () banked
  3869  000D20  EE20 F003          	lfsr	2,3
  3870  000D24  0100               	movlb	0	; () banked
  3871  000D26  51B8               	movf	initButton@bp& (0+255),w,b
  3872  000D28  26D9               	addwf	fsr2l,f,c
  3873  000D2A  0100               	movlb	0	; () banked
  3874  000D2C  51B9               	movf	(initButton@bp+1)& (0+255),w,b
  3875  000D2E  22DA               	addwfc	fsr2h,f,c
  3876  000D30  0E00               	movlw	0
  3877  000D32  6EDF               	movwf	indf2,c
  3878                           
  3879                           ; BSR set to: 0
  3880  000D34  0012               	return	
  3881  000D36                     __end_of_initButton:
  3882                           	opt stack 0
  3883                           tblptru	equ	0xFF8
  3884                           prodh	equ	0xFF4
  3885                           prodl	equ	0xFF3
  3886                           intcon	equ	0xFF2
  3887                           intcon2	equ	0xFF1
  3888                           postinc0	equ	0xFEE
  3889                           wreg	equ	0xFE8
  3890                           postdec1	equ	0xFE5
  3891                           fsr1h	equ	0xFE2
  3892                           fsr1l	equ	0xFE1
  3893                           indf2	equ	0xFDF
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function _fifoGet *****************
  3899 ;; Defined at:
  3900 ;;		line 40 in file "fifo.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  v               1   20[BANK0 ] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      unsigned char 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3914 ;;      Params:         0       0       0       0       0       0       0
  3915 ;;      Locals:         0       1       0       0       0       0       0
  3916 ;;      Temps:          0       2       0       0       0       0       0
  3917 ;;      Totals:         0       3       0       0       0       0       0
  3918 ;;Total ram usage:        3 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    8
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text24
  3929  001110                     __ptext24:
  3930                           	opt stack 0
  3931  001110                     _fifoGet:
  3932                           	opt stack 22
  3933                           
  3934                           ;fifo.c: 42: unsigned char v = fifo[fifoOut];
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;incstack = 0
  3938  001110  5040               	movf	_fifoOut,w,c
  3939  001112  0D01               	mullw	1
  3940  001114  0E2B               	movlw	low _fifo
  3941  001116  24F3               	addwf	prodl,w,c
  3942  001118  6ED9               	movwf	fsr2l,c
  3943  00111A  0E00               	movlw	high _fifo
  3944  00111C  20F4               	addwfc	prodh,w,c
  3945  00111E  6EDA               	movwf	fsr2h,c
  3946  001120  50DF               	movf	indf2,w,c
  3947  001122  0100               	movlb	0	; () banked
  3948  001124  6FB7               	movwf	fifoGet@v& (0+255),b
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;fifo.c: 45: return fifo[fifoOut++ & 0x0F];
  3952  001126  2A40               	incf	_fifoOut,f,c
  3953  001128  0440               	decf	_fifoOut,w,c
  3954  00112A  0B0F               	andlw	15
  3955  00112C  0100               	movlb	0	; () banked
  3956  00112E  6FB5               	movwf	??_fifoGet& (0+255),b
  3957  001130  6BB6               	clrf	(??_fifoGet+1)& (0+255),b
  3958  001132  0E2B               	movlw	low _fifo
  3959  001134  0100               	movlb	0	; () banked
  3960  001136  25B5               	addwf	??_fifoGet& (0+255),w,b
  3961  001138  6ED9               	movwf	fsr2l,c
  3962  00113A  0E00               	movlw	high _fifo
  3963  00113C  0100               	movlb	0	; () banked
  3964  00113E  21B6               	addwfc	(??_fifoGet+1)& (0+255),w,b
  3965  001140  6EDA               	movwf	fsr2h,c
  3966  001142  50DF               	movf	indf2,w,c
  3967  001144  0012               	return	
  3968  001146                     __end_of_fifoGet:
  3969                           	opt stack 0
  3970                           tblptru	equ	0xFF8
  3971                           prodh	equ	0xFF4
  3972                           prodl	equ	0xFF3
  3973                           intcon	equ	0xFF2
  3974                           intcon2	equ	0xFF1
  3975                           postinc0	equ	0xFEE
  3976                           wreg	equ	0xFE8
  3977                           postdec1	equ	0xFE5
  3978                           fsr1h	equ	0xFE2
  3979                           fsr1l	equ	0xFE1
  3980                           indf2	equ	0xFDF
  3981                           fsr2h	equ	0xFDA
  3982                           fsr2l	equ	0xFD9
  3983                           status	equ	0xFD8
  3984                           
  3985 ;; *************** function _fifoEmpty *****************
  3986 ;; Defined at:
  3987 ;;		line 65 in file "fifo.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      unsigned char 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4001 ;;      Params:         0       0       0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0
  4003 ;;      Temps:          0       1       0       0       0       0       0
  4004 ;;      Totals:         0       1       0       0       0       0       0
  4005 ;;Total ram usage:        1 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    8
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text25
  4016  0012AE                     __ptext25:
  4017                           	opt stack 0
  4018  0012AE                     _fifoEmpty:
  4019                           	opt stack 22
  4020                           
  4021                           ;fifo.c: 67: return (fifoIn & 0x0F) == (fifoOut & 0x0F);
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;incstack = 0
  4025  0012AE  C040  F0B5         	movff	_fifoOut,??_fifoEmpty
  4026  0012B2  0E0F               	movlw	15
  4027  0012B4  0100               	movlb	0	; () banked
  4028  0012B6  17B5               	andwf	??_fifoEmpty& (0+255),f,b
  4029  0012B8  503F               	movf	_fifoIn,w,c
  4030  0012BA  0B0F               	andlw	15
  4031  0012BC  0100               	movlb	0	; () banked
  4032  0012BE  19B5               	xorwf	??_fifoEmpty& (0+255),w,b
  4033  0012C0  A4D8               	btfss	status,2,c
  4034  0012C2  D002               	goto	u4360
  4035  0012C4  0E01               	movlw	1
  4036  0012C6  0012               	return	
  4037  0012C8                     u4360:
  4038  0012C8  0E00               	movlw	0
  4039  0012CA  0012               	return	
  4040  0012CC                     __end_of_fifoEmpty:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           prodh	equ	0xFF4
  4044                           prodl	equ	0xFF3
  4045                           intcon	equ	0xFF2
  4046                           intcon2	equ	0xFF1
  4047                           postinc0	equ	0xFEE
  4048                           wreg	equ	0xFE8
  4049                           postdec1	equ	0xFE5
  4050                           fsr1h	equ	0xFE2
  4051                           fsr1l	equ	0xFE1
  4052                           indf2	equ	0xFDF
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _doDimStart *****************
  4058 ;; Defined at:
  4059 ;;		line 36 in file "scenes.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  program         1    wreg     unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  program         1   18[BANK0 ] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;		None               void
  4066 ;; Registers used:
  4067 ;;		wreg, status,2
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4073 ;;      Params:         0       0       0       0       0       0       0
  4074 ;;      Locals:         0       1       0       0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0
  4076 ;;      Totals:         0       1       0       0       0       0       0
  4077 ;;Total ram usage:        1 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    8
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text26
  4088  001308                     __ptext26:
  4089                           	opt stack 0
  4090  001308                     _doDimStart:
  4091                           	opt stack 22
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;incstack = 0
  4095                           ;doDimStart@program stored from wreg
  4096  001308  0100               	movlb	0	; () banked
  4097  00130A  6FB5               	movwf	doDimStart@program& (0+255),b
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;scenes.c: 38: targetScene = program;
  4101  00130C  C0B5  F041         	movff	doDimStart@program,_targetScene	;volatile
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;scenes.c: 39: dimmingInProgress = 1;
  4105  001310  0E01               	movlw	1
  4106  001312  6E3D               	movwf	_dimmingInProgress,c	;volatile
  4107                           
  4108                           ; BSR set to: 0
  4109  001314  0012               	return	
  4110  001316                     __end_of_doDimStart:
  4111                           	opt stack 0
  4112                           tblptru	equ	0xFF8
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           intcon2	equ	0xFF1
  4117                           postinc0	equ	0xFEE
  4118                           wreg	equ	0xFE8
  4119                           postdec1	equ	0xFE5
  4120                           fsr1h	equ	0xFE2
  4121                           fsr1l	equ	0xFE1
  4122                           indf2	equ	0xFDF
  4123                           fsr2h	equ	0xFDA
  4124                           fsr2l	equ	0xFD9
  4125                           status	equ	0xFD8
  4126                           
  4127 ;; *************** function _buttonByteReceived *****************
  4128 ;; Defined at:
  4129 ;;		line 26 in file "protocol.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  b               1    wreg     unsigned char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  b               1   28[BANK0 ] unsigned char 
  4134 ;;  code            1   27[BANK0 ] unsigned char 
  4135 ;;  checksum        1   26[BANK0 ] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;		None               void
  4138 ;; Registers used:
  4139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4145 ;;      Params:         0       0       0       0       0       0       0
  4146 ;;      Locals:         0       3       0       0       0       0       0
  4147 ;;      Temps:          0       1       0       0       0       0       0
  4148 ;;      Totals:         0       4       0       0       0       0       0
  4149 ;;Total ram usage:        4 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:   10
  4152 ;; This function calls:
  4153 ;;		_decodeButton
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text27
  4160  000B40                     __ptext27:
  4161                           	opt stack 0
  4162  000B40                     _buttonByteReceived:
  4163                           	opt stack 20
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;incstack = 0
  4167                           ;buttonByteReceived@b stored from wreg
  4168  000B40  0100               	movlb	0	; () banked
  4169  000B42  6FBF               	movwf	buttonByteReceived@b& (0+255),b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;protocol.c: 29: unsigned char checksum;
  4173                           ;protocol.c: 30: unsigned char code;
  4174                           ;protocol.c: 38: if (protocolState == 0 && b == 0xF1 ) {
  4175  000B44  0100               	movlb	0	; () banked
  4176  000B46  67A2               	tstfsz	_protocolState& (0+255),b
  4177  000B48  D009               	goto	l2970
  4178                           
  4179                           ; BSR set to: 0
  4180  000B4A  0100               	movlb	0	; () banked
  4181  000B4C  51BF               	movf	buttonByteReceived@b& (0+255),w,b
  4182  000B4E  0AF1               	xorlw	241
  4183  000B50  A4D8               	btfss	status,2,c
  4184  000B52  D004               	goto	l2970
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;protocol.c: 39: protocolState = 1;
  4188  000B54  0E01               	movlw	1
  4189  000B56  0100               	movlb	0	; () banked
  4190  000B58  6FA2               	movwf	_protocolState& (0+255),b
  4191  000B5A  0012               	return	
  4192  000B5C                     l2970:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;protocol.c: 41: }
  4196                           ;protocol.c: 43: if ( protocolState == 1 ) {
  4197  000B5C  0100               	movlb	0	; () banked
  4198  000B5E  05A2               	decf	_protocolState& (0+255),w,b
  4199  000B60  A4D8               	btfss	status,2,c
  4200  000B62  D00F               	goto	l2978
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;protocol.c: 45: device = (b >> 4) & 0x0F;
  4204  000B64  0100               	movlb	0	; () banked
  4205  000B66  39BF               	swapf	buttonByteReceived@b& (0+255),w,b
  4206  000B68  0B0F               	andlw	15
  4207  000B6A  0B0F               	andlw	15
  4208  000B6C  0100               	movlb	0	; () banked
  4209  000B6E  6FA1               	movwf	_device& (0+255),b
  4210                           
  4211                           ;protocol.c: 46: button = b & 0x0F;
  4212  000B70  0100               	movlb	0	; () banked
  4213  000B72  51BF               	movf	buttonByteReceived@b& (0+255),w,b
  4214  000B74  0B0F               	andlw	15
  4215  000B76  0100               	movlb	0	; () banked
  4216  000B78  6FA0               	movwf	_button& (0+255),b
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;protocol.c: 47: protocolState = 2;
  4220  000B7A  0E02               	movlw	2
  4221  000B7C  0100               	movlb	0	; () banked
  4222  000B7E  6FA2               	movwf	_protocolState& (0+255),b
  4223  000B80  0012               	return	
  4224  000B82                     l2978:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;protocol.c: 49: }
  4228                           ;protocol.c: 51: if ( protocolState == 2 ) {
  4229  000B82  0100               	movlb	0	; () banked
  4230  000B84  51A2               	movf	_protocolState& (0+255),w,b
  4231  000B86  0A02               	xorlw	2
  4232  000B88  A4D8               	btfss	status,2,c
  4233  000B8A  D01B               	goto	l2986
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;protocol.c: 53: code = ((device << 4) & 0xF0) | (button & 0x0F);
  4237  000B8C  C0A0  F0BC         	movff	_button,??_buttonByteReceived
  4238  000B90  0E0F               	movlw	15
  4239  000B92  0100               	movlb	0	; () banked
  4240  000B94  17BC               	andwf	??_buttonByteReceived& (0+255),f,b
  4241  000B96  0100               	movlb	0	; () banked
  4242  000B98  39A1               	swapf	_device& (0+255),w,b
  4243  000B9A  0BF0               	andlw	240
  4244  000B9C  0BF0               	andlw	240
  4245  000B9E  0100               	movlb	0	; () banked
  4246  000BA0  11BC               	iorwf	??_buttonByteReceived& (0+255),w,b
  4247  000BA2  0100               	movlb	0	; () banked
  4248  000BA4  6FBE               	movwf	buttonByteReceived@code& (0+255),b
  4249                           
  4250                           ;protocol.c: 54: checksum = 0xF1 ^ code ;
  4251  000BA6  0100               	movlb	0	; () banked
  4252  000BA8  51BE               	movf	buttonByteReceived@code& (0+255),w,b
  4253  000BAA  0AF1               	xorlw	241
  4254  000BAC  0100               	movlb	0	; () banked
  4255  000BAE  6FBD               	movwf	buttonByteReceived@checksum& (0+255),b
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;protocol.c: 56: if ( checksum == b) {
  4259  000BB0  0100               	movlb	0	; () banked
  4260  000BB2  51BF               	movf	buttonByteReceived@b& (0+255),w,b
  4261  000BB4  0100               	movlb	0	; () banked
  4262  000BB6  63BD               	cpfseq	buttonByteReceived@checksum& (0+255),b
  4263  000BB8  D004               	goto	l2986
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;protocol.c: 58: decodeButton(code);
  4267  000BBA  0100               	movlb	0	; () banked
  4268  000BBC  51BE               	movf	buttonByteReceived@code& (0+255),w,b
  4269  000BBE  ECD3  F008         	call	_decodeButton
  4270  000BC2                     l2986:
  4271                           
  4272                           ;protocol.c: 60: }
  4273                           ;protocol.c: 61: }
  4274                           ;protocol.c: 63: protocolState = 0;
  4275  000BC2  0E00               	movlw	0
  4276  000BC4  0100               	movlb	0	; () banked
  4277  000BC6  6FA2               	movwf	_protocolState& (0+255),b
  4278                           
  4279                           ; BSR set to: 0
  4280  000BC8  0012               	return	
  4281  000BCA                     __end_of_buttonByteReceived:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           prodh	equ	0xFF4
  4285                           prodl	equ	0xFF3
  4286                           intcon	equ	0xFF2
  4287                           intcon2	equ	0xFF1
  4288                           postinc0	equ	0xFEE
  4289                           wreg	equ	0xFE8
  4290                           postdec1	equ	0xFE5
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           fsr2h	equ	0xFDA
  4295                           fsr2l	equ	0xFD9
  4296                           status	equ	0xFD8
  4297                           
  4298 ;; *************** function _decodeButton *****************
  4299 ;; Defined at:
  4300 ;;		line 132 in file "buttons.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  code            1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  code            1   22[BANK0 ] unsigned char 
  4305 ;;  bp              2   23[BANK0 ] PTR struct button
  4306 ;;		 -> NULL(0), buttons(256), 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4316 ;;      Params:         0       0       0       0       0       0       0
  4317 ;;      Locals:         0       3       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0
  4319 ;;      Totals:         0       3       0       0       0       0       0
  4320 ;;Total ram usage:        3 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    9
  4323 ;; This function calls:
  4324 ;;		_buttonReceived
  4325 ;;		_findButton
  4326 ;; This function is called by:
  4327 ;;		_buttonByteReceived
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text28
  4332  0011A6                     __ptext28:
  4333                           	opt stack 0
  4334  0011A6                     _decodeButton:
  4335                           	opt stack 20
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;incstack = 0
  4339                           ;decodeButton@code stored from wreg
  4340  0011A6  0100               	movlb	0	; () banked
  4341  0011A8  6FB9               	movwf	decodeButton@code& (0+255),b
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;buttons.c: 134: BUTTON *bp = findButton((BUTTONNUMBER)code);
  4345  0011AA  0100               	movlb	0	; () banked
  4346  0011AC  51B9               	movf	decodeButton@code& (0+255),w,b
  4347  0011AE  EC04  F007         	call	_findButton
  4348  0011B2  0100               	movlb	0	; () banked
  4349  0011B4  C0B5  F0BA         	movff	?_findButton,decodeButton@bp
  4350  0011B8  0100               	movlb	0	; () banked
  4351  0011BA  C0B6  F0BB         	movff	?_findButton+1,decodeButton@bp+1
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;buttons.c: 135: buttonReceived(bp);
  4355  0011BE  0100               	movlb	0	; () banked
  4356  0011C0  C0BB  F0B6         	movff	decodeButton@bp+1,buttonReceived@bp+1
  4357  0011C4  0100               	movlb	0	; () banked
  4358  0011C6  C0BA  F0B5         	movff	decodeButton@bp,buttonReceived@bp
  4359  0011CA  EC36  F008         	call	_buttonReceived	;wreg free
  4360  0011CE  0012               	return	
  4361  0011D0                     __end_of_decodeButton:
  4362                           	opt stack 0
  4363                           tblptru	equ	0xFF8
  4364                           prodh	equ	0xFF4
  4365                           prodl	equ	0xFF3
  4366                           intcon	equ	0xFF2
  4367                           intcon2	equ	0xFF1
  4368                           postinc0	equ	0xFEE
  4369                           wreg	equ	0xFE8
  4370                           postdec1	equ	0xFE5
  4371                           fsr1h	equ	0xFE2
  4372                           fsr1l	equ	0xFE1
  4373                           indf2	equ	0xFDF
  4374                           fsr2h	equ	0xFDA
  4375                           fsr2l	equ	0xFD9
  4376                           status	equ	0xFD8
  4377                           
  4378 ;; *************** function _findButton *****************
  4379 ;; Defined at:
  4380 ;;		line 68 in file "buttons.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  code            1    wreg     unsigned char 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  code            1   20[BANK0 ] unsigned char 
  4385 ;;  i               1   21[BANK0 ] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2   18[BANK0 ] PTR struct button
  4388 ;; Registers used:
  4389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4395 ;;      Params:         0       2       0       0       0       0       0
  4396 ;;      Locals:         0       2       0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0
  4398 ;;      Totals:         0       4       0       0       0       0       0
  4399 ;;Total ram usage:        4 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    8
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_decodeButton
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text29
  4410  000E08                     __ptext29:
  4411                           	opt stack 0
  4412  000E08                     _findButton:
  4413                           	opt stack 20
  4414                           
  4415                           ;incstack = 0
  4416                           ;findButton@code stored from wreg
  4417  000E08  0100               	movlb	0	; () banked
  4418  000E0A  6FB7               	movwf	findButton@code& (0+255),b
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;buttons.c: 70: BUTTONINDEX i;
  4422                           ;buttons.c: 72: for ( i = 0; i < 64; i++) {
  4423  000E0C  0E00               	movlw	0
  4424  000E0E  0100               	movlb	0	; () banked
  4425  000E10  6FB8               	movwf	findButton@i& (0+255),b
  4426  000E12  D01F               	goto	L3
  4427  000E14                     l2670:
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;buttons.c: 74: if ( buttons[i].buttonNumber == code)
  4431  000E14  0100               	movlb	0	; () banked
  4432  000E16  51B8               	movf	findButton@i& (0+255),w,b
  4433  000E18  0D04               	mullw	4
  4434  000E1A  0101               	movlb	1	; () banked
  4435  000E1C  0E00               	movlw	low _buttons
  4436  000E1E  24F3               	addwf	prodl,w,c
  4437  000E20  6ED9               	movwf	fsr2l,c
  4438  000E22  0101               	movlb	1	; () banked
  4439  000E24  0E01               	movlw	high _buttons
  4440  000E26  20F4               	addwfc	prodh,w,c
  4441  000E28  6EDA               	movwf	fsr2h,c
  4442  000E2A  0100               	movlb	0	; () banked
  4443  000E2C  51B7               	movf	findButton@code& (0+255),w,b
  4444  000E2E  62DF               	cpfseq	indf2,c
  4445  000E30  D00E               	goto	l2676
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;buttons.c: 75: return &buttons[i];
  4449  000E32  0100               	movlb	0	; () banked
  4450  000E34  51B8               	movf	findButton@i& (0+255),w,b
  4451  000E36  0D04               	mullw	4
  4452  000E38  0101               	movlb	1	; () banked
  4453  000E3A  0E00               	movlw	low _buttons
  4454  000E3C  24F3               	addwf	prodl,w,c
  4455  000E3E  0100               	movlb	0	; () banked
  4456  000E40  6FB5               	movwf	?_findButton& (0+255),b
  4457  000E42  0101               	movlb	1	; () banked
  4458  000E44  0E01               	movlw	high _buttons
  4459  000E46  20F4               	addwfc	prodh,w,c
  4460  000E48  0100               	movlb	0	; () banked
  4461  000E4A  6FB6               	movwf	(?_findButton+1)& (0+255),b
  4462  000E4C  0012               	return	
  4463  000E4E                     l2676:
  4464                           
  4465                           ; BSR set to: 0
  4466  000E4E  0100               	movlb	0	; () banked
  4467  000E50  2BB8               	incf	findButton@i& (0+255),f,b
  4468  000E52                     L3:
  4469                           
  4470                           ; BSR set to: 0
  4471  000E52  0E3F               	movlw	63
  4472  000E54  0100               	movlb	0	; () banked
  4473  000E56  65B8               	cpfsgt	findButton@i& (0+255),b
  4474  000E58  D7DD               	goto	l2670
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;buttons.c: 76: }
  4478                           ;buttons.c: 77: return (BUTTON*) 0;
  4479                           
  4480                           ; BSR set to: 0
  4481  000E5A  0E00               	movlw	0
  4482  000E5C  0100               	movlb	0	; () banked
  4483  000E5E  6FB6               	movwf	(?_findButton+1)& (0+255),b
  4484  000E60  0E00               	movlw	0
  4485  000E62  0100               	movlb	0	; () banked
  4486  000E64  6FB5               	movwf	?_findButton& (0+255),b
  4487  000E66  0012               	return	
  4488  000E68                     __end_of_findButton:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           intcon2	equ	0xFF1
  4495                           postinc0	equ	0xFEE
  4496                           wreg	equ	0xFE8
  4497                           postdec1	equ	0xFE5
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           indf2	equ	0xFDF
  4501                           fsr2h	equ	0xFDA
  4502                           fsr2l	equ	0xFD9
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _buttonReceived *****************
  4506 ;; Defined at:
  4507 ;;		line 122 in file "buttons.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  bp              2   18[BANK0 ] PTR struct button
  4510 ;;		 -> NULL(0), buttons(256), 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;		None               void
  4515 ;; Registers used:
  4516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4522 ;;      Params:         0       2       0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0
  4525 ;;      Totals:         0       2       0       0       0       0       0
  4526 ;;Total ram usage:        2 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    8
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_decodeButton
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text30
  4537  00106C                     __ptext30:
  4538                           	opt stack 0
  4539  00106C                     _buttonReceived:
  4540                           	opt stack 20
  4541                           
  4542                           ;buttons.c: 124: if ( bp == 0)
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;incstack = 0
  4546  00106C  0100               	movlb	0	; () banked
  4547  00106E  51B6               	movf	(buttonReceived@bp+1)& (0+255),w,b
  4548  001070  11B5               	iorwf	buttonReceived@bp& (0+255),w,b
  4549  001072  B4D8               	btfsc	status,2,c
  4550  001074  0012               	return	
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;buttons.c: 127: bp -> isActive = 1;
  4554                           
  4555                           ; BSR set to: 0
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;buttons.c: 125: return;
  4559  001076  0100               	movlb	0	; () banked
  4560  001078  EE20 F002          	lfsr	2,2
  4561  00107C  0100               	movlb	0	; () banked
  4562  00107E  51B5               	movf	buttonReceived@bp& (0+255),w,b
  4563  001080  26D9               	addwf	fsr2l,f,c
  4564  001082  0100               	movlb	0	; () banked
  4565  001084  51B6               	movf	(buttonReceived@bp+1)& (0+255),w,b
  4566  001086  22DA               	addwfc	fsr2h,f,c
  4567  001088  0E01               	movlw	1
  4568  00108A  6EDF               	movwf	indf2,c
  4569                           
  4570                           ;buttons.c: 128: bp -> watchdog = 0;
  4571  00108C  0100               	movlb	0	; () banked
  4572  00108E  EE20 F003          	lfsr	2,3
  4573  001092  0100               	movlb	0	; () banked
  4574  001094  51B5               	movf	buttonReceived@bp& (0+255),w,b
  4575  001096  26D9               	addwf	fsr2l,f,c
  4576  001098  0100               	movlb	0	; () banked
  4577  00109A  51B6               	movf	(buttonReceived@bp+1)& (0+255),w,b
  4578  00109C  22DA               	addwfc	fsr2h,f,c
  4579  00109E  0E00               	movlw	0
  4580  0010A0  6EDF               	movwf	indf2,c
  4581                           
  4582                           ; BSR set to: 0
  4583  0010A2  0012               	return	
  4584  0010A4                     __end_of_buttonReceived:
  4585                           	opt stack 0
  4586                           tblptru	equ	0xFF8
  4587                           prodh	equ	0xFF4
  4588                           prodl	equ	0xFF3
  4589                           intcon	equ	0xFF2
  4590                           intcon2	equ	0xFF1
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           indf2	equ	0xFDF
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _low_isr *****************
  4602 ;; Defined at:
  4603 ;;		line 46 in file "interrupts.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;		None               void
  4610 ;; Registers used:
  4611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4617 ;;      Params:         0       0       0       0       0       0       0
  4618 ;;      Locals:         0       0       0       0       0       0       0
  4619 ;;      Temps:         17       0       0       0       0       0       0
  4620 ;;      Totals:        17       0       0       0       0       0       0
  4621 ;;Total ram usage:       17 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    7
  4624 ;; This function calls:
  4625 ;;		_doDimStep
  4626 ;;		_sendDMX
  4627 ;; This function is called by:
  4628 ;;		Interrupt level 1
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	intcodelo
  4633  000018                     __pintcodelo:
  4634                           	opt stack 0
  4635  000018                     _low_isr:
  4636                           	opt stack 18
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;incstack = 0
  4640  000018  CFD8 F01A          	movff	status,??_low_isr
  4641  00001C  CFE8 F01B          	movff	wreg,??_low_isr+1
  4642  000020  CFE0 F01C          	movff	bsr,??_low_isr+2
  4643  000024  CFFA F01D          	movff	pclath,??_low_isr+3
  4644  000028  CFFB F01E          	movff	pclatu,??_low_isr+4
  4645  00002C  CFE9 F01F          	movff	fsr0l,??_low_isr+5
  4646  000030  CFEA F020          	movff	fsr0h,??_low_isr+6
  4647  000034  CFE1 F021          	movff	fsr1l,??_low_isr+7
  4648  000038  CFE2 F022          	movff	fsr1h,??_low_isr+8
  4649  00003C  CFD9 F023          	movff	fsr2l,??_low_isr+9
  4650  000040  CFDA F024          	movff	fsr2h,??_low_isr+10
  4651  000044  CFF3 F025          	movff	prodl,??_low_isr+11
  4652  000048  CFF4 F026          	movff	prodh,??_low_isr+12
  4653  00004C  CFF6 F027          	movff	tblptrl,??_low_isr+13
  4654  000050  CFF7 F028          	movff	tblptrh,??_low_isr+14
  4655  000054  CFF8 F029          	movff	tblptru,??_low_isr+15
  4656  000058  CFF5 F02A          	movff	tablat,??_low_isr+16
  4657                           
  4658                           ;interrupts.c: 53: if ( PIR1bits.TMR1IF == 1 ) {
  4659  00005C  A09E               	btfss	3998,0,c	;volatile
  4660  00005E  D003               	goto	i1l2460
  4661                           
  4662                           ;interrupts.c: 54: sendDMX();
  4663  000060  EC11  F004         	call	_sendDMX	;wreg free
  4664                           
  4665                           ;interrupts.c: 55: PIR1bits.TMR1IF = 0;
  4666  000064  909E               	bcf	3998,0,c	;volatile
  4667  000066                     i1l2460:
  4668                           
  4669                           ;interrupts.c: 56: }
  4670                           ;interrupts.c: 58: if ( PIR2bits.TMR3IF == 1 ) {
  4671  000066  A2A1               	btfss	4001,1,c	;volatile
  4672  000068  D007               	goto	i1l30
  4673                           
  4674                           ;interrupts.c: 59: doDimStep();
  4675  00006A  ECB7  F004         	call	_doDimStep	;wreg free
  4676                           
  4677                           ;interrupts.c: 61: TMR3L = 0x00;
  4678  00006E  0E00               	movlw	0
  4679  000070  6EB2               	movwf	4018,c	;volatile
  4680                           
  4681                           ;interrupts.c: 62: TMR3H = 0x00;
  4682  000072  0E00               	movlw	0
  4683  000074  6EB3               	movwf	4019,c	;volatile
  4684                           
  4685                           ;interrupts.c: 64: PIR2bits.TMR3IF = 0;
  4686  000076  92A1               	bcf	4001,1,c	;volatile
  4687  000078                     i1l30:
  4688  000078  C02A  FFF5         	movff	??_low_isr+16,tablat
  4689  00007C  C029  FFF8         	movff	??_low_isr+15,tblptru
  4690  000080  C028  FFF7         	movff	??_low_isr+14,tblptrh
  4691  000084  C027  FFF6         	movff	??_low_isr+13,tblptrl
  4692  000088  C026  FFF4         	movff	??_low_isr+12,prodh
  4693  00008C  C025  FFF3         	movff	??_low_isr+11,prodl
  4694  000090  C024  FFDA         	movff	??_low_isr+10,fsr2h
  4695  000094  C023  FFD9         	movff	??_low_isr+9,fsr2l
  4696  000098  C022  FFE2         	movff	??_low_isr+8,fsr1h
  4697  00009C  C021  FFE1         	movff	??_low_isr+7,fsr1l
  4698  0000A0  C020  FFEA         	movff	??_low_isr+6,fsr0h
  4699  0000A4  C01F  FFE9         	movff	??_low_isr+5,fsr0l
  4700  0000A8  C01E  FFFB         	movff	??_low_isr+4,pclatu
  4701  0000AC  C01D  FFFA         	movff	??_low_isr+3,pclath
  4702  0000B0  C01C  FFE0         	movff	??_low_isr+2,bsr
  4703  0000B4  C01B  FFE8         	movff	??_low_isr+1,wreg
  4704  0000B8  C01A  FFD8         	movff	??_low_isr,status
  4705  0000BC  0010               	retfie	
  4706  0000BE                     __end_of_low_isr:
  4707                           	opt stack 0
  4708                           pclatu	equ	0xFFB
  4709                           pclath	equ	0xFFA
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           prodh	equ	0xFF4
  4715                           prodl	equ	0xFF3
  4716                           intcon	equ	0xFF2
  4717                           intcon2	equ	0xFF1
  4718                           postinc0	equ	0xFEE
  4719                           fsr0h	equ	0xFEA
  4720                           fsr0l	equ	0xFE9
  4721                           wreg	equ	0xFE8
  4722                           postdec1	equ	0xFE5
  4723                           fsr1h	equ	0xFE2
  4724                           fsr1l	equ	0xFE1
  4725                           bsr	equ	0xFE0
  4726                           indf2	equ	0xFDF
  4727                           fsr2h	equ	0xFDA
  4728                           fsr2l	equ	0xFD9
  4729                           status	equ	0xFD8
  4730                           
  4731 ;; *************** function _sendDMX *****************
  4732 ;; Defined at:
  4733 ;;		line 51 in file "dmx.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;		None
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;		None               void
  4740 ;; Registers used:
  4741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4747 ;;      Params:         0       0       0       0       0       0       0
  4748 ;;      Locals:         2       0       0       0       0       0       0
  4749 ;;      Temps:          1       0       0       0       0       0       0
  4750 ;;      Totals:         3       0       0       0       0       0       0
  4751 ;;Total ram usage:        3 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    2
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_low_isr
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text32
  4762  000822                     __ptext32:
  4763                           	opt stack 0
  4764  000822                     _sendDMX:
  4765                           	opt stack 22
  4766                           
  4767                           ;dmx.c: 53: switch( dmxSendState ) {
  4768                           
  4769                           ;incstack = 0
  4770  000822  D046               	goto	i1l2302
  4771  000824                     i1l2264:
  4772                           
  4773                           ;dmx.c: 57: TMR1L = 256-100;
  4774  000824  0E9C               	movlw	156
  4775  000826  6ECE               	movwf	4046,c	;volatile
  4776                           
  4777                           ;dmx.c: 58: TRISCbits.TRISC5 = 0;
  4778  000828  9A94               	bcf	3988,5,c	;volatile
  4779                           
  4780                           ;dmx.c: 59: LATCbits.LATC5 = 0;
  4781  00082A  9A8B               	bcf	3979,5,c	;volatile
  4782                           
  4783                           ;dmx.c: 60: dmxSendState = 3;
  4784  00082C  0E03               	movlw	3
  4785  00082E  6E3E               	movwf	_dmxSendState,c
  4786  000830  0012               	return	
  4787  000832                     i1l2272:
  4788                           
  4789                           ;dmx.c: 65: if ( dataCounter >= 512) {
  4790  000832  0E00               	movlw	0
  4791  000834  5C3B               	subwf	_dataCounter,w,c
  4792  000836  0E02               	movlw	2
  4793  000838  583C               	subwfb	_dataCounter+1,w,c
  4794  00083A  A0D8               	btfss	status,0,c
  4795  00083C  D005               	goto	i1l146
  4796                           
  4797                           ;dmx.c: 66: TMR1L = 256-100;
  4798  00083E  0E9C               	movlw	156
  4799  000840  6ECE               	movwf	4046,c	;volatile
  4800                           
  4801                           ;dmx.c: 67: dmxSendState = 0;
  4802  000842  0E00               	movlw	0
  4803  000844  6E3E               	movwf	_dmxSendState,c
  4804  000846  0012               	return	
  4805  000848                     i1l146:
  4806                           
  4807                           ;dmx.c: 69: }
  4808                           ;dmx.c: 71: if ( PIR1bits.TXIF == 1)
  4809  000848  B89E               	btfsc	3998,4,c	;volatile
  4810  00084A  0012               	return	
  4811                           
  4812                           ;dmx.c: 74: TXREG = dataCounter++ < 64 ? channelLevel[(unsigned char)dataCounter] : 0;
  4813                           
  4814                           ;dmx.c: 72: return;
  4815  00084C  4A3B               	infsnz	_dataCounter,f,c
  4816  00084E  2A3C               	incf	_dataCounter+1,f,c
  4817  000850  0E41               	movlw	65
  4818  000852  5C3B               	subwf	_dataCounter& (0+255),w,c
  4819  000854  0E00               	movlw	0
  4820  000856  583C               	subwfb	(_dataCounter+1)& (0+255),w,c
  4821  000858  A0D8               	btfss	status,0,c
  4822  00085A  D005               	goto	i1l2284
  4823  00085C  0E00               	movlw	0
  4824  00085E  6E03               	movwf	_sendDMX$953+1,c
  4825  000860  0E00               	movlw	0
  4826  000862  6E02               	movwf	_sendDMX$953,c
  4827  000864  D00F               	goto	i1l2286
  4828  000866                     i1l2284:
  4829  000866  503B               	movf	_dataCounter,w,c
  4830  000868  0D01               	mullw	1
  4831  00086A  0100               	movlb	0	; () banked
  4832  00086C  0E60               	movlw	low _channelLevel
  4833  00086E  24F3               	addwf	prodl,w,c
  4834  000870  6ED9               	movwf	fsr2l,c
  4835  000872  0100               	movlb	0	; () banked
  4836  000874  0E00               	movlw	high _channelLevel
  4837  000876  20F4               	addwfc	prodh,w,c
  4838  000878  6EDA               	movwf	fsr2h,c
  4839  00087A  50DF               	movf	indf2,w,c
  4840  00087C  6E01               	movwf	??_sendDMX& (0+255),c
  4841  00087E  5001               	movf	??_sendDMX,w,c
  4842  000880  6E02               	movwf	_sendDMX$953,c
  4843  000882  6A03               	clrf	_sendDMX$953+1,c
  4844  000884                     i1l2286:
  4845  000884  C002  FFAD         	movff	_sendDMX$953,4013	;volatile
  4846                           
  4847                           ;dmx.c: 75: TMR1L = 256-60;
  4848  000888  0EC4               	movlw	196
  4849  00088A  6ECE               	movwf	4046,c	;volatile
  4850  00088C  0012               	return	
  4851  00088E                     i1l2292:
  4852                           
  4853                           ;dmx.c: 79: dataCounter = 0;
  4854  00088E  0E00               	movlw	0
  4855  000890  6E3C               	movwf	_dataCounter+1,c
  4856  000892  0E00               	movlw	0
  4857  000894  6E3B               	movwf	_dataCounter,c
  4858                           
  4859                           ;dmx.c: 80: TXREG = 0;
  4860  000896  0E00               	movlw	0
  4861  000898  6EAD               	movwf	4013,c	;volatile
  4862                           
  4863                           ;dmx.c: 81: TMR1L = 256-60;
  4864  00089A  0EC4               	movlw	196
  4865  00089C  6ECE               	movwf	4046,c	;volatile
  4866                           
  4867                           ;dmx.c: 82: dmxSendState = 1;
  4868  00089E  0E01               	movlw	1
  4869  0008A0  6E3E               	movwf	_dmxSendState,c
  4870  0008A2  0012               	return	
  4871  0008A4                     i1l153:
  4872                           
  4873                           ;dmx.c: 86: TRISCbits.TRISC5 = 1;
  4874  0008A4  8A94               	bsf	3988,5,c	;volatile
  4875                           
  4876                           ;dmx.c: 87: TMR1L = 256-100;
  4877  0008A6  0E9C               	movlw	156
  4878  0008A8  6ECE               	movwf	4046,c	;volatile
  4879                           
  4880                           ;dmx.c: 88: dmxSendState = 2;
  4881  0008AA  0E02               	movlw	2
  4882  0008AC  6E3E               	movwf	_dmxSendState,c
  4883  0008AE  0012               	return	
  4884  0008B0                     i1l2302:
  4885  0008B0  503E               	movf	_dmxSendState,w,c
  4886                           
  4887                           ; Switch size 1, requested type "space"
  4888                           ; Number of cases is 4, Range of values is 0 to 3
  4889                           ; switch strategies available:
  4890                           ; Name         Instructions Cycles
  4891                           ; simple_byte           13     7 (average)
  4892                           ;	Chosen strategy is simple_byte
  4893  0008B2  0A00               	xorlw	0	; case 0
  4894  0008B4  B4D8               	btfsc	status,2,c
  4895  0008B6  D7B6               	goto	i1l2264
  4896  0008B8  0A01               	xorlw	1	; case 1
  4897  0008BA  B4D8               	btfsc	status,2,c
  4898  0008BC  D7BA               	goto	i1l2272
  4899  0008BE  0A03               	xorlw	3	; case 2
  4900  0008C0  B4D8               	btfsc	status,2,c
  4901  0008C2  D7E5               	goto	i1l2292
  4902  0008C4  0A01               	xorlw	1	; case 3
  4903  0008C6  A4D8               	btfss	status,2,c
  4904  0008C8  0012               	return	
  4905  0008CA  D7EC               	goto	i1l153
  4906  0008CC                     __end_of_sendDMX:
  4907                           	opt stack 0
  4908                           pclatu	equ	0xFFB
  4909                           pclath	equ	0xFFA
  4910                           tblptru	equ	0xFF8
  4911                           tblptrh	equ	0xFF7
  4912                           tblptrl	equ	0xFF6
  4913                           tablat	equ	0xFF5
  4914                           prodh	equ	0xFF4
  4915                           prodl	equ	0xFF3
  4916                           intcon	equ	0xFF2
  4917                           intcon2	equ	0xFF1
  4918                           postinc0	equ	0xFEE
  4919                           fsr0h	equ	0xFEA
  4920                           fsr0l	equ	0xFE9
  4921                           wreg	equ	0xFE8
  4922                           postdec1	equ	0xFE5
  4923                           fsr1h	equ	0xFE2
  4924                           fsr1l	equ	0xFE1
  4925                           bsr	equ	0xFE0
  4926                           indf2	equ	0xFDF
  4927                           fsr2h	equ	0xFDA
  4928                           fsr2l	equ	0xFD9
  4929                           status	equ	0xFD8
  4930                           
  4931 ;; *************** function _doDimStep *****************
  4932 ;; Defined at:
  4933 ;;		line 46 in file "scenes.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  sc              3   21[COMRAM] struct _scenechannel
  4938 ;;  i               1   24[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         0       0       0       0       0       0       0
  4949 ;;      Locals:         4       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0
  4951 ;;      Totals:         4       0       0       0       0       0       0
  4952 ;;Total ram usage:        4 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    6
  4955 ;; This function calls:
  4956 ;;		_readSceneChannel
  4957 ;; This function is called by:
  4958 ;;		_low_isr
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text33
  4963  00096E                     __ptext33:
  4964                           	opt stack 0
  4965  00096E                     _doDimStep:
  4966                           	opt stack 18
  4967                           
  4968                           ;scenes.c: 48: SCENECHANNEL sc;
  4969                           ;scenes.c: 50: unsigned char i;
  4970                           ;scenes.c: 52: if ( dimmingInProgress == 0)
  4971                           
  4972                           ;incstack = 0
  4973  00096E  663D               	tstfsz	_dimmingInProgress,c	;volatile
  4974  000970  D001               	goto	i1l2308
  4975  000972  0012               	return	
  4976  000974                     i1l2308:
  4977                           
  4978                           ;scenes.c: 55: dimmingInProgress = 0;
  4979  000974  0E00               	movlw	0
  4980  000976  6E3D               	movwf	_dimmingInProgress,c	;volatile
  4981                           
  4982                           ;scenes.c: 57: for ( i = 0; i < 64; i++) {
  4983  000978  0E00               	movlw	0
  4984  00097A  6E19               	movwf	doDimStep@i,c
  4985  00097C  0E3F               	movlw	63
  4986  00097E  6419               	cpfsgt	doDimStep@i,c
  4987  000980  D001               	goto	i1l2314
  4988  000982  0012               	return	
  4989  000984                     i1l2314:
  4990                           
  4991                           ;scenes.c: 59: readSceneChannel(targetScene, i, &sc);
  4992  000984  C019  F00D         	movff	doDimStep@i,readSceneChannel@channel
  4993  000988  0E00               	movlw	high doDimStep@sc
  4994  00098A  6E0F               	movwf	readSceneChannel@scp+1,c
  4995  00098C  0E16               	movlw	low doDimStep@sc
  4996  00098E  6E0E               	movwf	readSceneChannel@scp,c
  4997  000990  5041               	movf	_targetScene,w,c	;volatile
  4998  000992  EC19  F008         	call	_readSceneChannel
  4999                           
  5000                           ;scenes.c: 61: if ( sc.isTransparent == 0 ) {
  5001  000996  6617               	tstfsz	doDimStep@sc+1,c
  5002  000998  D035               	goto	i1l2328
  5003                           
  5004                           ;scenes.c: 63: if ( sc.level != channelLevel[i] ) {
  5005  00099A  5019               	movf	doDimStep@i,w,c
  5006  00099C  0D01               	mullw	1
  5007  00099E  0100               	movlb	0	; () banked
  5008  0009A0  0E60               	movlw	low _channelLevel
  5009  0009A2  24F3               	addwf	prodl,w,c
  5010  0009A4  6ED9               	movwf	fsr2l,c
  5011  0009A6  0100               	movlb	0	; () banked
  5012  0009A8  0E00               	movlw	high _channelLevel
  5013  0009AA  20F4               	addwfc	prodh,w,c
  5014  0009AC  6EDA               	movwf	fsr2h,c
  5015  0009AE  50DF               	movf	indf2,w,c
  5016  0009B0  1816               	xorwf	doDimStep@sc,w,c
  5017  0009B2  B4D8               	btfsc	status,2,c
  5018  0009B4  D027               	goto	i1l2328
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;scenes.c: 65: dimmingInProgress = 1;
  5022  0009B6  0E01               	movlw	1
  5023  0009B8  6E3D               	movwf	_dimmingInProgress,c	;volatile
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;scenes.c: 67: if (channelLevel[i] > sc.level ) {
  5027  0009BA  5019               	movf	doDimStep@i,w,c
  5028  0009BC  0D01               	mullw	1
  5029  0009BE  0100               	movlb	0	; () banked
  5030  0009C0  0E60               	movlw	low _channelLevel
  5031  0009C2  24F3               	addwf	prodl,w,c
  5032  0009C4  6ED9               	movwf	fsr2l,c
  5033  0009C6  0100               	movlb	0	; () banked
  5034  0009C8  0E00               	movlw	high _channelLevel
  5035  0009CA  20F4               	addwfc	prodh,w,c
  5036  0009CC  6EDA               	movwf	fsr2h,c
  5037  0009CE  50DF               	movf	indf2,w,c
  5038  0009D0  5C16               	subwf	doDimStep@sc,w,c
  5039  0009D2  B0D8               	btfsc	status,0,c
  5040  0009D4  D00C               	goto	i1l2326
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;scenes.c: 68: channelLevel[i]--;
  5044  0009D6  5019               	movf	doDimStep@i,w,c
  5045  0009D8  0D01               	mullw	1
  5046  0009DA  0100               	movlb	0	; () banked
  5047  0009DC  0E60               	movlw	low _channelLevel
  5048  0009DE  24F3               	addwf	prodl,w,c
  5049  0009E0  6ED9               	movwf	fsr2l,c
  5050  0009E2  0100               	movlb	0	; () banked
  5051  0009E4  0E00               	movlw	high _channelLevel
  5052  0009E6  20F4               	addwfc	prodh,w,c
  5053  0009E8  6EDA               	movwf	fsr2h,c
  5054  0009EA  06DF               	decf	indf2,f,c
  5055                           
  5056                           ;scenes.c: 69: }
  5057  0009EC  D00B               	goto	i1l2328
  5058  0009EE                     i1l2326:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;scenes.c: 70: else {
  5062                           ;scenes.c: 71: channelLevel[i]++;
  5063  0009EE  5019               	movf	doDimStep@i,w,c
  5064  0009F0  0D01               	mullw	1
  5065  0009F2  0100               	movlb	0	; () banked
  5066  0009F4  0E60               	movlw	low _channelLevel
  5067  0009F6  24F3               	addwf	prodl,w,c
  5068  0009F8  6ED9               	movwf	fsr2l,c
  5069  0009FA  0100               	movlb	0	; () banked
  5070  0009FC  0E00               	movlw	high _channelLevel
  5071  0009FE  20F4               	addwfc	prodh,w,c
  5072  000A00  6EDA               	movwf	fsr2h,c
  5073  000A02  2ADF               	incf	indf2,f,c
  5074  000A04                     i1l2328:
  5075  000A04  2A19               	incf	doDimStep@i,f,c
  5076  000A06  0E3F               	movlw	63
  5077  000A08  6419               	cpfsgt	doDimStep@i,c
  5078  000A0A  D7BC               	goto	i1l2314
  5079  000A0C  0012               	return	
  5080  000A0E                     __end_of_doDimStep:
  5081                           	opt stack 0
  5082                           pclatu	equ	0xFFB
  5083                           pclath	equ	0xFFA
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           intcon2	equ	0xFF1
  5092                           postinc0	equ	0xFEE
  5093                           fsr0h	equ	0xFEA
  5094                           fsr0l	equ	0xFE9
  5095                           wreg	equ	0xFE8
  5096                           postdec1	equ	0xFE5
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           bsr	equ	0xFE0
  5100                           indf2	equ	0xFDF
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105 ;; *************** function _readSceneChannel *****************
  5106 ;; Defined at:
  5107 ;;		line 97 in file "scenes.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  scene           1    wreg     unsigned char 
  5110 ;;  channel         1   12[COMRAM] unsigned char 
  5111 ;;  scp             2   13[COMRAM] PTR struct _scenechannel
  5112 ;;		 -> doDimStep@sc(3), 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  scene           1   18[COMRAM] unsigned char 
  5115 ;;  baseAdress      2   19[COMRAM] unsigned int 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;		None               void
  5118 ;; Registers used:
  5119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5125 ;;      Params:         3       0       0       0       0       0       0
  5126 ;;      Locals:         3       0       0       0       0       0       0
  5127 ;;      Temps:          3       0       0       0       0       0       0
  5128 ;;      Totals:         9       0       0       0       0       0       0
  5129 ;;Total ram usage:        9 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    5
  5132 ;; This function calls:
  5133 ;;		i1_HDByteReadI2C
  5134 ;;		i1_sceneAdress
  5135 ;; This function is called by:
  5136 ;;		_doDimStep
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text34
  5141  001032                     __ptext34:
  5142                           	opt stack 0
  5143  001032                     _readSceneChannel:
  5144                           	opt stack 18
  5145                           
  5146                           ;incstack = 0
  5147                           ;readSceneChannel@scene stored from wreg
  5148  001032  6E13               	movwf	readSceneChannel@scene,c
  5149                           
  5150                           ;scenes.c: 99: unsigned int baseAdress = sceneAdress(scene, channel);
  5151  001034  C00D  F007         	movff	readSceneChannel@channel,i1sceneAdress@channel
  5152  001038  5013               	movf	readSceneChannel@scene,w,c
  5153  00103A  ECAF  F007         	call	i1_sceneAdress
  5154  00103E  C007  F014         	movff	?i1_sceneAdress,readSceneChannel@baseAdress
  5155  001042  C008  F015         	movff	?i1_sceneAdress+1,readSceneChannel@baseAdress+1
  5156                           
  5157                           ;scenes.c: 101: HDByteReadI2C( 0xA0, (unsigned char )(baseAdress >> 8) , (unsigned char 
      +                          )(baseAdress & 0xFF) ,(unsigned char*) scp, sizeof(SCENECHANNEL) );
  5158  001046  C015  F010         	movff	readSceneChannel@baseAdress+1,??_readSceneChannel
  5159  00104A  C010  F011         	movff	??_readSceneChannel,??_readSceneChannel+1
  5160  00104E  6A12               	clrf	(??_readSceneChannel+2)& (0+255),c
  5161  001050  5011               	movf	??_readSceneChannel+1,w,c
  5162  001052  6E06               	movwf	i1HDByteReadI2C@HighAdd,c
  5163  001054  C014  F007         	movff	readSceneChannel@baseAdress,i1HDByteReadI2C@LowAdd
  5164  001058  C00F  F009         	movff	readSceneChannel@scp+1,i1HDByteReadI2C@data+1
  5165  00105C  C00E  F008         	movff	readSceneChannel@scp,i1HDByteReadI2C@data
  5166  001060  0E03               	movlw	3
  5167  001062  6E0A               	movwf	i1HDByteReadI2C@length,c
  5168  001064  0EA0               	movlw	160
  5169  001066  EC44  F003         	call	i1_HDByteReadI2C
  5170  00106A  0012               	return	
  5171  00106C                     __end_of_readSceneChannel:
  5172                           	opt stack 0
  5173                           pclatu	equ	0xFFB
  5174                           pclath	equ	0xFFA
  5175                           tblptru	equ	0xFF8
  5176                           tblptrh	equ	0xFF7
  5177                           tblptrl	equ	0xFF6
  5178                           tablat	equ	0xFF5
  5179                           prodh	equ	0xFF4
  5180                           prodl	equ	0xFF3
  5181                           intcon	equ	0xFF2
  5182                           intcon2	equ	0xFF1
  5183                           postinc0	equ	0xFEE
  5184                           fsr0h	equ	0xFEA
  5185                           fsr0l	equ	0xFE9
  5186                           wreg	equ	0xFE8
  5187                           postdec1	equ	0xFE5
  5188                           fsr1h	equ	0xFE2
  5189                           fsr1l	equ	0xFE1
  5190                           bsr	equ	0xFE0
  5191                           indf2	equ	0xFDF
  5192                           fsr2h	equ	0xFDA
  5193                           fsr2l	equ	0xFD9
  5194                           status	equ	0xFD8
  5195                           
  5196 ;; *************** function i1_sceneAdress *****************
  5197 ;; Defined at:
  5198 ;;		line 84 in file "scenes.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  scene           1    wreg     unsigned char 
  5201 ;;  channel         1    6[COMRAM] unsigned char 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  scene           1    8[COMRAM] unsigned char 
  5204 ;;  sceneAdress     2    9[COMRAM] unsigned int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2    6[COMRAM] unsigned int 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5214 ;;      Params:         2       0       0       0       0       0       0
  5215 ;;      Locals:         3       0       0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0
  5217 ;;      Totals:         5       0       0       0       0       0       0
  5218 ;;Total ram usage:        5 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    3
  5221 ;; This function calls:
  5222 ;;		i1___wmul
  5223 ;; This function is called by:
  5224 ;;		_readSceneChannel
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text35
  5229  000F5E                     __ptext35:
  5230                           	opt stack 0
  5231  000F5E                     i1_sceneAdress:
  5232                           	opt stack 19
  5233                           
  5234                           ;incstack = 0
  5235                           ;i1sceneAdress@scene stored from wreg
  5236  000F5E  6E09               	movwf	i1sceneAdress@scene,c
  5237                           
  5238                           ;scenes.c: 86: unsigned int baseAdress = 0x0100;
  5239  000F60  0E01               	movlw	1
  5240  000F62  6E0B               	movwf	i1sceneAdress@baseAdress+1,c
  5241  000F64  0E00               	movlw	0
  5242  000F66  6E0A               	movwf	i1sceneAdress@baseAdress,c
  5243                           
  5244                           ;scenes.c: 88: baseAdress += ((scene-1) * sizeof(SCENECHANNEL) * 64) + (channel * sizeof
      +                          (SCENECHANNEL));
  5245  000F68  0EFF               	movlw	255
  5246  000F6A  2409               	addwf	i1sceneAdress@scene,w,c
  5247  000F6C  6E01               	movwf	i1___wmul@multiplier,c
  5248  000F6E  6A02               	clrf	i1___wmul@multiplier+1,c
  5249  000F70  0EFF               	movlw	255
  5250  000F72  2202               	addwfc	i1___wmul@multiplier+1,f,c
  5251  000F74  0E00               	movlw	0
  5252  000F76  6E04               	movwf	i1___wmul@multiplicand+1,c
  5253  000F78  0E03               	movlw	3
  5254  000F7A  6E03               	movwf	i1___wmul@multiplicand,c
  5255  000F7C  EC10  F009         	call	i1___wmul	;wreg free
  5256  000F80  0E06               	movlw	6
  5257  000F82                     i1u275_25:
  5258  000F82  90D8               	bcf	status,0,c
  5259  000F84  3601               	rlcf	?i1___wmul,f,c
  5260  000F86  3602               	rlcf	?i1___wmul+1,f,c
  5261  000F88  2EE8               	decfsz	wreg,f,c
  5262  000F8A  D7FB               	goto	i1u275_25
  5263  000F8C  5007               	movf	i1sceneAdress@channel,w,c
  5264  000F8E  0D03               	mullw	3
  5265  000F90  50F3               	movf	prodl,w,c
  5266  000F92  2601               	addwf	?i1___wmul,f,c
  5267  000F94  50F4               	movf	prodh,w,c
  5268  000F96  2202               	addwfc	?i1___wmul+1,f,c
  5269  000F98  5001               	movf	?i1___wmul,w,c
  5270  000F9A  260A               	addwf	i1sceneAdress@baseAdress,f,c
  5271  000F9C  5002               	movf	?i1___wmul+1,w,c
  5272  000F9E  220B               	addwfc	i1sceneAdress@baseAdress+1,f,c
  5273                           
  5274                           ;scenes.c: 90: return baseAdress;
  5275  000FA0  C00A  F007         	movff	i1sceneAdress@baseAdress,?i1_sceneAdress
  5276  000FA4  C00B  F008         	movff	i1sceneAdress@baseAdress+1,?i1_sceneAdress+1
  5277  000FA8  0012               	return	
  5278  000FAA                     __end_ofi1_sceneAdress:
  5279                           	opt stack 0
  5280                           pclatu	equ	0xFFB
  5281                           pclath	equ	0xFFA
  5282                           tblptru	equ	0xFF8
  5283                           tblptrh	equ	0xFF7
  5284                           tblptrl	equ	0xFF6
  5285                           tablat	equ	0xFF5
  5286                           prodh	equ	0xFF4
  5287                           prodl	equ	0xFF3
  5288                           intcon	equ	0xFF2
  5289                           intcon2	equ	0xFF1
  5290                           postinc0	equ	0xFEE
  5291                           fsr0h	equ	0xFEA
  5292                           fsr0l	equ	0xFE9
  5293                           wreg	equ	0xFE8
  5294                           postdec1	equ	0xFE5
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           bsr	equ	0xFE0
  5298                           indf2	equ	0xFDF
  5299                           fsr2h	equ	0xFDA
  5300                           fsr2l	equ	0xFD9
  5301                           status	equ	0xFD8
  5302                           
  5303 ;; *************** function i1___wmul *****************
  5304 ;; Defined at:
  5305 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  multiplier      2    0[COMRAM] unsigned int 
  5308 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  __wmul          2    4[COMRAM] unsigned int 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  2    0[COMRAM] unsigned int 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, prodl, prodh
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5320 ;;      Params:         4       0       0       0       0       0       0
  5321 ;;      Locals:         2       0       0       0       0       0       0
  5322 ;;      Temps:          0       0       0       0       0       0       0
  5323 ;;      Totals:         6       0       0       0       0       0       0
  5324 ;;Total ram usage:        6 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    2
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		i1_sceneAdress
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text36
  5335  001220                     __ptext36:
  5336                           	opt stack 0
  5337  001220                     i1___wmul:
  5338                           	opt stack 19
  5339                           
  5340                           ;incstack = 0
  5341  001220  5001               	movf	i1___wmul@multiplier,w,c
  5342  001222  0203               	mulwf	i1___wmul@multiplicand,c
  5343  001224  CFF3 F005          	movff	prodl,i1___wmul@product
  5344  001228  CFF4 F006          	movff	prodh,i1___wmul@product+1
  5345  00122C  5001               	movf	i1___wmul@multiplier,w,c
  5346  00122E  0204               	mulwf	i1___wmul@multiplicand+1,c
  5347  001230  50F3               	movf	prodl,w,c
  5348  001232  2606               	addwf	i1___wmul@product+1,f,c
  5349  001234  5002               	movf	i1___wmul@multiplier+1,w,c
  5350  001236  0203               	mulwf	i1___wmul@multiplicand,c
  5351  001238  50F3               	movf	prodl,w,c
  5352  00123A  2606               	addwf	i1___wmul@product+1,f,c
  5353  00123C  C005  F001         	movff	i1___wmul@product,?i1___wmul
  5354  001240  C006  F002         	movff	i1___wmul@product+1,?i1___wmul+1
  5355  001244  0012               	return	
  5356  001246                     __end_ofi1___wmul:
  5357                           	opt stack 0
  5358                           pclatu	equ	0xFFB
  5359                           pclath	equ	0xFFA
  5360                           tblptru	equ	0xFF8
  5361                           tblptrh	equ	0xFF7
  5362                           tblptrl	equ	0xFF6
  5363                           tablat	equ	0xFF5
  5364                           prodh	equ	0xFF4
  5365                           prodl	equ	0xFF3
  5366                           intcon	equ	0xFF2
  5367                           intcon2	equ	0xFF1
  5368                           postinc0	equ	0xFEE
  5369                           fsr0h	equ	0xFEA
  5370                           fsr0l	equ	0xFE9
  5371                           wreg	equ	0xFE8
  5372                           postdec1	equ	0xFE5
  5373                           fsr1h	equ	0xFE2
  5374                           fsr1l	equ	0xFE1
  5375                           bsr	equ	0xFE0
  5376                           indf2	equ	0xFDF
  5377                           fsr2h	equ	0xFDA
  5378                           fsr2l	equ	0xFD9
  5379                           status	equ	0xFD8
  5380                           
  5381 ;; *************** function i1_HDByteReadI2C *****************
  5382 ;; Defined at:
  5383 ;;		line 80 in file "massStorage.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;  ControlByte     1    wreg     unsigned char 
  5386 ;;  HighAdd         1    5[COMRAM] unsigned char 
  5387 ;;  LowAdd          1    6[COMRAM] unsigned char 
  5388 ;;  data            2    7[COMRAM] PTR unsigned char 
  5389 ;;		 -> readTestPattern@r(32), doDimStep@sc(3), readAButton@program(1), 
  5390 ;;  length          1    9[COMRAM] unsigned char 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  ControlByte     1   11[COMRAM] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      unsigned char 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5402 ;;      Params:         5       0       0       0       0       0       0
  5403 ;;      Locals:         1       0       0       0       0       0       0
  5404 ;;      Temps:          1       0       0       0       0       0       0
  5405 ;;      Totals:         7       0       0       0       0       0       0
  5406 ;;Total ram usage:        7 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    4
  5409 ;; This function calls:
  5410 ;;		i1_WriteI2C1
  5411 ;;		i1_getsI2C1
  5412 ;; This function is called by:
  5413 ;;		_readSceneChannel
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text37
  5418  000688                     __ptext37:
  5419                           	opt stack 0
  5420  000688                     i1_HDByteReadI2C:
  5421                           	opt stack 18
  5422                           
  5423                           ;incstack = 0
  5424                           ;i1HDByteReadI2C@ControlByte stored from wreg
  5425  000688  6E0C               	movwf	i1HDByteReadI2C@ControlByte,c
  5426  00068A                     i1l2204:
  5427  00068A  A4C7               	btfss	4039,2,c	;volatile
  5428  00068C  D003               	goto	i1u276_20
  5429  00068E  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5430  000690  2A0B               	incf	??i1_HDByteReadI2C& (0+255),f,c
  5431  000692  D001               	goto	i1u276_28
  5432  000694                     i1u276_20:
  5433  000694  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5434  000696                     i1u276_28:
  5435  000696  50C5               	movf	4037,w,c	;volatile
  5436  000698  0B1F               	andlw	31
  5437  00069A  100B               	iorwf	??i1_HDByteReadI2C,w,c
  5438  00069C  0900               	iorlw	0
  5439  00069E  A4D8               	btfss	status,2,c
  5440  0006A0  D7F4               	goto	i1l2204
  5441                           
  5442                           ;massStorage.c: 83: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  5443  0006A2  80C5               	bsf	4037,0,c	;volatile
  5444  0006A4                     i1l363:
  5445  0006A4  B0C5               	btfsc	4037,0,c	;volatile
  5446  0006A6  D7FE               	goto	i1l363
  5447  0006A8                     i1l366:
  5448  0006A8  B0C5               	btfsc	4037,0,c	;volatile
  5449  0006AA  D7FE               	goto	i1l366
  5450                           
  5451                           ;massStorage.c: 85: WriteI2C1( ControlByte );
  5452  0006AC  500C               	movf	i1HDByteReadI2C@ControlByte,w,c
  5453  0006AE  EC26  F006         	call	i1_WriteI2C1
  5454  0006B2                     i1l2208:
  5455  0006B2  A4C7               	btfss	4039,2,c	;volatile
  5456  0006B4  D003               	goto	i1u280_20
  5457  0006B6  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5458  0006B8  2A0B               	incf	??i1_HDByteReadI2C& (0+255),f,c
  5459  0006BA  D001               	goto	i1u280_28
  5460  0006BC                     i1u280_20:
  5461  0006BC  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5462  0006BE                     i1u280_28:
  5463  0006BE  50C5               	movf	4037,w,c	;volatile
  5464  0006C0  0B1F               	andlw	31
  5465  0006C2  100B               	iorwf	??i1_HDByteReadI2C,w,c
  5466  0006C4  0900               	iorlw	0
  5467  0006C6  A4D8               	btfss	status,2,c
  5468  0006C8  D7F4               	goto	i1l2208
  5469                           
  5470                           ;massStorage.c: 87: WriteI2C1( HighAdd );
  5471  0006CA  5006               	movf	i1HDByteReadI2C@HighAdd,w,c
  5472  0006CC  EC26  F006         	call	i1_WriteI2C1
  5473  0006D0                     i1l2212:
  5474  0006D0  A4C7               	btfss	4039,2,c	;volatile
  5475  0006D2  D003               	goto	i1u282_20
  5476  0006D4  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5477  0006D6  2A0B               	incf	??i1_HDByteReadI2C& (0+255),f,c
  5478  0006D8  D001               	goto	i1u282_28
  5479  0006DA                     i1u282_20:
  5480  0006DA  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5481  0006DC                     i1u282_28:
  5482  0006DC  50C5               	movf	4037,w,c	;volatile
  5483  0006DE  0B1F               	andlw	31
  5484  0006E0  100B               	iorwf	??i1_HDByteReadI2C,w,c
  5485  0006E2  0900               	iorlw	0
  5486  0006E4  A4D8               	btfss	status,2,c
  5487  0006E6  D7F4               	goto	i1l2212
  5488  0006E8                     i1l375:
  5489  0006E8  B2C5               	btfsc	4037,1,c	;volatile
  5490  0006EA  D7FE               	goto	i1l375
  5491                           
  5492                           ;massStorage.c: 90: WriteI2C1( LowAdd );
  5493  0006EC  5007               	movf	i1HDByteReadI2C@LowAdd,w,c
  5494  0006EE  EC26  F006         	call	i1_WriteI2C1
  5495  0006F2                     i1l2216:
  5496  0006F2  A4C7               	btfss	4039,2,c	;volatile
  5497  0006F4  D003               	goto	i1u285_20
  5498  0006F6  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5499  0006F8  2A0B               	incf	??i1_HDByteReadI2C& (0+255),f,c
  5500  0006FA  D001               	goto	i1u285_28
  5501  0006FC                     i1u285_20:
  5502  0006FC  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5503  0006FE                     i1u285_28:
  5504  0006FE  50C5               	movf	4037,w,c	;volatile
  5505  000700  0B1F               	andlw	31
  5506  000702  100B               	iorwf	??i1_HDByteReadI2C,w,c
  5507  000704  0900               	iorlw	0
  5508  000706  A4D8               	btfss	status,2,c
  5509  000708  D7F4               	goto	i1l2216
  5510                           
  5511                           ;massStorage.c: 92: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN);
  5512  00070A  82C5               	bsf	4037,1,c	;volatile
  5513  00070C                     i1l381:
  5514  00070C  B2C5               	btfsc	4037,1,c	;volatile
  5515  00070E  D7FE               	goto	i1l381
  5516  000710                     i1l384:
  5517  000710  B2C5               	btfsc	4037,1,c	;volatile
  5518  000712  D7FE               	goto	i1l384
  5519                           
  5520                           ;massStorage.c: 94: WriteI2C1( ControlByte | 0x01 );
  5521  000714  500C               	movf	i1HDByteReadI2C@ControlByte,w,c
  5522  000716  0901               	iorlw	1
  5523  000718  EC26  F006         	call	i1_WriteI2C1
  5524  00071C                     i1l2220:
  5525  00071C  A4C7               	btfss	4039,2,c	;volatile
  5526  00071E  D003               	goto	i1u289_20
  5527  000720  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5528  000722  2A0B               	incf	??i1_HDByteReadI2C& (0+255),f,c
  5529  000724  D001               	goto	i1u289_28
  5530  000726                     i1u289_20:
  5531  000726  6A0B               	clrf	??i1_HDByteReadI2C& (0+255),c
  5532  000728                     i1u289_28:
  5533  000728  50C5               	movf	4037,w,c	;volatile
  5534  00072A  0B1F               	andlw	31
  5535  00072C  100B               	iorwf	??i1_HDByteReadI2C,w,c
  5536  00072E  0900               	iorlw	0
  5537  000730  A4D8               	btfss	status,2,c
  5538  000732  D7F4               	goto	i1l2220
  5539                           
  5540                           ;massStorage.c: 96: getsI2C1( data, length );
  5541  000734  C009  F003         	movff	i1HDByteReadI2C@data+1,i1getsI2C1@rdptr+1
  5542  000738  C008  F002         	movff	i1HDByteReadI2C@data,i1getsI2C1@rdptr
  5543  00073C  C00A  F004         	movff	i1HDByteReadI2C@length,i1getsI2C1@length
  5544  000740  EC34  F007         	call	i1_getsI2C1	;wreg free
  5545                           
  5546                           ;massStorage.c: 97: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  5547  000744  8AC5               	bsf	4037,5,c	;volatile
  5548  000746  88C5               	bsf	4037,4,c	;volatile
  5549  000748                     i1l390:
  5550  000748  B8C5               	btfsc	4037,4,c	;volatile
  5551  00074A  D7FE               	goto	i1l390
  5552  00074C                     i1l393:
  5553  00074C  B8C5               	btfsc	4037,4,c	;volatile
  5554  00074E  D7FE               	goto	i1l393
  5555                           
  5556                           ;massStorage.c: 99: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  5557  000750  84C5               	bsf	4037,2,c	;volatile
  5558  000752                     i1l396:
  5559  000752  B4C5               	btfsc	4037,2,c	;volatile
  5560  000754  D7FE               	goto	i1l396
  5561  000756                     i1l399:
  5562  000756  A4C5               	btfss	4037,2,c	;volatile
  5563                           
  5564                           ;massStorage.c: 101: return ( 0 );
  5565                           ;	Return value of i1_HDByteReadI2C is never used
  5566  000758  0012               	return	
  5567  00075A  D7FD               	goto	i1l399
  5568  00075C                     __end_ofi1_HDByteReadI2C:
  5569                           	opt stack 0
  5570                           pclatu	equ	0xFFB
  5571                           pclath	equ	0xFFA
  5572                           tblptru	equ	0xFF8
  5573                           tblptrh	equ	0xFF7
  5574                           tblptrl	equ	0xFF6
  5575                           tablat	equ	0xFF5
  5576                           prodh	equ	0xFF4
  5577                           prodl	equ	0xFF3
  5578                           intcon	equ	0xFF2
  5579                           intcon2	equ	0xFF1
  5580                           postinc0	equ	0xFEE
  5581                           fsr0h	equ	0xFEA
  5582                           fsr0l	equ	0xFE9
  5583                           wreg	equ	0xFE8
  5584                           postdec1	equ	0xFE5
  5585                           fsr1h	equ	0xFE2
  5586                           fsr1l	equ	0xFE1
  5587                           bsr	equ	0xFE0
  5588                           indf2	equ	0xFDF
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function i1_getsI2C1 *****************
  5594 ;; Defined at:
  5595 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1gets.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  rdptr           2    1[COMRAM] PTR unsigned char 
  5598 ;;		 -> readTestPattern@r(32), doDimStep@sc(3), readAButton@program(1), 
  5599 ;;  length          1    3[COMRAM] unsigned char 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      char 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5611 ;;      Params:         3       0       0       0       0       0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0
  5613 ;;      Temps:          1       0       0       0       0       0       0
  5614 ;;      Totals:         4       0       0       0       0       0       0
  5615 ;;Total ram usage:        4 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    3
  5618 ;; This function calls:
  5619 ;;		i1_ReadI2C1
  5620 ;; This function is called by:
  5621 ;;		i1_HDByteReadI2C
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text38
  5626  000E68                     __ptext38:
  5627                           	opt stack 0
  5628  000E68                     i1_getsI2C1:
  5629                           	opt stack 18
  5630                           
  5631                           ;incstack = 0
  5632  000E68  D024               	goto	i1l2074
  5633  000E6A                     i1l2060:
  5634  000E6A  ECE8  F008         	call	i1_ReadI2C1	;wreg free
  5635  000E6E  C002  FFD9         	movff	i1getsI2C1@rdptr,fsr2l
  5636  000E72  C003  FFDA         	movff	i1getsI2C1@rdptr+1,fsr2h
  5637  000E76  6EDF               	movwf	indf2,c
  5638  000E78  4A02               	infsnz	i1getsI2C1@rdptr,f,c
  5639  000E7A  2A03               	incf	i1getsI2C1@rdptr+1,f,c
  5640  000E7C                     i1l551:
  5641  000E7C  B6C5               	btfsc	4037,3,c	;volatile
  5642  000E7E  D7FE               	goto	i1l551
  5643  000E80  B6A1               	btfsc	4001,3,c	;volatile
  5644  000E82  0012               	return	
  5645                           
  5646                           ;	Return value of i1_getsI2C1 is never used
  5647  000E84  CFC6 F005          	movff	4038,??i1_getsI2C1	;volatile
  5648  000E88  0E0F               	movlw	15
  5649  000E8A  1605               	andwf	??i1_getsI2C1,f,c
  5650  000E8C  5005               	movf	??i1_getsI2C1,w,c
  5651  000E8E  0A08               	xorlw	8
  5652  000E90  B4D8               	btfsc	status,2,c
  5653  000E92  D008               	goto	i1l2070
  5654  000E94  CFC6 F005          	movff	4038,??i1_getsI2C1	;volatile
  5655  000E98  0E0F               	movlw	15
  5656  000E9A  1605               	andwf	??i1_getsI2C1,f,c
  5657  000E9C  5005               	movf	??i1_getsI2C1,w,c
  5658  000E9E  0A0B               	xorlw	11
  5659  000EA0  A4D8               	btfss	status,2,c
  5660  000EA2  D007               	goto	i1l2074
  5661  000EA4                     i1l2070:
  5662  000EA4  5004               	movf	i1getsI2C1@length,w,c
  5663  000EA6  B4D8               	btfsc	status,2,c
  5664  000EA8  D004               	goto	i1l2074
  5665  000EAA  9AC5               	bcf	4037,5,c	;volatile
  5666  000EAC  88C5               	bsf	4037,4,c	;volatile
  5667  000EAE                     i1l560:
  5668  000EAE  B8C5               	btfsc	4037,4,c	;volatile
  5669  000EB0  D7FE               	goto	i1l560
  5670  000EB2                     i1l2074:
  5671  000EB2  0604               	decf	i1getsI2C1@length,f,c
  5672  000EB4  2804               	incf	i1getsI2C1@length& (0+255),w,c
  5673  000EB6  B4D8               	btfsc	status,2,c
  5674                           
  5675                           ;	Return value of i1_getsI2C1 is never used
  5676  000EB8  0012               	return	
  5677  000EBA  D7D7               	goto	i1l2060
  5678  000EBC                     __end_ofi1_getsI2C1:
  5679                           	opt stack 0
  5680                           pclatu	equ	0xFFB
  5681                           pclath	equ	0xFFA
  5682                           tblptru	equ	0xFF8
  5683                           tblptrh	equ	0xFF7
  5684                           tblptrl	equ	0xFF6
  5685                           tablat	equ	0xFF5
  5686                           prodh	equ	0xFF4
  5687                           prodl	equ	0xFF3
  5688                           intcon	equ	0xFF2
  5689                           intcon2	equ	0xFF1
  5690                           postinc0	equ	0xFEE
  5691                           fsr0h	equ	0xFEA
  5692                           fsr0l	equ	0xFE9
  5693                           wreg	equ	0xFE8
  5694                           postdec1	equ	0xFE5
  5695                           fsr1h	equ	0xFE2
  5696                           fsr1l	equ	0xFE1
  5697                           bsr	equ	0xFE0
  5698                           indf2	equ	0xFDF
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function i1_ReadI2C1 *****************
  5704 ;; Defined at:
  5705 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1read.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      unsigned char 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5719 ;;      Params:         0       0       0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0
  5721 ;;      Temps:          1       0       0       0       0       0       0
  5722 ;;      Totals:         1       0       0       0       0       0       0
  5723 ;;Total ram usage:        1 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    2
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		i1_getsI2C1
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text39
  5734  0011D0                     __ptext39:
  5735                           	opt stack 0
  5736  0011D0                     i1_ReadI2C1:
  5737                           	opt stack 18
  5738                           
  5739                           ;incstack = 0
  5740  0011D0  CFC6 F001          	movff	4038,??i1_ReadI2C1	;volatile
  5741  0011D4  0E0F               	movlw	15
  5742  0011D6  1601               	andwf	??i1_ReadI2C1,f,c
  5743  0011D8  5001               	movf	??i1_ReadI2C1,w,c
  5744  0011DA  0A08               	xorlw	8
  5745  0011DC  B4D8               	btfsc	status,2,c
  5746  0011DE  D007               	goto	i1l585
  5747  0011E0  CFC6 F001          	movff	4038,??i1_ReadI2C1	;volatile
  5748  0011E4  0E0F               	movlw	15
  5749  0011E6  1601               	andwf	??i1_ReadI2C1,f,c
  5750  0011E8  5001               	movf	??i1_ReadI2C1,w,c
  5751  0011EA  0A0B               	xorlw	11
  5752  0011EC  B4D8               	btfsc	status,2,c
  5753  0011EE                     i1l585:
  5754  0011EE  86C5               	bsf	4037,3,c	;volatile
  5755  0011F0                     i1l586:
  5756  0011F0  A0C7               	btfss	4039,0,c	;volatile
  5757  0011F2  D7FE               	goto	i1l586
  5758  0011F4  50C9               	movf	4041,w,c	;volatile
  5759  0011F6  0012               	return	
  5760  0011F8                     __end_ofi1_ReadI2C1:
  5761                           	opt stack 0
  5762                           pclatu	equ	0xFFB
  5763                           pclath	equ	0xFFA
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           intcon	equ	0xFF2
  5771                           intcon2	equ	0xFF1
  5772                           postinc0	equ	0xFEE
  5773                           fsr0h	equ	0xFEA
  5774                           fsr0l	equ	0xFE9
  5775                           wreg	equ	0xFE8
  5776                           postdec1	equ	0xFE5
  5777                           fsr1h	equ	0xFE2
  5778                           fsr1l	equ	0xFE1
  5779                           bsr	equ	0xFE0
  5780                           indf2	equ	0xFDF
  5781                           fsr2h	equ	0xFDA
  5782                           fsr2l	equ	0xFD9
  5783                           status	equ	0xFD8
  5784                           
  5785 ;; *************** function i1_WriteI2C1 *****************
  5786 ;; Defined at:
  5787 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\i2c\i2c1writ.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  data_out        1    wreg     unsigned char 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  data_out        1    1[COMRAM] unsigned char 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      char 
  5794 ;; Registers used:
  5795 ;;		wreg, status,2, status,0
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5801 ;;      Params:         0       0       0       0       0       0       0
  5802 ;;      Locals:         1       0       0       0       0       0       0
  5803 ;;      Temps:          1       0       0       0       0       0       0
  5804 ;;      Totals:         2       0       0       0       0       0       0
  5805 ;;Total ram usage:        2 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    2
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		i1_HDByteReadI2C
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text40
  5816  000C4C                     __ptext40:
  5817                           	opt stack 0
  5818  000C4C                     i1_WriteI2C1:
  5819                           	opt stack 19
  5820                           
  5821                           ;incstack = 0
  5822                           ;i1WriteI2C1@data_out stored from wreg
  5823  000C4C  6E02               	movwf	i1WriteI2C1@data_out,c
  5824  000C4E  C002  FFC9         	movff	i1WriteI2C1@data_out,4041	;volatile
  5825  000C52  BEC6               	btfsc	4038,7,c	;volatile
  5826  000C54  0012               	return	
  5827                           
  5828                           ;	Return value of i1_WriteI2C1 is never used
  5829  000C56  CFC6 F001          	movff	4038,??i1_WriteI2C1	;volatile
  5830  000C5A  0E0F               	movlw	15
  5831  000C5C  1601               	andwf	??i1_WriteI2C1,f,c
  5832  000C5E  5001               	movf	??i1_WriteI2C1,w,c
  5833  000C60  0A08               	xorlw	8
  5834  000C62  B4D8               	btfsc	status,2,c
  5835  000C64  D00F               	goto	i1l2096
  5836  000C66  CFC6 F001          	movff	4038,??i1_WriteI2C1	;volatile
  5837  000C6A  0E0F               	movlw	15
  5838  000C6C  1601               	andwf	??i1_WriteI2C1,f,c
  5839  000C6E  5001               	movf	??i1_WriteI2C1,w,c
  5840  000C70  0A0B               	xorlw	11
  5841  000C72  B4D8               	btfsc	status,2,c
  5842  000C74  D007               	goto	i1l2096
  5843  000C76  88C6               	bsf	4038,4,c	;volatile
  5844  000C78                     i1l610:
  5845  000C78  A69E               	btfss	3998,3,c	;volatile
  5846  000C7A  D7FE               	goto	i1l610
  5847  000C7C  B4C7               	btfsc	4039,2,c	;volatile
  5848  000C7E  0012               	return	
  5849  000C80  50C7               	movf	4039,w,c	;volatile
  5850  000C82  0012               	return	
  5851  000C84                     i1l2096:
  5852  000C84  CFC6 F001          	movff	4038,??i1_WriteI2C1	;volatile
  5853  000C88  0E0F               	movlw	15
  5854  000C8A  1601               	andwf	??i1_WriteI2C1,f,c
  5855  000C8C  5001               	movf	??i1_WriteI2C1,w,c
  5856  000C8E  0A08               	xorlw	8
  5857  000C90  B4D8               	btfsc	status,2,c
  5858  000C92  D008               	goto	i1l619
  5859  000C94  CFC6 F001          	movff	4038,??i1_WriteI2C1	;volatile
  5860  000C98  0E0F               	movlw	15
  5861  000C9A  1601               	andwf	??i1_WriteI2C1,f,c
  5862  000C9C  5001               	movf	??i1_WriteI2C1,w,c
  5863  000C9E  0A0B               	xorlw	11
  5864  000CA0  A4D8               	btfss	status,2,c
  5865  000CA2  0012               	return	
  5866  000CA4                     i1l619:
  5867  000CA4  B0C7               	btfsc	4039,0,c	;volatile
  5868  000CA6  D7FE               	goto	i1l619
  5869  000CA8                     i1l2100:
  5870  000CA8  A4C7               	btfss	4039,2,c	;volatile
  5871  000CAA  D003               	goto	i1u234_20
  5872  000CAC  6A01               	clrf	??i1_WriteI2C1& (0+255),c
  5873  000CAE  2A01               	incf	??i1_WriteI2C1& (0+255),f,c
  5874  000CB0  D001               	goto	i1u234_28
  5875  000CB2                     i1u234_20:
  5876  000CB2  6A01               	clrf	??i1_WriteI2C1& (0+255),c
  5877  000CB4                     i1u234_28:
  5878  000CB4  50C5               	movf	4037,w,c	;volatile
  5879  000CB6  0B1F               	andlw	31
  5880  000CB8  1001               	iorwf	??i1_WriteI2C1,w,c
  5881  000CBA  0900               	iorlw	0
  5882  000CBC  A4D8               	btfss	status,2,c
  5883  000CBE  D7F4               	goto	i1l2100
  5884  000CC0  50C5               	movf	4037,w,c	;volatile
  5885  000CC2  0012               	return	
  5886  000CC4                     __end_ofi1_WriteI2C1:
  5887                           	opt stack 0
  5888                           pclatu	equ	0xFFB
  5889                           pclath	equ	0xFFA
  5890                           tblptru	equ	0xFF8
  5891                           tblptrh	equ	0xFF7
  5892                           tblptrl	equ	0xFF6
  5893                           tablat	equ	0xFF5
  5894                           prodh	equ	0xFF4
  5895                           prodl	equ	0xFF3
  5896                           intcon	equ	0xFF2
  5897                           intcon2	equ	0xFF1
  5898                           postinc0	equ	0xFEE
  5899                           fsr0h	equ	0xFEA
  5900                           fsr0l	equ	0xFE9
  5901                           wreg	equ	0xFE8
  5902                           postdec1	equ	0xFE5
  5903                           fsr1h	equ	0xFE2
  5904                           fsr1l	equ	0xFE1
  5905                           bsr	equ	0xFE0
  5906                           indf2	equ	0xFDF
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _high_isr *****************
  5912 ;; Defined at:
  5913 ;;		line 13 in file "interrupts.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  data            1   17[BANK0 ] unsigned char 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;		None               void
  5920 ;; Registers used:
  5921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5927 ;;      Params:         0       0       0       0       0       0       0
  5928 ;;      Locals:         0       1       0       0       0       0       0
  5929 ;;      Temps:          0      14       0       0       0       0       0
  5930 ;;      Totals:         0      15       0       0       0       0       0
  5931 ;;Total ram usage:       15 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    1
  5934 ;; This function calls:
  5935 ;;		_buttonsReset
  5936 ;;		_fifoPut
  5937 ;; This function is called by:
  5938 ;;		Interrupt level 2
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	intcode
  5943  000008                     __pintcode:
  5944                           	opt stack 0
  5945  000008                     _high_isr:
  5946                           	opt stack 18
  5947                           
  5948                           ;incstack = 0
  5949  000008  CFFA F0A6          	movff	pclath,??_high_isr
  5950  00000C  CFFB F0A7          	movff	pclatu,??_high_isr+1
  5951  000010  CFE9 F0A8          	movff	fsr0l,??_high_isr+2
  5952  000014  EFE5  F005         	goto	int_func
  5953                           pclatu	equ	0xFFB
  5954                           pclath	equ	0xFFA
  5955                           tblptru	equ	0xFF8
  5956                           tblptrh	equ	0xFF7
  5957                           tblptrl	equ	0xFF6
  5958                           tablat	equ	0xFF5
  5959                           prodh	equ	0xFF4
  5960                           prodl	equ	0xFF3
  5961                           intcon	equ	0xFF2
  5962                           intcon2	equ	0xFF1
  5963                           postinc0	equ	0xFEE
  5964                           fsr0h	equ	0xFEA
  5965                           fsr0l	equ	0xFE9
  5966                           wreg	equ	0xFE8
  5967                           postdec1	equ	0xFE5
  5968                           fsr1h	equ	0xFE2
  5969                           fsr1l	equ	0xFE1
  5970                           bsr	equ	0xFE0
  5971                           indf2	equ	0xFDF
  5972                           fsr2h	equ	0xFDA
  5973                           fsr2l	equ	0xFD9
  5974                           status	equ	0xFD8
  5975                           
  5976                           	psect	intcode_body
  5977  000BCA                     __pintcode_body:
  5978                           	opt stack 18
  5979  000BCA                     int_func:
  5980                           	opt stack 18
  5981  000BCA  CFEA F0A9          	movff	fsr0h,??_high_isr+3
  5982  000BCE  CFE1 F0AA          	movff	fsr1l,??_high_isr+4
  5983  000BD2  CFE2 F0AB          	movff	fsr1h,??_high_isr+5
  5984  000BD6  CFD9 F0AC          	movff	fsr2l,??_high_isr+6
  5985  000BDA  CFDA F0AD          	movff	fsr2h,??_high_isr+7
  5986  000BDE  CFF3 F0AE          	movff	prodl,??_high_isr+8
  5987  000BE2  CFF4 F0AF          	movff	prodh,??_high_isr+9
  5988  000BE6  CFF6 F0B0          	movff	tblptrl,??_high_isr+10
  5989  000BEA  CFF7 F0B1          	movff	tblptrh,??_high_isr+11
  5990  000BEE  CFF8 F0B2          	movff	tblptru,??_high_isr+12
  5991  000BF2  CFF5 F0B3          	movff	tablat,??_high_isr+13
  5992                           
  5993                           ;interrupts.c: 15: unsigned char data;
  5994                           ;interrupts.c: 21: if (PIR1bits.RCIF == 1) {
  5995  000BF6  AA9E               	btfss	3998,5,c	;volatile
  5996  000BF8  D007               	goto	i2l2996
  5997                           
  5998                           ;interrupts.c: 23: data = RCREG;
  5999  000BFA  CFAE F0B4          	movff	4014,high_isr@data	;volatile
  6000                           
  6001                           ;interrupts.c: 24: fifoPut(data);
  6002  000BFE  0100               	movlb	0	; () banked
  6003  000C00  51B4               	movf	high_isr@data& (0+255),w,b
  6004  000C02  ECFC  F008         	call	_fifoPut
  6005                           
  6006                           ;interrupts.c: 25: PIR1bits.RCIF = 0;
  6007  000C06  9A9E               	bcf	3998,5,c	;volatile
  6008  000C08                     i2l2996:
  6009                           
  6010                           ;interrupts.c: 26: }
  6011                           ;interrupts.c: 32: if ( INTCONbits.T0IF == 1) {
  6012  000C08  A4F2               	btfss	intcon,2,c	;volatile
  6013  000C0A  D003               	goto	i2l25
  6014                           
  6015                           ;interrupts.c: 34: buttonsReset();
  6016  000C0C  EC55  F005         	call	_buttonsReset	;wreg free
  6017                           
  6018                           ;interrupts.c: 35: INTCONbits.T0IF = 0;
  6019  000C10  94F2               	bcf	intcon,2,c	;volatile
  6020  000C12                     i2l25:
  6021  000C12  C0B3  FFF5         	movff	??_high_isr+13,tablat
  6022  000C16  C0B2  FFF8         	movff	??_high_isr+12,tblptru
  6023  000C1A  C0B1  FFF7         	movff	??_high_isr+11,tblptrh
  6024  000C1E  C0B0  FFF6         	movff	??_high_isr+10,tblptrl
  6025  000C22  C0AF  FFF4         	movff	??_high_isr+9,prodh
  6026  000C26  C0AE  FFF3         	movff	??_high_isr+8,prodl
  6027  000C2A  C0AD  FFDA         	movff	??_high_isr+7,fsr2h
  6028  000C2E  C0AC  FFD9         	movff	??_high_isr+6,fsr2l
  6029  000C32  C0AB  FFE2         	movff	??_high_isr+5,fsr1h
  6030  000C36  C0AA  FFE1         	movff	??_high_isr+4,fsr1l
  6031  000C3A  C0A9  FFEA         	movff	??_high_isr+3,fsr0h
  6032  000C3E  C0A8  FFE9         	movff	??_high_isr+2,fsr0l
  6033  000C42  C0A7  FFFB         	movff	??_high_isr+1,pclatu
  6034  000C46  C0A6  FFFA         	movff	??_high_isr,pclath
  6035  000C4A  0011               	retfie		f
  6036  000C4C                     __end_of_high_isr:
  6037                           	opt stack 0
  6038                           pclatu	equ	0xFFB
  6039                           pclath	equ	0xFFA
  6040                           tblptru	equ	0xFF8
  6041                           tblptrh	equ	0xFF7
  6042                           tblptrl	equ	0xFF6
  6043                           tablat	equ	0xFF5
  6044                           prodh	equ	0xFF4
  6045                           prodl	equ	0xFF3
  6046                           intcon	equ	0xFF2
  6047                           intcon2	equ	0xFF1
  6048                           postinc0	equ	0xFEE
  6049                           fsr0h	equ	0xFEA
  6050                           fsr0l	equ	0xFE9
  6051                           wreg	equ	0xFE8
  6052                           postdec1	equ	0xFE5
  6053                           fsr1h	equ	0xFE2
  6054                           fsr1l	equ	0xFE1
  6055                           bsr	equ	0xFE0
  6056                           indf2	equ	0xFDF
  6057                           fsr2h	equ	0xFDA
  6058                           fsr2l	equ	0xFD9
  6059                           status	equ	0xFD8
  6060                           
  6061 ;; *************** function _fifoPut *****************
  6062 ;; Defined at:
  6063 ;;		line 53 in file "fifo.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  in              1    wreg     unsigned char 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  in              1    2[BANK0 ] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;		None               void
  6070 ;; Registers used:
  6071 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6077 ;;      Params:         0       0       0       0       0       0       0
  6078 ;;      Locals:         0       1       0       0       0       0       0
  6079 ;;      Temps:          0       2       0       0       0       0       0
  6080 ;;      Totals:         0       3       0       0       0       0       0
  6081 ;;Total ram usage:        3 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_high_isr
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text42
  6091  0011F8                     __ptext42:
  6092                           	opt stack 0
  6093  0011F8                     _fifoPut:
  6094                           	opt stack 18
  6095                           
  6096                           ;incstack = 0
  6097                           ;fifoPut@in stored from wreg
  6098  0011F8  0100               	movlb	0	; () banked
  6099  0011FA  6FA5               	movwf	fifoPut@in& (0+255),b
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;fifo.c: 59: fifo[fifoIn++ & 0x0F] = in;
  6103  0011FC  503F               	movf	_fifoIn,w,c
  6104  0011FE  0B0F               	andlw	15
  6105  001200  0100               	movlb	0	; () banked
  6106  001202  6FA3               	movwf	??_fifoPut& (0+255),b
  6107  001204  6BA4               	clrf	(??_fifoPut+1)& (0+255),b
  6108  001206  0E2B               	movlw	low _fifo
  6109  001208  0100               	movlb	0	; () banked
  6110  00120A  25A3               	addwf	??_fifoPut& (0+255),w,b
  6111  00120C  6ED9               	movwf	fsr2l,c
  6112  00120E  0E00               	movlw	high _fifo
  6113  001210  0100               	movlb	0	; () banked
  6114  001212  21A4               	addwfc	(??_fifoPut+1)& (0+255),w,b
  6115  001214  6EDA               	movwf	fsr2h,c
  6116  001216  0100               	movlb	0	; () banked
  6117  001218  C0A5  FFDF         	movff	fifoPut@in,indf2
  6118                           
  6119                           ; BSR set to: 0
  6120  00121C  2A3F               	incf	_fifoIn,f,c
  6121                           
  6122                           ; BSR set to: 0
  6123  00121E  0012               	return	
  6124  001220                     __end_of_fifoPut:
  6125                           	opt stack 0
  6126                           pclatu	equ	0xFFB
  6127                           pclath	equ	0xFFA
  6128                           tblptru	equ	0xFF8
  6129                           tblptrh	equ	0xFF7
  6130                           tblptrl	equ	0xFF6
  6131                           tablat	equ	0xFF5
  6132                           prodh	equ	0xFF4
  6133                           prodl	equ	0xFF3
  6134                           intcon	equ	0xFF2
  6135                           intcon2	equ	0xFF1
  6136                           postinc0	equ	0xFEE
  6137                           fsr0h	equ	0xFEA
  6138                           fsr0l	equ	0xFE9
  6139                           wreg	equ	0xFE8
  6140                           postdec1	equ	0xFE5
  6141                           fsr1h	equ	0xFE2
  6142                           fsr1l	equ	0xFE1
  6143                           bsr	equ	0xFE0
  6144                           indf2	equ	0xFDF
  6145                           fsr2h	equ	0xFDA
  6146                           fsr2l	equ	0xFD9
  6147                           status	equ	0xFD8
  6148                           
  6149 ;; *************** function _buttonsReset *****************
  6150 ;; Defined at:
  6151 ;;		line 139 in file "buttons.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  bp              2    1[BANK0 ] PTR struct button
  6156 ;;		 -> buttons(256), 
  6157 ;;  i               1    0[BANK0 ] unsigned char 
  6158 ;; Return value:  Size  Location     Type
  6159 ;;		None               void
  6160 ;; Registers used:
  6161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6167 ;;      Params:         0       0       0       0       0       0       0
  6168 ;;      Locals:         0       3       0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0
  6170 ;;      Totals:         0       3       0       0       0       0       0
  6171 ;;Total ram usage:        3 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_high_isr
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text43
  6181  000AAA                     __ptext43:
  6182                           	opt stack 0
  6183  000AAA                     _buttonsReset:
  6184                           	opt stack 18
  6185                           
  6186                           ;buttons.c: 141: unsigned char i;
  6187                           ;buttons.c: 143: BUTTON *bp = buttons;
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;incstack = 0
  6191  000AAA  0101               	movlb	1	; () banked
  6192  000AAC  0E01               	movlw	high _buttons
  6193  000AAE  0100               	movlb	0	; () banked
  6194  000AB0  6FA5               	movwf	(buttonsReset@bp+1)& (0+255),b
  6195  000AB2  0101               	movlb	1	; () banked
  6196  000AB4  0E00               	movlw	low _buttons
  6197  000AB6  0100               	movlb	0	; () banked
  6198  000AB8  6FA4               	movwf	buttonsReset@bp& (0+255),b
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;buttons.c: 145: for ( i = 0; i < 64; i++) {
  6202  000ABA  0E00               	movlw	0
  6203  000ABC  0100               	movlb	0	; () banked
  6204  000ABE  6FA3               	movwf	buttonsReset@i& (0+255),b
  6205                           
  6206                           ; BSR set to: 0
  6207  000AC0  0E3F               	movlw	63
  6208  000AC2  0100               	movlb	0	; () banked
  6209  000AC4  65A3               	cpfsgt	buttonsReset@i& (0+255),b
  6210  000AC6  D001               	goto	i2l2796
  6211  000AC8  0012               	return	
  6212  000ACA                     i2l2796:
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;buttons.c: 147: if (bp -> watchdog > 5) {
  6216  000ACA  0100               	movlb	0	; () banked
  6217  000ACC  EE20 F003          	lfsr	2,3
  6218  000AD0  0100               	movlb	0	; () banked
  6219  000AD2  51A4               	movf	buttonsReset@bp& (0+255),w,b
  6220  000AD4  26D9               	addwf	fsr2l,f,c
  6221  000AD6  0100               	movlb	0	; () banked
  6222  000AD8  51A5               	movf	(buttonsReset@bp+1)& (0+255),w,b
  6223  000ADA  22DA               	addwfc	fsr2h,f,c
  6224  000ADC  0E05               	movlw	5
  6225  000ADE  64DF               	cpfsgt	indf2,c
  6226  000AE0  D00C               	goto	i2l2800
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;buttons.c: 148: bp -> isActive = 0;
  6230  000AE2  0100               	movlb	0	; () banked
  6231  000AE4  EE20 F002          	lfsr	2,2
  6232  000AE8  0100               	movlb	0	; () banked
  6233  000AEA  51A4               	movf	buttonsReset@bp& (0+255),w,b
  6234  000AEC  26D9               	addwf	fsr2l,f,c
  6235  000AEE  0100               	movlb	0	; () banked
  6236  000AF0  51A5               	movf	(buttonsReset@bp+1)& (0+255),w,b
  6237  000AF2  22DA               	addwfc	fsr2h,f,c
  6238  000AF4  0E00               	movlw	0
  6239  000AF6  6EDF               	movwf	indf2,c
  6240                           
  6241                           ;buttons.c: 149: }
  6242  000AF8  D016               	goto	i2l2804
  6243  000AFA                     i2l2800:
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;buttons.c: 150: else {
  6247                           ;buttons.c: 151: if (bp -> isActive) {
  6248  000AFA  0100               	movlb	0	; () banked
  6249  000AFC  EE20 F002          	lfsr	2,2
  6250  000B00  0100               	movlb	0	; () banked
  6251  000B02  51A4               	movf	buttonsReset@bp& (0+255),w,b
  6252  000B04  26D9               	addwf	fsr2l,f,c
  6253  000B06  0100               	movlb	0	; () banked
  6254  000B08  51A5               	movf	(buttonsReset@bp+1)& (0+255),w,b
  6255  000B0A  22DA               	addwfc	fsr2h,f,c
  6256  000B0C  50DF               	movf	indf2,w,c
  6257  000B0E  B4D8               	btfsc	status,2,c
  6258  000B10  D00A               	goto	i2l2804
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;buttons.c: 152: bp -> watchdog++;
  6262  000B12  0100               	movlb	0	; () banked
  6263  000B14  EE20 F003          	lfsr	2,3
  6264  000B18  0100               	movlb	0	; () banked
  6265  000B1A  51A4               	movf	buttonsReset@bp& (0+255),w,b
  6266  000B1C  26D9               	addwf	fsr2l,f,c
  6267  000B1E  0100               	movlb	0	; () banked
  6268  000B20  51A5               	movf	(buttonsReset@bp+1)& (0+255),w,b
  6269  000B22  22DA               	addwfc	fsr2h,f,c
  6270  000B24  2ADF               	incf	indf2,f,c
  6271  000B26                     i2l2804:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;buttons.c: 153: }
  6275                           ;buttons.c: 154: }
  6276                           ;buttons.c: 155: bp++;
  6277  000B26  0E04               	movlw	4
  6278  000B28  0100               	movlb	0	; () banked
  6279  000B2A  27A4               	addwf	buttonsReset@bp& (0+255),f,b
  6280  000B2C  0E00               	movlw	0
  6281  000B2E  0100               	movlb	0	; () banked
  6282  000B30  23A5               	addwfc	(buttonsReset@bp+1)& (0+255),f,b
  6283                           
  6284                           ; BSR set to: 0
  6285  000B32  0100               	movlb	0	; () banked
  6286  000B34  2BA3               	incf	buttonsReset@i& (0+255),f,b
  6287                           
  6288                           ; BSR set to: 0
  6289  000B36  0E3F               	movlw	63
  6290  000B38  0100               	movlb	0	; () banked
  6291  000B3A  65A3               	cpfsgt	buttonsReset@i& (0+255),b
  6292  000B3C  D7C6               	goto	i2l2796
  6293  000B3E  0012               	return	
  6294  000B40                     __end_of_buttonsReset:
  6295                           	opt stack 0
  6296  0000                     pclatu	equ	0xFFB
  6297                           pclath	equ	0xFFA
  6298                           tblptru	equ	0xFF8
  6299                           tblptrh	equ	0xFF7
  6300                           tblptrl	equ	0xFF6
  6301                           tablat	equ	0xFF5
  6302                           prodh	equ	0xFF4
  6303                           prodl	equ	0xFF3
  6304                           intcon	equ	0xFF2
  6305                           intcon2	equ	0xFF1
  6306                           postinc0	equ	0xFEE
  6307                           fsr0h	equ	0xFEA
  6308                           fsr0l	equ	0xFE9
  6309                           wreg	equ	0xFE8
  6310                           postdec1	equ	0xFE5
  6311                           fsr1h	equ	0xFE2
  6312                           fsr1l	equ	0xFE1
  6313                           bsr	equ	0xFE0
  6314                           indf2	equ	0xFDF
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           pclatu	equ	0xFFB
  6319                           pclath	equ	0xFFA
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           prodh	equ	0xFF4
  6325                           prodl	equ	0xFF3
  6326                           intcon	equ	0xFF2
  6327                           intcon2	equ	0xFF1
  6328                           postinc0	equ	0xFEE
  6329                           fsr0h	equ	0xFEA
  6330                           fsr0l	equ	0xFE9
  6331                           wreg	equ	0xFE8
  6332                           postdec1	equ	0xFE5
  6333                           fsr1h	equ	0xFE2
  6334                           fsr1l	equ	0xFE1
  6335                           bsr	equ	0xFE0
  6336                           indf2	equ	0xFDF
  6337                           fsr2h	equ	0xFDA
  6338                           fsr2l	equ	0xFD9
  6339                           status	equ	0xFD8
  6340                           
  6341                           	psect	param0
  6342  0000                     pclatu	equ	0xFFB
  6343                           pclath	equ	0xFFA
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           intcon	equ	0xFF2
  6351                           intcon2	equ	0xFF1
  6352                           postinc0	equ	0xFEE
  6353                           fsr0h	equ	0xFEA
  6354                           fsr0l	equ	0xFE9
  6355                           wreg	equ	0xFE8
  6356                           postdec1	equ	0xFE5
  6357                           fsr1h	equ	0xFE2
  6358                           fsr1l	equ	0xFE1
  6359                           bsr	equ	0xFE0
  6360                           indf2	equ	0xFDF
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         346
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      65
    BANK0           160     63     130
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    getsI2C1@rdptr	PTR unsigned char  size(2) Largest target is 32
		 -> readTestPattern@r(BANK0[32]), doDimStep@sc(COMRAM[3]), readAButton@program(BANK0[1]), 

    HDByteReadI2C@data	PTR unsigned char  size(2) Largest target is 32
		 -> readTestPattern@r(BANK0[32]), doDimStep@sc(COMRAM[3]), readAButton@program(BANK0[1]), 

    storeASceneChannel@scp	PTR struct _scenechannel size(2) Largest target is 3
		 -> storeSomeScenes@sc(BANK0[3]), 

    readSceneChannel@scp	PTR struct _scenechannel size(2) Largest target is 3
		 -> doDimStep@sc(COMRAM[3]), 

    buttonsReset@bp	PTR struct button size(2) Largest target is 256
		 -> buttons(BANK1[256]), 

    decodeButton@bp	PTR struct button size(2) Largest target is 256
		 -> NULL(NULL[0]), buttons(BANK1[256]), 

    buttonReceived@bp	PTR struct button size(2) Largest target is 256
		 -> NULL(NULL[0]), buttons(BANK1[256]), 

    initButton@bp	PTR struct button size(2) Largest target is 256
		 -> buttons(BANK1[256]), 

    sp__findButton	PTR struct button size(2) Largest target is 256
		 -> NULL(NULL[0]), buttons(BANK1[256]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_doDimStep
    _doDimStep->_readSceneChannel
    _readSceneChannel->i1_HDByteReadI2C
    i1_sceneAdress->i1___wmul
    i1_HDByteReadI2C->i1_getsI2C1
    i1_getsI2C1->i1_ReadI2C1

Critical Paths under _main in BANK0

    _main->_readTestPattern
    _storeSomeScenes->_storeASceneChannel
    _storeASceneChannel->_sceneAdress
    _sceneAdress->___wmul
    _readTestPattern->_HDByteReadI2C
    _initI2C->_OpenI2C1
    _initFlashButtonMatrix->_storeAButton
    _storeAButton->_HDByteWriteI2C
    _HDByteWriteI2C->_EEAckPolling1
    _EEAckPolling1->_WriteI2C1
    _initAllButtons->_readAButton
    _readAButton->_HDByteReadI2C
    _HDByteReadI2C->_getsI2C1
    _getsI2C1->_ReadI2C1
    _buttonByteReceived->_decodeButton
    _decodeButton->_findButton

Critical Paths under _high_isr in BANK0

    _high_isr->_buttonsReset
    _high_isr->_fifoPut

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13053
                 _buttonByteReceived
                         _doDimStart
                          _fifoEmpty
                            _fifoGet
                     _initAllButtons
                 _initButtonHardware
                 _initButtonProtocol
                        _initDMXSend
              _initFlashButtonMatrix
                       _initHardware
                            _initI2C
            _initSceneChangeHardware
                    _readTestPattern
                    _storeSomeScenes
 ---------------------------------------------------------------------------------
 (1) _storeSomeScenes                                      4     4      0    4867
                                             38 BANK0      3     3      0
                 _storeASceneChannel
 ---------------------------------------------------------------------------------
 (2) _storeASceneChannel                                   9     6      3    4240
                                             29 BANK0      9     6      3
                     _HDByteWriteI2C
                        _sceneAdress
 ---------------------------------------------------------------------------------
 (3) _sceneAdress                                          5     3      2     562
                                             24 BANK0      5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     368
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _readTestPattern                                     33    33      0    1609
                                             30 BANK0     33    33      0
                      _HDByteReadI2C
 ---------------------------------------------------------------------------------
 (1) _initSceneChangeHardware                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              0     0      0      97
                           _OpenI2C1
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     1      1      97
                                             18 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _initHardware                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initFlashButtonMatrix                                1     1      0    3690
                                             29 BANK0      1     1      0
                       _storeAButton
 ---------------------------------------------------------------------------------
 (2) _storeAButton                                         2     1      1    3591
                                             27 BANK0      2     1      1
                     _HDByteWriteI2C
 ---------------------------------------------------------------------------------
 (3) _HDByteWriteI2C                                       5     2      3    1254
                                             22 BANK0      5     2      3
                      _EEAckPolling1
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (4) _EEAckPolling1                                        2     2      0      93
                                             20 BANK0      2     2      0
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (1) _initDMXSend                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initButtonProtocol                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initButtonHardware                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAllButtons                                       4     4      0    2160
                                             32 BANK0      3     3      0
                         _initButton
                        _readAButton
 ---------------------------------------------------------------------------------
 (2) _readAButton                                          2     2      0    1578
                                             30 BANK0      2     2      0
                      _HDByteReadI2C
 ---------------------------------------------------------------------------------
 (2) _HDByteReadI2C                                        7     2      5    1473
                                             23 BANK0      7     2      5
                          _WriteI2C1
                           _getsI2C1
 ---------------------------------------------------------------------------------
 (3) _getsI2C1                                             4     1      3     356
                                             19 BANK0      4     1      3
                           _ReadI2C1
 ---------------------------------------------------------------------------------
 (4) _ReadI2C1                                             1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _WriteI2C1                                            2     2      0      31
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _initButton                                           5     3      2     350
                                             18 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _fifoGet                                              3     3      0       1
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _fifoEmpty                                            1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _doDimStart                                           1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _buttonByteReceived                                   4     4      0     607
                                             25 BANK0      4     4      0
                       _decodeButton
 ---------------------------------------------------------------------------------
 (2) _decodeButton                                         3     3      0     384
                                             22 BANK0      3     3      0
                     _buttonReceived
                         _findButton
 ---------------------------------------------------------------------------------
 (3) _findButton                                           4     2      2     161
                                             18 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _buttonReceived                                       2     0      2     158
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             17    17      0    1170
                                             25 COMRAM    17    17      0
                          _doDimStep
                            _sendDMX
 ---------------------------------------------------------------------------------
 (7) _sendDMX                                              3     3      0      24
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _doDimStep                                            4     4      0    1146
                                             21 COMRAM     4     4      0
                   _readSceneChannel
 ---------------------------------------------------------------------------------
 (8) _readSceneChannel                                     9     6      3     897
                                             12 COMRAM     9     6      3
                    i1_HDByteReadI2C
                      i1_sceneAdress
 ---------------------------------------------------------------------------------
 (9) i1_sceneAdress                                        5     3      2     303
                                              6 COMRAM     5     3      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1_HDByteReadI2C                                      7     2      5     377
                                              5 COMRAM     7     2      5
                        i1_WriteI2C1
                         i1_getsI2C1
 ---------------------------------------------------------------------------------
 (10) i1_getsI2C1                                          4     1      3     119
                                              1 COMRAM     4     1      3
                         i1_ReadI2C1
 ---------------------------------------------------------------------------------
 (11) i1_ReadI2C1                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_WriteI2C1                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           15    15      0     192
                                              3 BANK0     15    15      0
                       _buttonsReset
                            _fifoPut
 ---------------------------------------------------------------------------------
 (13) _fifoPut                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (13) _buttonsReset                                        3     3      0     136
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonByteReceived
     _decodeButton
       _buttonReceived
       _findButton
   _doDimStart
   _fifoEmpty
   _fifoGet
   _initAllButtons
     _initButton
     _readAButton
       _HDByteReadI2C
         _WriteI2C1
         _getsI2C1
           _ReadI2C1
   _initButtonHardware
   _initButtonProtocol
   _initDMXSend
   _initFlashButtonMatrix
     _storeAButton
       _HDByteWriteI2C
         _EEAckPolling1
           _WriteI2C1
         _WriteI2C1
   _initHardware
   _initI2C
     _OpenI2C1
   _initSceneChangeHardware
   _readTestPattern
     _HDByteReadI2C
       _WriteI2C1
       _getsI2C1
         _ReadI2C1
   _storeSomeScenes
     _storeASceneChannel
       _HDByteWriteI2C
         _EEAckPolling1
           _WriteI2C1
         _WriteI2C1
       _sceneAdress
         ___wmul

 _low_isr (ROOT)
   _doDimStep
     _readSceneChannel
       i1_HDByteReadI2C
         i1_WriteI2C1
         i1_getsI2C1
           i1_ReadI2C1
       i1_sceneAdress
         i1___wmul
   _sendDMX

 _high_isr (ROOT)
   _buttonsReset
   _fifoPut

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0     100       6      100.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3F      82       4       81.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      41       1       68.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C3       9        0.0%
DATA                 0      0     1C3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Oct 12 09:09:18 2014

           storeASceneChannel@scp 00C1                   _storeSomeScenes 00C2  
     initAllButtons@buttonProgram 00C4                  buttonReceived@bp 00B5  
                              bsr 000FE0               ___wmul@multiplicand 00B7  
            __end_of_decodeButton 11D0                       i1_WriteI2C1 0C4C  
                i1___wmul@product 0005                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                               l330 05CE  
                             l333 05D2                               l351 0674  
                             l520 0A62                               l505 0A32  
                             l610 0906                               l363 04CE  
                             l523 0A66                               l515 0A58  
                             l532 0A96                               l508 0A36  
                             l348 0670                               l381 054E  
                             l390 0596                               l366 04D2  
                             l518 0A90                               l551 0DBA  
                             l375 0522                               l535 0A9A  
                             l519 0A60                               l560 0DF6  
                             l384 0552                               l528 0A88  
                             l393 059A                               l619 0940  
                             l396 05A0                               l399 05A4  
                             l585 119C                               l586 119E  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
         storeASceneChannel@scene 00C6                        i1_getsI2C1 0E68  
                             prod 000FF3                               wreg 000FE8  
             HDByteReadI2C@LowAdd 00BB                      __CFG_LVP$OFF 000000  
           __size_of_storeAButton 001A                      ?_initDMXSend 0001  
                            l3028 0F4A                              l2612 0A42  
                            l2604 0A12                              l2700 0604  
                            l2710 0678                              l2560 08DC  
                            l2624 0A72                              l2704 062A  
                            l2642 0DA6                              l2730 0560  
                            l2722 0504                              l2714 04AE  
                            l2652 0DEA                              l2636 0AA6  
                            l2708 0650                              l2670 0E14  
                            l2590 096A                              l2582 0944  
                            l2574 0914                              l2726 052E  
                            l2718 04DE                              l2656 0DFA  
                            l2578 0918                              l2676 0E4E  
                            l2924 102C                              l2692 05AE  
                            l2836 0310                              l2696 05DE  
                            l2970 0B5C                              l2986 0BC2  
                            l2978 0B82                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            u4000 0636                              u4020 065C  
                            u4110 04EA                              u4200 056C  
                            u4008 063A                  sceneAdress@scene 00BD  
                            u4130 0510                              u4028 0660  
                            u4118 04EE                              u4070 04BA  
                            u4208 0570                              u4160 053A  
                            u4138 0514                              u4078 04BE  
                            u4360 12C8                              u4168 053E  
                            u4265 0D6A                              u3650 0A1E  
                            i1l30 0078                              u3590 0950  
                            u3920 05BA                              u3658 0A22  
                            u3598 0954                              u3960 05EA  
                            u3928 05BE                              i2l25 0C12  
                            u3980 0610                              u3968 05EE  
                            u3988 0614               HDByteReadI2C@length 00BE  
            HDByteReadI2C@HighAdd 00BA                              _fifo 002B  
                            _main 0F0E                      ?_readAButton 0001  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 00BE                     __CFG_IESO$OFF 000000  
                    high_isr@data 00B4  __size_of_initSceneChangeHardware 0010  
                   _protocolState 00A2                     _HDByteReadI2C 04AA  
                           ?_main 0001                             _T1CON 000FCD  
                           _T3CON 000FB1                      _storeAButton 12CC  
                           i1l153 08A4                             i1l146 0848  
                           i1l610 0C78                             i1l363 06A4  
                           i1l381 070C                             i1l390 0748  
                           i1l366 06A8                             i1l551 0E7C  
                           i1l375 06E8                             i1l560 0EAE  
                           i1l384 0710                             i1l393 074C  
                           i1l619 0CA4                             i1l396 0752  
                           i1l399 0756                             i1l585 11EE  
                           i1l586 11F0                             _RCREG 000FAE  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _TMR3H 000FB3                             _TMR1L 000FCE  
                           _TMR3L 000FB2                             _PORTA 000F80  
                           _PORTB 000F81                             _PORTC 000F82  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TXREG 000FAD  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                 __end_of_fifoGet 1146                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                   __end_of_fifoPut 1220  
                  __CFG_EBTR1$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                 __end_of_initI2C 12F8                       ?i1_ReadI2C1 0001  
                  __CFG_EBTRB$OFF 000000                   __end_of_sendDMX 08CC  
              storeAButton@button 00BF                   __end_of_low_isr 00BE  
                           tablat 000FF5                  __end_ofi1___wmul 1246  
               readAButton@button 00C1                             status 000FD8  
             i1___wmul@multiplier 0001                      ?_sceneAdress 00BB  
         __end_of_storeSomeScenes 02EE               i1HDByteReadI2C@data 0008  
                   ?_initHardware 0001                  _readSceneChannel 1032  
                 __initialization 10A4                      __end_of_main 0F5E  
                __end_of_ReadI2C1 11A6                    ?_HDByteReadI2C 00BA  
                decodeButton@code 00B9           __size_of_initAllButtons 0042  
                __end_of_OpenI2C1 12AE                            ??_main 00E2  
         i1sceneAdress@baseAdress 000A                     __activetblptr 000002  
                     ?i1_getsI2C1 0002                sceneAdress@channel 00BB  
                 _readTestPattern 0EBC                            _ANSELB 000F39  
              _initButtonHardware 126A         HDByteWriteI2C@ControlByte 00BD  
                     initButton@i 00B7                            i1l2100 0CA8  
                          i1l2060 0E6A                            i1l2220 071C  
                          i1l2212 06D0                            i1l2204 068A  
                          i1l2070 0EA4                            i1l2302 08B0  
                          i1l2216 06F2                            i1l2208 06B2  
                          i1l2074 0EB2                            i1l2314 0984  
                          i1l2308 0974                            i1l2326 09EE  
                          i1l2096 0C84                            i1l2328 0A04  
                          i1l2272 0832                            i1l2264 0824  
                          i1l2292 088E                            i1l2284 0866  
                          i1l2460 0066                            i1l2286 0884  
                  __CFG_WDTEN$OFF 000000                            i2l2800 0AFA  
                          i2l2804 0B26                            i2l2796 0ACA  
                          i2l2996 0C08                            _OSCCON 000FD3  
                          _SPBRG1 000FAF                            _SPBRGH 000FB0  
                          _SSPADD 000FC8       __size_of_storeASceneChannel 00C6  
                  _HDByteWriteI2C 05AA               ?_initButtonHardware 0001  
           __end_of_EEAckPolling1 0AAA                    ??_initHardware 00B5  
                __end_of_getsI2C1 0E08                     ?_buttonsReset 0001  
                  __CFG_XINST$OFF 000000             __size_of_decodeButton 002A  
                __end_of_high_isr 0C4C         initAllButtons@buttonIndex 00C3  
                          ___wmul 10DA                    __CFG_STVREN$ON 000000  
             __size_ofi1_ReadI2C1 0028                            _fifoIn 003F  
                          _device 00A1                _initButtonProtocol 1316  
                          _button 00A0    __size_of_initFlashButtonMatrix 01BC  
                          clear_0 10AC                            clear_1 10BE  
                          clear_2 10CA     __end_of_initFlashButtonMatrix 04AA  
                       ??_fifoGet 00B5                         ??_fifoPut 00A3  
                       ??_initI2C 00B7              ??_initButtonHardware 00B5  
                 i1_HDByteReadI2C 0688                i1sceneAdress@scene 0009  
                       ??_sendDMX 0001               ?_initButtonProtocol 0001  
             storeAButton@program 00BE               i1WriteI2C1@data_out 0002  
                       ??_low_isr 001A                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
              readAButton@program 00C2        buttonByteReceived@checksum 00BD  
          __end_of_HDByteWriteI2C 0688                __size_of_WriteI2C1 00A2  
                    _decodeButton 11A6              __size_of_initDMXSend 0024  
                      __accesstop 0060           __end_of__initialization 10D0  
                  ??_buttonsReset 00A3                  ?_storeSomeScenes 0001  
            ??_initButtonProtocol 00B5                __size_of_doDimStep 00A0  
            __size_of_readAButton 0030                   ??_HDByteReadI2C 00BF  
             __size_ofi1_getsI2C1 0054           _initSceneChangeHardware 12F8  
                  __pcstackCOMRAM 0001                      _channelLevel 0060  
                    ?i1_WriteI2C1 0001                         ?i1___wmul 0001  
                      _doDimStart 1308           __end_of_readTestPattern 0F0E  
              __size_of_fifoEmpty 001E        __end_of_buttonByteReceived 0BCA  
          __size_ofi1_sceneAdress 004C             sceneAdress@baseAdress 00BE  
                       ?_ReadI2C1 0001                        __pbssBANK0 0060  
                      __pbssBANK1 0100                   ?_HDByteWriteI2C 00B9  
                       ?_OpenI2C1 00B5              __size_of_sceneAdress 006E  
                    OpenI2C1@slew 00B5                           ?___wmul 00B5  
         __end_ofi1_HDByteReadI2C 075C                    _initAllButtons 0FF0  
            EEAckPolling1@control 00B8                           _CM1CON0 000F79  
                         _CM2CON0 000F78                        _findButton 0E08  
               __end_of_WriteI2C1 096E                        ??i1___wmul 0005  
                      doDimStep@i 0019                      initButton@bf 00B6  
                    initButton@bn 00B5                      initButton@bp 00B8  
               __end_of_doDimStep 0A0E              __end_of_initHardware 0FF0  
        __end_of_readSceneChannel 106C                      ??i1_ReadI2C1 0001  
                       ?_getsI2C1 00B6                           _SSP1BUF 000FC9  
                       ?_high_isr 0001                        ??_ReadI2C1 00B5  
               storeSomeScenes@sc 00C9                        ??_OpenI2C1 00B6  
       ??_initSceneChangeHardware 00B5                 __end_of_fifoEmpty 12CC  
                   i1_sceneAdress 0F5E                           __Hparam 0000  
                         __Lparam 0000                 _dimmingInProgress 003D  
          __end_of_initAllButtons 1032                        _initButton 0CC4  
                 __size_of___wmul 0036           __size_of_buttonReceived 0038  
              __end_ofi1_ReadI2C1 11F8               readSceneChannel@scp 000E  
                         __pcinit 10A4                           __ramtop 0600  
                         _fifoGet 1110                           _fifoOut 0040  
                         _fifoPut 11F8                           __ptext0 0F0E  
                         __ptext1 00C2                           __ptext2 075C  
                         __ptext3 0D36                           __ptext4 10DA  
                         __ptext5 0EBC                           __ptext6 12F8  
                         __ptext7 12E6                           __ptext8 128E  
                         __ptext9 0FAA                       ?_doDimStart 0001  
                       _T0CONbits 000FD5                           _initI2C 12E6  
                ?_readTestPattern 0001                         _T1CONbits 000FCD  
                    ??i1_getsI2C1 0005                           _buttons 0100  
                       _T3CONbits 000FB1                           _sendDMX 0822  
            __end_of_buttonsReset 0B40                           _low_isr 0018  
                      ??_getsI2C1 00B9                        ??_high_isr 00A6  
                  __pintcode_body 0BCA              end_of_initialization 10D0  
                   __Lmediumconst 0000                           int_func 0BCA  
                 initAllButtons@i 00C5                    ?i1_sceneAdress 0007  
                    _dmxSendState 003E                __end_ofi1_getsI2C1 0EBC  
                 ?_initAllButtons 0001                           postdec1 000FE5  
                         postinc0 000FEE                  ?i1_HDByteReadI2C 0006  
           i1___wmul@multiplicand 0003                       ?_findButton 00B5  
 __end_of_initSceneChangeHardware 1308              __size_ofi1_WriteI2C1 0078  
           i1HDByteReadI2C@LowAdd 0007                         _TRISBbits 000F93  
                       _TRISCbits 000F94            initFlashButtonMatrix@i 00C0  
           i1HDByteReadI2C@length 000A        __end_of_storeASceneChannel 0822  
             __size_of_doDimStart 000E                       ?_initButton 00B5  
                  decodeButton@bp 00BA                    __end_of___wmul 1110  
                     _BAUDCONbits 000FB8                    getsI2C1@length 00B8  
           __size_of_initHardware 0046             _initFlashButtonMatrix 02EE  
     __size_of_initButtonHardware 0024               start_initialization 10A4  
               __size_ofi1___wmul 0026            __size_of_EEAckPolling1 009C  
                ??_HDByteWriteI2C 00BC                     ??_initDMXSend 00B5  
                 ??i1_sceneAdress 0009                _buttonByteReceived 0B40  
                   ??_readAButton 00C1                 __size_of_ReadI2C1 0030  
             __size_of_findButton 0060       __size_of_initButtonProtocol 0008  
               __size_of_OpenI2C1 0020                      _initHardware 0FAA  
             ?_buttonByteReceived 0001             __end_of_HDByteReadI2C 05AA  
                        ??___wmul 00B9                    _buttonReceived 106C  
        __size_of_storeSomeScenes 022C           readSceneChannel@channel 000D  
                     _dataCounter 003B             __size_of_buttonsReset 0096  
             buttonByteReceived@b 00BF                     ?_storeAButton 00BE  
                     __pbssCOMRAM 002B                         _WriteI2C1 08CC  
                   __pcstackBANK0 00A3              ??_buttonByteReceived 00BC  
               ?_readSceneChannel 000D               __size_of_initButton 0072  
                       _doDimStep 096E                ??_readSceneChannel 0010  
               __size_of_getsI2C1 0064                 __size_of_high_isr 0C44  
                   ??_sceneAdress 00BD             HDByteWriteI2C@HighAdd 00B9  
             __end_of_initDMXSend 126A             readSceneChannel@scene 0013  
      readSceneChannel@baseAdress 0014                     _EEAckPolling1 0A0E  
                    _buttonsReset 0AAA            __end_of_buttonReceived 10A4  
             __end_of_readAButton 1176                         __pintcode 0008  
                       _fifoEmpty 12AE         storeASceneChannel@channel 00C0  
                     __pintcodelo 0018                    ??_storeAButton 00BF  
                        ?_fifoGet 0001            ?_initFlashButtonMatrix 0001  
                        ?_fifoPut 0001                      ??_doDimStart 00B5  
                        ?_initI2C 0001                          ?_sendDMX 0001  
                      ?_WriteI2C1 0001                          ?_low_isr 0001  
                      ?_doDimStep 0001                HDByteWriteI2C@data 00BB  
                     doDimStep@sc 0016                    ___wmul@product 00B9  
                        _LATCbits 000F8B                  ??_initAllButtons 00C3  
                        _IPR1bits 000F9F                          _IPR2bits 000FA2  
                        _PIE1bits 000F9D                          _PIE2bits 000FA0  
                  ?_EEAckPolling1 0001                          i1u234_20 0CB2  
              __end_of_doDimStart 1316                          i1u234_28 0CB4  
                        i1u280_20 06BC                          i1u280_28 06BE  
                        i1u282_20 06DA                          i1u282_28 06DC  
                        i1u275_25 0F82                          i1u276_20 0694  
                        i1u285_20 06FC                          i1u276_28 0696  
                        i1u285_28 06FE                          i1u289_20 0726  
                        i1u289_28 0728                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                   ?_buttonReceived 00B5  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                      ?_fifoEmpty 0001                          _SSP1CON1 000FC6  
                        _SSP1CON2 000FC5               __end_of_sceneAdress 0DA4  
                       fifoPut@in 00A5                    findButton@code 00B7  
                        _SSP1STAT 000FC7                      ??_findButton 00B7  
               ___wmul@multiplier 00B5                          i1___wmul 1220  
               HDByteReadI2C@data 00BC               readTestPattern@bank 00E1  
               ??_storeSomeScenes 00C9                       _INTCON2bits 000FF1  
                     _initDMXSend 1246                     getsI2C1@rdptr 00B6  
        __size_of_readTestPattern 0052                          _ReadI2C1 1176  
        ?_initSceneChangeHardware 0001                     ?_decodeButton 0001  
                     _readAButton 1146                          _OpenI2C1 128E  
              __end_of_findButton 0E68                          __Hparam0 0000  
                        __Lparam0 0000                      ??_initButton 00B7  
              __CFG_BOREN$SBORDIS 000000                _storeASceneChannel 075C  
                   ??i1_WriteI2C1 0001               ?_storeASceneChannel 00C0  
                __size_of_fifoGet 0036                  __size_of_fifoPut 0028  
                __size_of_initI2C 0012                       ??_WriteI2C1 00B5  
        __size_ofi1_HDByteReadI2C 00D4              HDByteWriteI2C@LowAdd 00BA  
                __size_of_sendDMX 00AA                          _getsI2C1 0DA4  
                __size_of_low_isr 00A6                          __ptext10 02EE  
                        __ptext11 12CC                          __ptext20 0DA4  
                        __ptext12 05AA                          __ptext21 1176  
                        __ptext13 0A0E                          __ptext30 106C  
                        __ptext22 08CC                          __ptext14 1246  
                        __ptext23 0CC4                          __ptext15 1316  
                        __ptext40 0C4C                          __ptext32 0822  
                        __ptext24 1110                          __ptext16 126A  
                        __ptext33 096E                          __ptext25 12AE  
                        __ptext17 0FF0                          __ptext42 11F8  
                        __ptext34 1032                          __ptext26 1308  
                        __ptext18 1146                          __ptext43 0AAA  
                        __ptext35 0F5E                          __ptext27 0B40  
                        __ptext19 04AA                          __ptext36 1220  
                        __ptext28 11A6                          __ptext37 0688  
                        __ptext29 0E08                          __ptext38 0E68  
                        __ptext39 11D0                      _SSP1CON1bits 000FC6  
                    _SSP1CON2bits 000FC5                          _high_isr 0008  
                     ??_doDimStep 0016                       _sendDMX$953 0002  
                i1getsI2C1@length 0004                    ??_decodeButton 00B9  
              __end_of_initButton 0D36                  readTestPattern@r 00C1  
            ??_storeASceneChannel 00C3                   ??_EEAckPolling1 00B7  
                   __size_of_main 0050              __end_of_storeAButton 12E6  
                     _sceneAdress 0D36                    buttonsReset@bp 00A4  
               WriteI2C1@data_out 00B6                          fifoGet@v 00B7  
                     ??_fifoEmpty 00B5                      _SSP1STATbits 000FC7  
      __end_of_initButtonHardware 128E                 OpenI2C1@sync_mode 00B6  
                      _INTCONbits 000FF2               __end_ofi1_WriteI2C1 0CC4  
            i1sceneAdress@channel 0007          HDByteReadI2C@ControlByte 00C0  
                        intlevel1 0000                          intlevel2 0000  
                     _targetScene 0041        __end_of_initButtonProtocol 131E  
                 i1getsI2C1@rdptr 0002             __end_ofi1_sceneAdress 0FAA  
               ??_readTestPattern 00C1                     buttonsReset@i 00A3  
                      _OSCCONbits 000FD3         __size_of_readSceneChannel 003A  
    storeASceneChannel@baseAdress 00C7           ??_initFlashButtonMatrix 00C0  
      i1HDByteReadI2C@ControlByte 000C            buttonByteReceived@code 00BE  
     __size_of_buttonByteReceived 008A                       findButton@i 00B8  
                     _SSPCON2bits 000FC5                        i1_ReadI2C1 11D0  
               doDimStart@program 00B5            __size_of_HDByteReadI2C 0100  
               ??i1_HDByteReadI2C 000B            i1HDByteReadI2C@HighAdd 0006  
                ??_buttonReceived 00B7                 __CFG_FOSC$INTIO67 000000  
         __size_of_HDByteWriteI2C 00DE  
